' Gambas module file

' Description:
' ServerStats.module
' Support for server statistics monitoring.

' Development Status:
' Working.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2009 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC tServerStats AS Timer

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' start timer
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB Run()

  ' if not enabled, return
  IF NOT Main.bRRDToolEnabled THEN RETURN

  ' check for missing rrd databases
  CreateRRDs()

  ' start poll timer for ServerStats
  tServerStats = NEW Timer AS "tServerStats"
  tServerStats.Delay = 60 * 1000 ' every minute
  tServerStats.Start

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' gets called at each timer event
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB tServerStats_Timer()

  UpdateRRDs() ' update rrd values every polltime seconds

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' create missing rrd databases for serverstats
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRIVATE SUB CreateRRDs()

  DIM sRRDCmd, sRRD AS String

  sRRD = Main.sBaseDir &/ "rrd/serverload.rrd"
  IF NOT Exist(sRRD) THEN
    sRRDCmd = "rrdtool create " & sRRD & " -s 60 "
    sRRDCmd &= "DS:load1:GAUGE:300:0:U "
    sRRDCmd &= "DS:load5:GAUGE:300:0:U "
    sRRDCmd &= "DS:load15:GAUGE:300:0:U "
    sRRDCmd &= "RRA:AVERAGE:0.5:1:600 RRA:AVERAGE:0.5:2:600 RRA:AVERAGE:0.5:7:600 RRA:AVERAGE:0.5:30:600 RRA:AVERAGE:0.5:365:600"
    sRRDCmd &= " 2>&1 >/dev/null"
    IF Main.bServerStatsDebug THEN Main.WriteDebugLog(("[ServerStats] Create rrdtool database for server load with '") & sRRDCmd & "'.")
    SHELL sRRDCmd WAIT
  END IF

  sRRD = Main.sBaseDir &/ "rrd/servermemory.rrd"
  IF NOT Exist(sRRD) THEN
    sRRDCmd = "rrdtool create " & sRRD & " -s 60 "
    sRRDCmd &= "DS:used:GAUGE:300:U:U "
    sRRDCmd &= "DS:free:GAUGE:300:U:U "
    sRRDCmd &= "DS:buffers:GAUGE:300:U:U "
    sRRDCmd &= "DS:cached:GAUGE:300:U:U "
    sRRDCmd &= "RRA:AVERAGE:0.5:1:600 RRA:AVERAGE:0.5:2:600 RRA:AVERAGE:0.5:7:600 RRA:AVERAGE:0.5:30:600 RRA:AVERAGE:0.5:365:600"
    sRRDCmd &= " 2>&1 >/dev/null"
    IF Main.bServerStatsDebug THEN Main.WriteDebugLog(("[ServerStats] Create rrdtool database for memory usage with '") & sRRDCmd & "'.")
    SHELL sRRDCmd WAIT
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get cpuload and memory values and update rrd files
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRIVATE SUB UpdateRRDs()

  DIM sLoad, sMemory, sRRDCmd, sVal AS String
  DIM aLoad, aMemory AS String[]
  DIM cVal AS NEW Collection

  ' run tool to fetch system load and update database
  EXEC ["cat", "/proc/loadavg"] TO sLoad
  aLoad = Scan(sLoad, "* * * * *")
  sRRDCmd = "rrdtool update " & Main.sBaseDir &/ "rrd/serverload.rrd" & " N"
  sRRDCmd &= ":" & aLoad[0] & ":" & aLoad[1] & ":" & aLoad[2]
  sRRDCmd &= " 2>&1 >/dev/null"
  IF Main.bServerStatsDebug THEN
    Main.WriteDebugLog("[ServerStats] Load: " & sLoad)
    Main.WriteDebugLog("[ServerStats] " & sRRDCmd)
  END IF
  SHELL sRRDCmd WAIT

  ' get memory stats and update database
  EXEC ["cat", "/proc/meminfo"] TO sMemory
  FOR EACH sVal IN Split(sMemory, "\n", "", TRUE)
    aMemory = Split(sVal, " ", "", TRUE)
    cVal[Left$(aMemory[0], -1)] = Val(aMemory[1])
  NEXT
  sRRDCmd = "rrdtool update " & Main.sBaseDir &/ "rrd/servermemory.rrd" & " N"
  sRRDCmd &= ":" & Str(cVal!MemTotal / 1024) & ":" & Str(cVal!MemFree / 1024) & ":" & Str(cVal!Buffers / 1024) & ":" & Str(cVal!Cached / 1024)
  sRRDCmd &= " 2>&1 >/dev/null"
  IF Main.bServerStatsDebug THEN
    Main.WriteDebugLog("[ServerStats] MemTotal: " & cVal!MemTotal & " MemFree:" & cVal!MemFree & " Buffers: " & cVal!Buffers & " Cached: " & cVal!Cached)
    Main.WriteDebugLog("[ServerStats] " & sRRDCmd)
  END IF
  SHELL sRRDCmd WAIT

END