' Gambas class file

' Description:
' COneWire.class
' Support for Midon's TEMP08 1-wire interface.

' Development Status:
' Working, but only temp sensors implemented tested yet.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

PROPERTY Port AS String
PROPERTY Baud AS String
PROPERTY OneWireDebug AS Boolean

PRIVATE sPort AS String
PRIVATE sBaud AS String
PRIVATE bOneWireDebug AS Boolean

PUBLIC hOneWire AS NEW SerialPort
PUBLIC tOneWire AS NEW Timer

PUBLIC sBuffer AS String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' open serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Connect() AS Boolean

  ' try to close the port
  TRY hOneWire.Close

  ' get a new one
  hOneWire = NEW Serialport AS "OneWire"

  WITH hOneWire
    .PortName = sPort
    .Speed = sBaud
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .Open()
  END WITH

  ' start poll timer for OneWire status LED
  tOneWire = NEW Timer AS "tOneWireLED"
  tOneWire.Delay = 250
  tOneWire.Stop

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog(("OneWire Error: ") & ERROR.Text)
  RETURN FALSE

END

PUBLIC SUB OneWire_Read()

  DIM sData AS String

  TRY READ #hOneWire, sData, 1
  IF ERROR THEN Main.WriteDebugLog(("[1-Wire] Error reading data from serial port! -> ") & Error.Text)
  IF sData = Chr(10) THEN ' buffer until newline then parse
    IF Len(sBuffer) > 1 THEN ParseLine(sBuffer)
    sBuffer = NULL
  ELSE
    sBuffer &= sData
  END IF

END

PUBLIC SUB ParseLine(sStr AS String)

  DIM iDeviceId AS Integer
  DIM aScan AS String[]

  Main.ControlLed("OneWire", "On")
  IF Main.bStandalone THEN tOneWire.Start

  ' example output
  ' SUN 00:36:20
  ' Reading Sensors...
  ' Voltage #01[4 D0000004FC78A26] = 00.32 V 04.98 V
  ' Temp #01[4D0000004FC78A26]=23.75C
  ' Temp #02[150008013A024910]=22.43C
  ' Temp #03[7A0008014A6BC310]=22.68C

  IF bOneWireDebug THEN Main.WriteDebugLog("[1-Wire] " & sStr)

  ' 1-wire temp sensor support
  IF Mid$(sStr, 1, 4) = "Temp" THEN
    IF bOneWireDebug THEN Main.WriteDebugLog(("[1-Wire] We got DS1820 temperature data."))
    aScan = Scan(sStr, "*[[]*]=*")
    IF aScan.Count = 3 THEN
      iDeviceId = Devices.Find(aScan[1], Devices.FindInterface("Midon TEMP08"), "Dallas DS1820")
      IF iDeviceId THEN Devices.ValueUpdate(iDeviceId, LTrim(Left(aScan[2], -2)), "", "", "")
    END IF
  END IF
  ' put support for other sensortypes here

END

PUBLIC SUB tOneWireLED_Timer()

  Main.ControlLed("OneWire", "Off")
  tOneWire.Stop

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' close port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Disconnect() AS Boolean

  ' try to close the connection
  TRY hOneWire.Close
  Main.WriteLog(("OneWire serial port close."))

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog(("1-Wire Error: ") & ERROR.Text)
  RETURN FALSE

END

' implement properties
FUNCTION Port_Read() AS String

  RETURN sPort

END

SUB Port_Write(Value AS String)

  sPort = Value

END

PRIVATE FUNCTION Baud_Read() AS String

  RETURN sBaud

END

PRIVATE SUB Baud_Write(Value AS String)

  sBaud = Value

END

PRIVATE FUNCTION OneWireDebug_Read() AS Boolean

  RETURN bOneWireDebug

END

PRIVATE SUB OneWireDebug_Write(Value AS Boolean)

  bOneWireDebug = Value

END
