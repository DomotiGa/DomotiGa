' Gambas class file

' Description:
' CTwitter.class
' Support for sending tweets to twitter.com

' Development Status:
' Finished

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Module/Class specific variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public PluginName As String = "Twitter"
Public PluginFriendlyName As String = "Twitter"
Public PluginVersion As String = "1.00"
Public PluginAuthor As String = "Ron Klinkien"
Public PluginProtocols As String[]
Public PluginMaxInstances As Integer = 1

Public KeyName As String
Public LogLabel As String = "[Twitter] "
Public Instance As Integer
Public IsRunning As Boolean
Public ErrorText As String
Public ErrorWhere As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private $bEnabled As Boolean
Private $sUser As String
Private $sPassword As String
Private $bTimeStamp As Boolean
Private $bDebug As Boolean

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory subroutine for each Module/Class to initialize:
' - The cPlugin[x].Settings are copied into local variables
' - Port/Connection will be started (any errors caught)
' - Any other code per Class
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StartPlugin(cPl As CPluginEntry)
  
  KeyName = cPl.KeyName
  Instance = cPl.Instance
  If Instance <> 1 Then LogLabel = Replace(LogLabel, "] ", "#" & Instance & "] ")
  
  ' Copy configuration items locally
  $bEnabled = cPl.Settings["enabled"]
  $sUser = cPl.Settings["username"]
  $sPassword = cPl.Settings["password"]
  $bTimeStamp = cPl.Settings["sendtimestamp"]
  $bDebug = cPl.Settings["debug"]

  ' Initialize 
  IsRunning = True

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory sub for each Module/Class to stop
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StopPlugin()



End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public hTweet As Process

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Post the Tweet on Twitter
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub PostTweet(sMessage As String) As Boolean

  Dim sCmd As String

  ' if not enabled, return
  'If Not $bEnabled Then
  '  Main.WriteDebugLog(LogLabel & "You want to send a tweet '" & sMessage & "' but the interface is disabled!")
  '  Return False
  'Endif

  If Util.ProgramExist("bti") Then
    If $bTimeStamp Then sMessage = Format$(Now(), "hh:nn:ss ") & sMessage
    sCmd = "echo '" & sMessage & "'|bti"
    If $bDebug Then Main.WriteDebugLog(LogLabel & "Running '" & sCmd & "'")
    hTweet = Shell sCmd For Read As "Tweet"
  Else
    Main.WriteDebugLog(LogLabel & "You need to install the oauth library and bti command to use Twitter!")
    Return False
  Endif

  Return True

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get process return value, 0 means ok, anything else is an error
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Tweet_Kill()

  Dim iRc As Integer

  iRc = Last.Value
  If iRc Then
    Main.WriteDebugLog(LogLabel & "Error with return code " & iRc)
  Else
    Main.WriteLog(LogLabel & "I have sent a Tweet to 'http://twitter.com/" & $sUser & "'.")
  Endif

End
