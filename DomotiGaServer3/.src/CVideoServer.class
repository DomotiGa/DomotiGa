' Gambas module file

' Description:
' VideoServer.module
' Support getting captures from for Aviosys IP9100 Videoserver

' Development Status:
' Sort of working, needs better error checking.

' Links:
' http://www.sunspot.co.uk/Projects/IP_KAM_9000and9100_notes.htm

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Module/Class specific variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public PluginName As String = "VideoServer"
Public PluginFriendlyName As String = "VideoServer"
Public PluginVersion As String = "1.00"
Public PluginAuthor As String = "Ron Klinkien"
Public PluginProtocols As String[]
Public PluginMaxInstances As Integer = 1

Public KeyName As String
Public LogLabel As String = "[VideoServer] "
Public Instance As Integer
Public IsRunning As Boolean
Public ErrorText As String
Public ErrorWhere As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private $bEnabled As Boolean
Private $sAddress As String
Private $iPort As Integer
Private $sUser As String
Private $sPassword As String
Private $bVideoServerDebug As Boolean
Private $sChannel1 As String
Private $sChannel2 As String
Private $sChannel3 As String
Private $sChannel4 As String

Private hDownloadImage As HttpClient
Private iCamera As Integer
Private sMessage As String
Private sToAddress As String
Private sSubject As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory subroutine for each Module/Class to initialize:
' - The cPlugin[x].Settings are copied into local variables
' - Port/Connection will be started (any errors caught)
' - Any other code per Class
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StartPlugin(cPl As CPluginEntry)
  
  KeyName = cPl.KeyName
  Instance = 1 ' Module can only have 1 instance 
  
  ' Copy configuration items locally
  $bEnabled = cPl.Settings["enabled"]
  $sAddress = cPl.Settings["tcphost"]
  $iPort = cPl.Settings["tcpport"]
  $sUser = cPl.Settings["user"]
  $sPassword = cPl.Settings["password"]
  $bVideoServerDebug = cPl.Settings["debug"]
  $sChannel1 = cPl.Settings["channel1"]
  $sChannel2 = cPl.Settings["channel2"]
  $sChannel3 = cPl.Settings["channel3"]
  $sChannel4 = cPl.Settings["channel4"]

  ' Initialize 

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory sub for each Module/Class to stop
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StopPlugin()



End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' grab image from channel #iCam and store it as a blob
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Grab(iCam As Integer, Optional sSubj As String, Optional sMsg As String, Optional sTo As String)

  Dim sTemp, sUrl As String

  iCamera = iCam
  If sMsg Then sMessage = sMsg
  If sTo Then sToAddress = sTo
  If sSubj Then sSubject = sSubj

  If Main.iVideoServerPort <> 0 And If Main.iVideoServerPort <> 80 Then sUrl &= ":" & Main.iVideoServerPort
  If Main.sVideoServerUser Then
    sTemp = Subst("&1:&2@&3", Main.sVideoServerUser, Main.sVideoServerPassword, Main.sVideoServerAddress)
  Else
    sTemp = Main.sVideoServerAddress
  Endif
  sUrl = "http://" & sTemp & "/usr/yoics" & iCam & ".jpg"
  If Main.bVideoServerDebug Then Main.WriteDebugLog(LogLabel & "Fetching URL " & sUrl)

  hDownloadImage = New HttpClient As "hDownloadImage"
  hDownloadImage.URL = sUrl
  hDownloadImage.TimeOut = 5
  hDownloadImage.Async = True
  hDownloadImage.Get()

End

Public Sub hDownloadImage_Finished()

  Dim iCount As Integer
  Dim sDownload As String

  Select hDownloadImage.Code
    Case 200
      Main.WriteLog(LogLabel & "I have captured an image from camera #" & iCamera & ".")
      If Lof(hDownloadImage) Then sDownload = Read #hDownloadImage, Lof(hDownloadImage)
      SaveCapture(sDownload, iCamera)
      If sSubject Then Mail.SendCaptureByMail(Application.Name & ": " & sSubject, sMessage, iCamera, sToAddress)
    Case 401
      Main.WriteLog(LogLabel & "Error authenticating while trying to capture a camera #" & iCamera & " image!")
    Case Else
      Main.WriteLog(LogLabel & "Unknown error occured while trying to capture a camera #" & iCamera & " image!")
  End Select

  If Not Main.bVideoServerDebug Then Return
  For iCount = 0 To hDownloadImage.Headers.Count - 1
    Main.WriteDebugLog(LogLabel & hDownloadImage.Headers[iCount], 1)
  Next

End

Public Sub hDownloadImage_Error()

  Main.WriteDebugLog(LogLabel & "ERROR: " & hDownloadImage.Status)

End

Public Sub SaveCapture(sBuffer As String, iCam As Integer)

  Dim rResult As Result

  ' write image to capture table
  Main.hDB.Begin()
  rResult = Main.hDB.Create("capture_camera" & iCam)
  rResult!image = sBuffer
  rResult!stamp = Now()
  rResult.Update()
  Main.hDB.Commit()

End

