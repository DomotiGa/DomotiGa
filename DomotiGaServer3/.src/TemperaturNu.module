' Gambas module file

' Description:
' TemperaturNu.module
' Support for Temperatur.nu related functions.

' Development Status:
' Development just started.

' Links:
' http://www.temperatur.nu/

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien
' This module is written by and Copyright(C) 2010 Daniel Lindmark

' Read file called COPYING for license details.

Public hPost As New HttpClient As "hPost"
Public tTemperaturNu As Timer
Private sDownloadBuffer As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' start timer
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Run()

  ' start poll timer for Bwired
  tTemperaturNu = New Timer As "tTemperaturNu"
  tTemperaturNu.Delay = Main.iTemperaturNuPushTime * 1000 * 60 ' multiply for minutes
  tTemperaturNu.Start

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' gets called at each timer event
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub tTemperaturNu_Timer()

  UploadTemperaturNuData()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' create url string and upload it to the service
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub UploadTemperaturNuData()

  Dim sContent As String

  sDownloadBuffer = ""

  ' if we are already uploading return
  If hPost.Status > 0 Then
    Main.WriteLog(("I'm already uploading data to Temperatur.nu, skipping."))
    Return
  End If

  ' create string
  sContent = CreateTemperaturNuData()

  ' use httpclient to post data to service
  hPost.URL = "http://www.temperatur.nu/report/puttemp.php" & sContent
  hPost.TimeOut = 10
  hPost.Async = True
  hPost.Get()

  If Main.bTemperaturNuDebug Then Main.WriteDebugLog("[TemperaturNu] " & hPost.URL)

End

Public Sub CreateTemperaturNuData() As String

  Dim sValue As String = Devices.GetCurrentValueForDevice(Main.iTemperaturNuDeviceId, Main.sTemperaturNuDeviceValue)

  Return "?s=" & Main.sTemperaturNuCity & "&id=" & Main.sTemperaturNuId & "&t=" & sValue

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' catch error
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub hPost_Error()

  Main.WriteDebugLog(("[TemperaturNu] Temperature data post error."))

End

Public Sub hPost_Read()

  Dim sBuffer As String

  Read #Last, sBuffer, Lof(Last)
  sDownloadBuffer &= sBuffer

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' check http return code
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub hPost_Finished()

  Dim iCount As Integer

  ' select on http result code and display message
  Select hPost.Code
    Case 200
      Main.WriteLog(("Uploaded data to Temperatur.nu. Response from server: ") & sDownloadBuffer)
    Case 401
      Main.WriteLog(("Error authenticating while uploading data to Temperatur.nu!"))
    Case 404
      Main.WriteLog(("Error page not found while uploading data to Temperatur.nu!"))
    Case Else
      Main.WriteLog(("Unknown error occured while uploading data to Temperatur.nu! Response from server: ") & sDownloadBuffer)
  End Select

  ' if debug is on print all http headers
  If Not Main.bTemperaturNuDebug Then Return
  For iCount = 0 To hPost.Headers.Count - 1
    Main.WriteDebugLog("[TemperaturNu] " & Left(hPost.Headers[iCount], Len(hPost.Headers[iCount]) - 1))
  Next

End
