' Gambas module file

' Description:
' EventLoop.module
' This is a program loop where all events run which are not started by a timer event.
' It will be run 4 times per second (every 250mS)

' Development Status:
' Stable

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public Sub Run()

  Dim sFrom, sTo, sSql As String
  Dim rResult As Result

  ' create new log files if needed
  If Main.bNew_Month Then
    Main.Setup_Logfiles()
  Endif

  ' put things that can be triggered on a minute boundary here
  ' this should be placed in a database table instead, with nice gui to manage. ;-)

  Events.CheckTimeNowEvents()

  Devices.CheckRepeatDevice()
  Devices.CheckResetDevice()

  ' Call the Plugin RunTask hook, to allow Modules/Interfaces to use it dynamically
  Plugin.RunTask()

  ' update DSC virtual LCD screen
  If Main.hDSC Then Main.hDSC.DSC_LCDText()

  ' store energy usage in database and rrd files every 5 minutes
  If Main.GetGlobalVar("Minute") Mod 5 = 0 Then
    Energy.Log() ' write energy usage to *_usage tables
  Endif

  ' Fetch random quote for this day
  Main.SetGlobalVar("Tagline", Main.Random_Text("remarks_tags"))

  ' home simulation
  If Main.GetGlobalVar("Simulation") = "On" Then
    sFrom = Format(Date(Now() - 7), "yyyy-mm-dd") & " " & Format(Time(), "hh:nn")
    sTo = sFrom & ":59"
    sFrom = sFrom & ":00"
    sSql = "SELECT devices.name, device_values_log. * FROM device_values_log INNER JOIN devices ON device_values_log.device_id = devices.id INNER JOIN device_values On device_values.deviceid = devices.id WHERE  groups LIKE '%|Simulation|%' AND enabled = -1 AND device_values.log = -1 And (device_values.switchable = -1 Or device_values.dimable = -1) AND device_values_log.lastchanged >= '" & sFrom & "' AND device_values_log.lastchanged <='" & sTo & "'"
    rResult = Main.hDB.Exec(sSql)
    If rResult.Count Then
      If Main.bEventsDebug Then Main.WriteDebugLog(("[Simulate] Got ") & rResult.Count & (" result(s)."))
      For Each rResult
        If Main.bEventsDebug Then Main.WriteDebugLog(("[Simulate] Setting device '") & rResult!name & "' to '" & rResult!value & "'")
        Devices.SetDevice(rResult!id, rResult!value)
      Next
    Endif
  Endif

Catch
  Main.WriteDebugLog(("[EventLoop.Run] Error ") & Error.Text & (" at ") & Error.Where)

End
