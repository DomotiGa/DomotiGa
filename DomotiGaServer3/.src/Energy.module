' Gambas module file

' Description:
' Energy.module
' Routines for logging energy usage.
' Need to check accuracy!

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' read values from rfxmeter and pulse devices and write values to *_usage tables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Log()

  Dim rResult As Result
  Dim iRFX, iRFXMeter, iFactor As Integer
  Dim iUsage, iNewCounter, iPrevCounter, iValue As Float
  Dim aRFXMeters As String[] = ["RFXPwr Power", "RFXPulse Gas", "RFXPulse Water", "RFXPulse Power"]
  Dim sMeter, sTable As String

  ' lookup id's for device types
  For Each sMeter In aRFXMeters
    ' first find devicetype id's
    Try rResult = Main.hDB.Exec("SELECT id FROM devicetypes WHERE name = &1 ", sMeter)
    If Not Error Then
      iRFX = rResult!id
    Else
      Main.WriteDebugLog(("[Energy] No Devicetype called '") & sMeter & ("' found!"))
      Return
    Endif

    ' then find device with this devicetype
    rResult = Main.hDB.Exec("SELECT value, id FROM devices WHERE module = &1 AND enabled is TRUE", iRFX)

    ' we currently only support one of each type
    If rResult.Count = 1 Then
      ' device value is not filled yet, nothing to store
      If Not rResult!value Then Return
      iNewCounter = CFloat(rResult!value)
      iRFXMeter = rResult!id

      ' construct table name
      Select sMeter
        Case "RFXPwr Module", "RFXPwr Power"
          sTable = "power_usage"
        Case "RFXPulse Power"
          sTable = "power_usage"
        Case "RFXPulse Gas"
          sTable = "gas_usage"
        Case "RFXPulse Water"
          sTable = "water_usage"
      End Select

      ' get previous counter value
      rResult = Main.hDB.Exec(Subst("SELECT counter FROM &1 ORDER BY stamp DESC LIMIT 1", sTable))

      If rResult.Count = 1 Then
        iPrevCounter = rResult!counter
        iUsage = iNewCounter - iPrevCounter
        ' calculate right amount used
        Select sMeter
          Case "RFXPwr Power", "RFXPulse Power"
            iValue = iUsage * 10 ' every pulse is 0.1 watt
          Case "RFXPulse Gas"
            iValue = iUsage / 100 ' every pulse is 0.01 m3
          Case "RFXPulse Water"
            iValue = iUsage / 2 ' every pulse is 0.5 liter
        End Select
      Else
        iUsage = 0
        iValue = 0
      End If

      ' add new value to usage table
      Main.hDB.Begin()
      rResult = Main.hDB.Create(sTable)
      rResult!consumption = iUsage
      rResult!stamp = Now()
      rResult!counter = iNewCounter
      rResult.Update()
      Main.hDB.Commit()

      ' update value2 field of device with energy usage
      rResult = Main.hDB.Exec("UPDATE devices SET value2 = &1 WHERE id = &2", CStr(iValue), iRFXMeter)
    Else
      If rResult.Count > 1 Then Main.WriteDebugLog(("[Energy] More then one '") & sMeter & ("' device found, not supported!"))
    End If
  Next

End
