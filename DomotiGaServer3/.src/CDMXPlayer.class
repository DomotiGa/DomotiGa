' Gambas class file

' Description:
' CDMXPlayer.class
' Support for DMXPlayer module control.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' This module was written by Ronald Kelleners in 2013.

' Read file called COPYING for license details.

Property Port As String
Property Baud As String
Property Debug As Boolean

Private sPort As String
Private sBaud As String
Private bDMXPlayerDebug As Boolean
Public hDMXPlayer As New SerialPort
Public sBuffer As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' connect to the serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Connect() As Boolean

  ' try to close the port
  Try hDMXPlayer.Close

  ' get a new one
  hDMXPlayer = New Serialport As "DMXPlayer" 

  With hDMXPlayer
    .PortName = sPort
    .Speed = sBaud
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .Open()
  End With

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog("DMXPlayer Error: " & Error.Text & (" at ") & Error.where)
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' disconnect the serialport
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Disconnect() As Boolean

  ' try to close the connection
  Try hDMXPlayer.Close
  Main.WriteLog("DMXPlayer serial port close.")

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog("DMXPlayer Error: " & Error.Text & (" at ") & Error.where)
  Return False

End

Public Sub SendCommand(sAddress As String, sCmd As String)

  Dim iLevel As Integer
  Dim sValue As String

  sCmd = UCase(sCmd)

  If InStr(sCmd, "DIM") Then
    iLevel = Val(Replace(sCmd, "DIM ", ""))
    iLevel = (iLevel * 254) / 100
    sValue = Format$(iLevel, "000")

    If bDMXPlayerDebug Then Main.WriteDebugLog("[DMXPlayer] > C" & sAddress & "L" & sValue)
    Try Print #hDMXPlayer, ("C" & sAddress & "L" & sValue)
  Else
    Main.WriteDebugLog(("[DMXPlayer] Unknown command '") & sCmd & ("' given!"))
  Endif

End

Public Sub DMXPlayer_Read()

  Dim sData As String

  Try sData = Read #hDMXPlayer, 1
  If Error Then Main.WriteDebugLog(("[DMXPlayer] Error reading data from the serial port! -> ") & Error.Text)
  If sData = Chr(10) Then ' buffer until linefeed then parse
    If Len(sBuffer) > 1 Then ParseLine(sBuffer)
    sBuffer = Null
  Else
    sBuffer &= sData
  Endif

End

Public Sub ParseLine(sStr As String)

  Dim iDeviceId As Integer
  Dim aScan As String[]

  If bDMXPlayerDebug Then Main.WriteDebugLog("[DMXPlayer] < " & sStr)

  ' ' try to find device with address, and correct interface type.
  ' iDeviceId = Devices.Find("<address>", Devices.FindInterface("DMX"))
  ' ' if found then update it's value
  ' If iDeviceId Then Devices.Update(iDeviceId, "<value>")

End

Private Function Port_Read() As String

  Return sPort

End

Private Sub Port_Write(Value As String)

  sPort = Value

End

Private Function Baud_Read() As String

  Return sBaud

End

Private Sub Baud_Write(Value As String)

  sBaud = Value

End

Private Function Debug_Read() As Boolean

  Return bDMXPlayerDebug

End

Private Sub Debug_Write(Value As Boolean)

  bDMXPlayerDebug = Value

End
