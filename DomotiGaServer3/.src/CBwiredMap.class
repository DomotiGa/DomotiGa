' Gambas class file

' Description:
' CBwiredMap.class
' Support for Bwired related functions.

' Development Status:
' Just build, so possible bugs around.

' Links:
' http://www.bwired.nl/domoticaworld.asp

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Module/Class specific variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public PluginName As String = "BwiredMap"
Public PluginFriendlyName As String = "Bwired Map"
Public PluginVersion As String = "1.00"
Public PluginAuthor As String = "Ron Klinkien"
Public PluginProtocols As String[]
Public PluginMaxInstances As Integer = 1

Public KeyName As String
Public LogLabel As String = "[BwiredMap] "
Public Instance As Integer
Public IsRunning As Boolean
Public ErrorText As String
Public ErrorWhere As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private $bEnabled As Boolean
Private $sTitle As String
Private $sWebsite As String
Private $sWebsitePicUrl As String
Private $sUser As String
Private $sPassword As String
Private $sScreenName As String
Private $sGpsLat As String
Private $sGpsLong As String
Private $sCity As String
Private $iPushTime As Integer
Private $bDebug As Boolean

Public hPost As New HttpClient As "hPost"
Public tBwired As Timer

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory subroutine for each Module/Class to initialize:
' - The cPlugin[x].Settings are copied into local variables
' - Port/Connection will be started (any errors caught)
' - Any other code per Class
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StartPlugin(cPl As CPluginEntry, Optional bRun As Boolean = True)

  KeyName = cPl.KeyName
  Instance = cPl.Instance
  If Instance <> 1 Then LogLabel = Replace(LogLabel, "] ", "#" & Instance & "] ")

  ' Copy configuration items locally
  $bEnabled = cPl.Settings["enabled"]
  $sTitle = cPl.Settings["title"]
  $sWebsite = cPl.Settings["website"]
  $sWebsitePicUrl = cPl.Settings["websitepicurl"]
  $sUser = cPl.Settings["user"]
  $sPassword = cPl.Settings["password"]
  $sScreenName = cPl.Settings["screenname"]
  $sGpsLat = cPl.Settings["gpslat"]
  $sGpsLong = cPl.Settings["gpslong"]
  $sCity = cPl.Settings["city"]
  $iPushTime = cPl.Settings["pushtime"]
  $bDebug = cPl.Settings["debug"]

  ' Initialize
  If bRun Then Run()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory sub for each Module/Class to stop
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StopPlugin()

  Try tBwired.Stop

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' start timer
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Run()

  ' start poll timer for Bwired
  tBwired = New Timer As "tBwired"
  tBwired.Delay = $iPushTime * 1000 * 60 ' multiply for minutes
  tBwired.Start

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' gets called at each timer event
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub tBwired_Timer()

  UploadBwiredData()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' create xml data and upload it to the service
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub UploadBwiredData()

  Dim sContent As String

  ' if we are already uploading return
  If hPost.Status > 0 Then
    Main.WriteLog(LogLabel & "I'm already uploading sensor data to Bwired, skipping.")
    Return
  Endif

  ' create xml string
  sContent = CreateBwiredData()

  ' use httpclient to post xml to service
  hPost.URL = "http://www.bwired.nl/Bwiredservice/receive.asp"
  hPost.TimeOut = 10
  hPost.Async = True
  hPost.Post("text/xml", sContent)

  If $bDebug Then Main.WriteDebugLog(LogLabel & sContent)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' scan bwired devices table and create xml document
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Function CreateBwiredData() As String

  Dim xXml As XmlWriter
  Dim sValue As String
  Dim rResult As Result
  Dim iId As Integer

  ' scan device table
  rResult = Main.hDB.Exec("SELECT * FROM devices_bwired")
  If Not rResult Then
    Main.WriteLog(LogLabel & "ERROR: table 'devices_bwired' not found!")
    Return
  Endif

  ' build header
  xXml = New XmlWriter
  xXml.Open("", True, "UTF-8")
  xXml.StartElement("BWired")
  xXml.StartElement("Init")
    xXml.Element("DateTime", Now())
    xXml.Element("UserName", $sUser)
    xXml.Element("Password", $sPassword)
    xXml.Element("ScreenName", $sScreenName)
    xXml.Element("Gpslat", $sGpsLat)
    xXml.Element("Gpslong", $sGpsLong)
    xXml.Element("City", $sCity)
    xXml.Element("Website", $sWebsite)
    xXml.Element("WebCamPicUrl", $sWebsitePicUrl)
    xXml.Element("Title", $sTitle)
  xXml.EndElement()

  ' create device entries
  If rResult.Count Then
    For Each rResult
      xXml.StartElement("Entry")
      xXml.Element("Name", rResult!description)
      xXml.Element("ID", iId)
      xXml.Element("Units", rResult!devicelabel)
      sValue = Devices.GetCurrentValueForDevice(rResult!deviceid, rResult!value)
      xXml.Element("Value", sValue)
      xXml.EndElement()
      Inc iId
    Next
  Endif

  ' close document
  xXml.EndElement()
  Return xXml.EndDocument()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' catch error
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub hPost_Error()

  Main.WriteDebugLog(LogLabel & "Sensor data post error.")

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' check http return code
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub hPost_Finished()

  Dim iCount As Integer

  ' select on http result code and display message
  Select hPost.Code
    ' do a little magic as microsoft webserver's are strange
    Case 0
      If InStr(hPost.Headers[0], "HTTP/1.1 200") Or If InStr(hPost.Headers[0], "HTTP/1.1 100") Then
        Main.WriteLog(LogLabel & "Uploaded sensor data to Bwired.")
      Else
        Main.WriteLog(LogLabel & "Unknown error occured while uploading XML data to Bwired!")
      Endif
    Case 401
      Main.WriteLog(LogLabel & "Error authenticating while uploading XML data to Bwired!")
    Case 404
      Main.WriteLog(LogLabel & "Error page not found while uploading XML data to Bwired!")
    Case Else
      Main.WriteLog(LogLabel & "Unknown error code (" & hPost.Code & ") returned after uploading XML data to Bwired!")
  End Select

  ' if debug is on print all http headers
  If Not $bDebug Then Return
  For iCount = 0 To hPost.Headers.Count - 1
    Main.WriteDebugLog(LogLabel & Left(hPost.Headers[iCount], Len(hPost.Headers[iCount])))
  Next

End

