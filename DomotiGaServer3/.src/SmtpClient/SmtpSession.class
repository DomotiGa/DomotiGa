' Gambas class file

Static Private $sOpenSSLPath As String

Public LastCode As String
Public LastAnswer As String
Public _Debug As Boolean

Property Read Client As SmtpClient
Property Stream As Stream
Property Read Connected As Boolean

Private $hStream As Stream
Private $hClient As SmtpClient

Public _Count As Integer


Static Public Sub GetOpenSSLPath() As String

  If Not $sOpenSSLPath Then
    If Exist("/usr/bin/openssl") Then
      $sOpenSSLPath = "/usr/bin/openssl"
    Else If Exist("/bin/openssl") Then
      $sOpenSSLPath = "/bin/openssl"
    Else
      Error.Raise("Unable to find openssl")
    Endif
  Endif

  Return $sOpenSSLPath

End

Public Sub Disconnect()

  $hClient = Null

End

Public Sub Connect(hClient As SmtpClient, (Host) As String, (Port) As Integer)

  $hClient = hClient

End

Public Function Send(sData As String, Optional bMulti As Boolean) As String

  If Not Me.Connected Then Return
  
  If _Debug Then Error "--> "; sData
  Print #$hStream, sData
  Flush #$hStream
  Return GetLine(bMulti)

End

Public Sub Print(Optional sData As String)
  
  If Not Me.Connected Then Return

  If _Debug Then Error "--> "; sData
  Print #$hStream, sData
  Flush #$hStream
  
End


Public Function GetLine(Optional bMulti As Boolean) As String

  Dim sLine As String
  Dim sResponse As String
  Dim iPos As Integer

  If Not Me.Connected Then Return

  If bMulti Then
  
    Do
      Line Input #$hStream, sLine
      sResponse &= sLine & "\n"
      If sLine Like "??? *" Then Break
    Loop
    
  Else
  
    Line Input #$hStream, sLine
    sResponse = sLine
    
  Endif
  
  LastAnswer = sLine
  iPos = InStr(sLine, " ")
  If iPos = 0 Then 
    LastCode = ""
  Else
    LastCode = Left(sLine, iPos - 1)
  Endif
  
  If _Debug Then Error sResponse
  Return sResponse

End

Private Function Stream_Read() As Stream

  Return $hStream

End

Private Sub Stream_Write(Value As Stream)

  $hStream = Value

End

Private Function Connected_Read() As Boolean

End

Public Sub PrintHeader(sHeader As String, sStr As String)
  
  If Not sStr Or If IsAscii(sStr) Then
    If sStr Not Begins "=?utf-8?q?" Or If sStr Not Ends "?=" Then
      Print(sHeader & ": " & sStr)
      Return
    Endif
  Endif

  Encode.PrintQuotedHeader($hStream, sHeader, sStr, _Debug)
  
End

Private Function Client_Read() As SmtpClient

  Return $hClient

End
