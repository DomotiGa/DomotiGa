' Gambas class file

' Description:
' YouLess.class
' Provide support for fetching data of a YouLess device.

' Development Status:
' Just started to build this one.

' Links:
' http://wiki.td-er.nl/index.php?title=YouLess

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

PROPERTY FetchURL AS String
PROPERTY Polltime AS Integer
PROPERTY YouLessDebug AS Boolean

PRIVATE sFetchURL AS String
PRIVATE iPolltime AS Integer
PRIVATE bYouLessDebug AS Boolean

PRIVATE hYouLess AS NEW HttpClient
PRIVATE tYouLess AS Timer

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' start the poll timer
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Connect() AS Boolean

  ' try to close the connection
  TRY hYouLess.Close

  ' start poll timer for YouLess
  tYouLess = NEW Timer AS "tYouLess"
  tYouLess.Delay = iPolltime * 1000 ' multiply for seconds
  tYouLess.Start

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog(("YouLess Error: ") & ERROR.Text & (" at ") & ERROR.Where)
  RETURN FALSE

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' disconnect from the host
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Disconnect() AS Boolean

  ' stop timer and close handle
  TRY tYouLess.Stop
  TRY hYouLess.Close
  Main.WriteLog(("YouLess closed."))

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog(("YouLess Weather Error: ") & ERROR.Text & (" at ") & ERROR.Where)
  RETURN FALSE

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' gets called at each timer event
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB tYouLess_Timer()

  hYouLess = NEW HttpClient AS "hYouLess"
  hYouLess.URL = sFetchURL
  hYouLess.TimeOut = 8
  hYouLess.Async = TRUE
  hYouLess.Get()
  IF Main.bYouLessDebug THEN Main.WriteDebugLog("[YouLess] Fetching '" & sFetchUrl & "'")

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' meteohub data fetched
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB hYouLess_Finished()

  DIM sBuffer AS String

  SELECT hYouLess.Code
    CASE 200
      IF Lof(hYouLess) THEN READ #hYouLess, sBuffer, Lof(hYouLess)
      IF Main.bYouLessDebug THEN Main.WriteDebugLog("[YouLess] Received '" & Replace(sBuffer, "\n", "") & "'")
      ParseData(sBuffer)
    CASE ELSE
      Main.WriteDebugLog(("[YouLess] Unknown error occured while trying to get YouLess data!"))
  END SELECT
  TRY hYouLess.Close

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' parse raw data
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRIVATE SUB ParseData(sData AS String)

  DIM iDeviceId AS Integer
  DIM cData AS Collection
  DIM sCon, sPwr, sCnt AS String

  cData = JSON.Decode(sData)
  IF cData.Count = 6 THEN
    sCnt = Replace(Trim(cData["cnt"]), ",", ".")
    sPwr = cData["pwr"]
    sCon = cData["con"]
    IF Main.bYouLessDebug THEN
      Main.WriteDebugLog("[YouLess] Counter: " & sCnt & " kWh")
      Main.WriteDebugLog("[YouLess] Usage: " & sPwr & " Watt")
      Main.WriteDebugLog("[YouLess] Status: " & sCon)
    ENDIF

    IF sCon = "OK" THEN
      ' find device id
      iDeviceId = Devices.Find("1", Devices.FindInterface("YouLess Interface"), "YOULESS")
      ' update device
      IF iDeviceId THEN
        Devices.ValueUpdate(iDeviceId, sCnt, sPwr, sCon, "")
      ENDIF
    ELSE
      IF Main.bYouLessDebug THEN Main.WriteDebugLog(("[YouLess] Connection status not OK, skipping readings!"))
    ENDIF
  ELSE
    Main.WriteDebugLog(("[YouLess] Received wrong formatted JSON data!"))
  ENDIF

CATCH
  Main.WriteDebugLog("[YouLess] Error parsing YouLess data " & ERROR.Text & " at " & ERROR.Where)

END

PUBLIC SUB hYouLess_Error()

  Main.WriteDebugLog(("[YouLess] Error fetching YouLess data: ") & hYouLess.Status)
  TRY hYouLess.Close

END

' implement properties
PRIVATE FUNCTION FetchURL_Read() AS String

  RETURN sFetchURL

END

PRIVATE SUB FetchURL_Write(Value AS String)

  sFetchURL = Value

END

PRIVATE FUNCTION Polltime_Read() AS Integer

  RETURN iPolltime

END

PRIVATE SUB Polltime_Write(Value AS Integer)

  iPolltime = Value

END

PRIVATE FUNCTION YouLessDebug_Read() AS Boolean

  RETURN bYouLessDebug

END

PRIVATE SUB YouLessDebug_Write(Value AS Boolean)

  bYouLessDebug = Value

END
