' Gambas class file

' Description:
' YouLess.class
' Provide support for fetching data from YouLess devices.

' Development Status:
' Just started to build this one.

' Links:
' http://wiki.td-er.nl/index.php?title=YouLess

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Module/Class specific variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public PluginName As String = "YouLess"
Public PluginFriendlyName As String = "YouLess"
Public PluginVersion As String = "1.00"
Public PluginAuthor As String = "Ron Klinkien"
Public PluginProtocols As String[]
Public PluginMaxInstances As Integer = 1

Public KeyName As String
Public LogLabel As String = "[YouLess] "
Public InterfaceId As Integer
Public Instance As Integer
Public IsRunning As Boolean
Public ErrorText As String
Public ErrorWhere As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Private Variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private $bEnabled As Boolean
Private $iPolltime As Integer
Private $bDebug As Boolean

Private hYouLess As New HttpClient
Private tYouLess As Timer
Private $cData As New Collection

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory subroutine for each Module/Class to initialize:
' - The cPlugin[x].Settings are copied into local variables
' - Port/Connection will be started (any errors caught)
' - Any other code per Class
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StartPlugin(cPl As CPluginEntry)

  KeyName = cPl.KeyName
  Instance = cPl.Instance
  If Instance <> 1 Then LogLabel = Replace(LogLabel, "] ", "#" & Instance & "] ")

  ' Copy configuration items locally
  $bEnabled = cPl.Settings["enabled"]
  $iPollTime = cPl.Settings["polltime"]
  $bDebug = cPl.Settings["debug"]

  InterfaceId = Devices.FindInterface("YouLess Interface")
  If InterfaceId = 0 Then
    ErrorText = "Required InterfaceId can't be retrieved from the database!"
    Main.WriteLog(LogLabel & "ERROR: " & ErrorText)
    IsRunning = False
    Return
  Endif

  ' Connect/Initialize connection
  Connect()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory sub for each Module/Class to stop
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StopPlugin()

  Try Disconnect()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' start the poll timer
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Connect() As Boolean

  ' try to close the connection
  Try hYouLess.Close

  ' start poll timer for YouLess
  tYouLess = New Timer As "tYouLess"
  tYouLess.Delay = $iPolltime * 1000 ' multiply for seconds
  tYouLess.Start

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(LogLabel & "ERROR: '" & Error.Text & "' at '" & Error.Where & "'")
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' disconnect from the host
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Disconnect() As Boolean

  ' stop timer and close handle
  Try tYouLess.Stop
  Try hYouLess.Close
  Main.WriteLog(LogLabel & "YouLess closed.")

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(LogLabel & "ERROR: '" & Error.Text & "' at '" & Error.Where & "'")
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' gets called at each timer event
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub tYouLess_Timer()

  FindDevices()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' find youless devices and fetch their data
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub FindDevices()

  Dim sUrl As String
  Dim rResult As Result

  rResult = Devices.FindDevicesForInterface(InterfaceId, Instance)
  If rResult And If rResult.Available Then
    If $bDebug Then Main.WriteDebugLog(LogLabel & rResult.Count & " device(s) found.")
    For Each rResult
      Try $cData.Remove(rResult!address)
      sUrl = "http://" & rResult!address & "/a?f=j"
      hYouLess = New HttpClient As "hYouLess"
      hYouLess.URL = sUrl
      hYouLess.TimeOut = 8
      hYouLess.Tag = rResult!address
      hYouLess.Async = True
      hYouLess.Get()
      If $bDebug Then Main.WriteDebugLog(LogLabel & "Fetching '" & sUrl & "'")
    Next
  Else
    Main.WriteDebugLog(LogLabel & "No YouLess device(s) found.")
  Endif

Catch
  Main.WriteDebugLog(LogLabel & "Error fetching YouLess Device(s) " & ERROR.Text & " at " & ERROR.Where)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get youless data
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub hYouLess_Read()

  Dim sData, sBuffer As String

  If Lof(Last) Then sBuffer = Read #Last, Lof(Last)
  If $cData[Last.Tag] Then
    sData = $cData[Last.Tag] & sBuffer
  Else
    sData = sBuffer
  Endif
  $cData[Last.Tag] = sData

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' youless data fetched
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub hYouLess_Finished()

  Dim sBuffer As String

  Select hYouLess.Code
    Case 200
      sBuffer = $cData[Last.Tag]
      If $bDebug Then Main.WriteDebugLog(LogLabel & "Received '" & Replace(sBuffer, "\n", "") & "' for device with address '" & Last.Tag & "'")
      ParseData(Last.Tag, sBuffer)
    Case Else
      Main.WriteDebugLog(LogLabel & "Unknown error occured while trying to get YouLess data for device with address '" & Last.Tag & "'! HTTP=" & Last.Code & ", Buffer=" & sBuffer)
  End Select

  Try hYouLess.Close

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' parse raw data
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub ParseData(sAddress As String, sData As String)

  Dim iDeviceId As Integer
  Dim cData As Collection
  Dim sCon, sPwr, sCnt As String

  cData = JSON.Decode(sData)
  sCnt = Replace(Trim(cData["cnt"]), ",", ".")
  sPwr = cData["pwr"]
  sCon = cData["con"]
  If $bDebug Then
    Main.WriteDebugLog(LogLabel & "Device: " & sAddress)
    Main.WriteDebugLog(LogLabel & "Counter: " & sCnt & " kWh")
    Main.WriteDebugLog(LogLabel & "Usage: " & sPwr & " Watt")
    Main.WriteDebugLog(LogLabel & "Status: " & sCon)
  Endif

  ' find device id
  iDeviceId = Devices.Find(Instance, sAddress, InterfaceId, "YOULESS")
  ' update device
  If iDeviceId Then
    Devices.ValueUpdate(iDeviceId, 1, sCnt, Devices.ValueType_Energy_kWh)
    Devices.ValueUpdate(iDeviceId, 2, sPwr, Devices.ValueType_Power_Watt)
    Devices.ValueUpdate(iDeviceId, 3, sCon)
  Endif

Catch
  Main.WriteDebugLog(LogLabel & "Error parsing YouLess data '" & Error.Text & "' at '" & Error.Where & "'")

End

Public Sub hYouLess_Error()

  Main.WriteDebugLog(LogLabel & "ERROR: fetching YouLess data: " & Last.Status)
  Try hYouLess.Close

End

