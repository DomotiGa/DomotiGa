' Gambas class file

' Description:
' CLGTV.class
' Support for LG TV control.

' Development Status:
' Beta. Needs Testing.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Property TCPHost As String
Property TCPPort As Integer
Property LGTVDebug As Boolean
Property Interface As String
Property SerPort As String
Property Baud As String

Private sTCPHost As String
Private iTCPPort As Integer
Private bLGTVDebug As Boolean
Private sInterface As String
Private sSerPort As String
Private sBaud As String

Public hLGTV As New Socket
Public hLGTVSer As New SerialPort

Public sBuffer As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' connect to the tcp host:port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function ConnectTCP() As Boolean

  ' try to close the connection
  Try hLGTV.Close

  ' get a new one
  hLGTV = New Socket As "LGTV"
  hLGTV.Connect(sTCPHost, iTCPPort)

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("LG TV receiver Error: ") & ERROR.Text)
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' connect to the serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function ConnectSerial() As Boolean

  ' try to close the connection
  Try hLGTVSer.Close

  ' get a new one
  hLGTVSer = New Serialport As "LGTVSer"
  With hLGTVSer
    .PortName = sSerPort
    .Speed = sBaud
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .FlowControl = 0
    .Open()
  End With

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("LG TV receiver Error: ") & ERROR.Text)
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' socket is connected
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub LGTV_Ready()

  Main.WriteLog(("LG TV receiver TCP socket connected."))

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' socket is closed
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub LGTV_Closed()

  Main.WriteLog(("LG TV receiver TCP socket closed."))

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' disconnect from the tcp host
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Disconnect() As Boolean

  ' try to close the connection
  Try hLGTV.Close
  Try hLGTVSer.Close

  If InStr(sInterface, "tcp") Then
    Main.WriteLog(("LG TV receiver TCP socket close."))
  Else
    Main.WriteLog(("LG TV receiver serial port close."))
  Endif
  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("LG TV receiver Error: ") & ERROR.Text)
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' error while connected/connecting to host
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub LGTV_Error()

  ' handle error
  Select Case hLGTV.Status
    Case Net.CannotCreateSocket
      Main.WriteLog(("LGTV: The system does not allow to create a socket."))
    Case Net.HostNotFound
      Main.WriteLog(("LGTV: Host '") & sTCPHost & ("' not found."))
    Case Net.ConnectionRefused
      Main.WriteLog(("LGTV: Unable to connect to receiver. Connection refused."))
    Case Net.CannotRead
      Main.WriteLog(("LGTV: Error reading data."))
    Case Net.CannotWrite
      Main.WriteLog(("LGTV: Error writing data."))
  End Select

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send command via serial port or tcp socket
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub SendCmd(sCmd As String)

  Dim sStr As String = sCmd & "\r"

  If sInterface = "tcp" Then
    Try Print #hLGTV, sStr
    If Error Then Main.WriteDebugLog(("[LGTV] Error writing data to the TCP port! -> ") & Error.Text)
  Else
    Try Print #hLGTVSer, sStr
    If Error Then Main.WriteDebugLog(("[LGTV] Error writing data to the serial port! -> ") & Error.Text)
  Endif
  If bLGTVDebug Then Main.WriteDebugLog("[LGTV] > " & sCmd)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' to switch unit with device control
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub SendCommand(sAddress As String, sValue As String)

  ' ignore sAddress, only fixed ID 1
  Select Case LCase(sValue)
    Case "on"
      SendCmd("ka 01 01")
    Case "off"
      SendCmd("ka 01 00")
    Case Else
      If Main.bLGTVDebug Then Main.WriteDebugLog(("[LGTV] Unsupported command received: ") & sValue)
  End Select

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' to control from xmlrpc or music page buttons
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub SetCommand(sCmd As String, sValue As String, sAddress As String)

  ' ignore sAddress, only fixed ID 1
  Select Case LCase(sCmd)
    Case "power"
      ' 00 - Off, 01 - On
      SendCmd(IIf(sValue == "on", "ka 01 01", "ka 01 00"))
    Case "volume"
      ' 0-100 (0-64 Hex)
      SendCmd("kf 01 " & Hex(Val(sValue)))
    Case "mute"
      ' 00 - Off, 01 - On
      SendCmd(IIf(sValue == "on", "ke 01 01", "ke 01 00"))
    Case "screenmute"
      ' 00 - Off, 01 - On
      SendCmd(IIf(sValue == "on", "kd 01 01", "kd 01 00"))
    Case "input"
      Select Case sValue
        Case "dtv"
          SendCmd("kb 01 00")
        Case "analog"
          SendCmd("kb 01 01")
        Case "av1"
          SendCmd("kb 01 02")
        Case "av2"
          SendCmd("kb 01 03")
        Case "comp1"
          SendCmd("kb 01 04")
        Case "comp2"
          SendCmd("kb 01 05")
        Case "rgb", "pc"
          SendCmd("kb 01 07")
        Case "hdmi1", "dvi"
          SendCmd("kb 01 08")
        Case "hdmi2"
          SendCmd("kb 01 09")
      End Select
    Case "aspect"
      Select Case sValue
        Case "4:3"
          SendCmd("kc 01 01")
        Case "16:9"
          SendCmd("kc 01 02")
      End Select
    Case "channel"
      Select Case sValue
        Case "back"
          SendCmd("mc 01 B2")
      End Select
    Case "cli"
      SendCmd(sValue)
    Case Else
      If Main.bLGTVDebug Then Main.WriteDebugLog(("[LGTV] Unsupported command received: ") & sCmd & " " & sValue)
  End Select

End

Public Sub GetCommand(sCmd As String, sAddress As String) As String

  ' ' ignore sAddress, only fixed unit 1
  ' SELECT CASE LCase(sCmd)
  '   CASE "power"
  '     SendCmd("ka 01 FF")
  '   CASE ELSE
  '     IF Main.bLGTVDebug THEN Main.WriteDebugLog(("[LGTV] Unsupported get value received: ") & sCmd)
  ' END SELECT

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' data received on tcp socket
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub LGTV_Read()

  Dim sData As String

  Try sData = Read #hLGTV, 1
  If Error Then
    Main.WriteDebugLog(("[LGTV] Error reading data from the TCP port! -> ") & Error.Text)
  Else
    If sData = Chr$(10) Then ' buffer until linefeed then parse
      If Len(sBuffer) > 1 Then ParseLine(sBuffer)
      sBuffer = Null
    Else
      sBuffer &= sData
    Endif
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' data received on serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub LGTVSer_Read()

  Dim sData As String

  Try sData = Read #hLGTVSer, 1
  If Error Then
    Main.WriteDebugLog(("[LGTV] Error reading data from the serial port! -> ") & Error.Text)
  Else
    If sData = Chr$(10) Then ' buffer until linefeed then parse
      If Len(sBuffer) > 1 Then ParseLine(sBuffer)
      sBuffer = Null
    Else
      sBuffer &= sData
    Endif
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' parse received data
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub ParseLine(sBuf As String)

  Dim sStr, sCat, sItem, sValue As String

  If Main.bLGTVDebug Then Main.WriteDebugLog(("[LGTV] < ") & sBuf)

  ' a 00 OK01x
  ' a 00 NG01x
  If InStr(sBuf, "OK") Then
    sCat = Left(sBuf, 1)
    sStr = Mid(sBuf, 8, 2)
    Select Case sCat
      Case "a" ' main power
        sItem = "Power"
        If sStr = "01" Then sValue = "On"
        If sStr = "00" Then sValue = "Off"
        LGTVSetValue(sItem, sValue)
    End Select
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' save received values
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub LGTVSetValue(sItem As String, vValue As Variant)

  Main.SetGlobalVar("LGTV_" & sItem, vValue)
  If Main.bLGTVDebug Then Main.WriteDebugLog("[LGTV] Received Item: " & sItem & " Value: " & vValue)

End

' implement properties
Private Function TCPHost_Read() As String

  Return sTCPHost

End

Private Sub TCPHost_Write(Value As String)

  sTCPHost = Value

End

Private Function TCPPort_Read() As Integer

  Return iTCPPort

End

Private Sub TCPPort_Write(Value As Integer)

  iTCPPort = Value

End

Private Function LGTVDebug_Read() As Boolean

  Return bLGTVDebug

End

Private Sub LGTVDebug_Write(Value As Boolean)

  bLGTVDebug = Value

End

Private Function Baud_Read() As String

  Return sBaud

End

Private Sub Baud_Write(Value As String)

  sBaud = Value

End

Private Function SerPort_Read() As String

  Return sSerPort

End

Private Sub SerPort_Write(Value As String)

  sSerPort = Value

End

Private Function Interface_Read() As String

  Return sInterface

End

Private Sub Interface_Write(Value As String)

  sInterface = Value

End
