' Gambas class file

' Description:
' CJeeLabs.class
' Support for JeeLabs JeeLinks interface and Sensors and KAKU commands

' Development Status:
' Working for JeeNodes.
' JLink needs to be loaded with RF12 DEMO sketch for
' KAKU control support.

' Links:
' http://jeelabs.org

' Credits:
' Thanks to Jean-Claude Wippler,
' Wouter Wolkers and Andy van Dongen.

' DomotiGa - an open source home automation program.
' Copyright(C) 2009-2011 Ron Klinkien.

' Read file called COPYING for license details.

Property Port As String
Property Baud As String
Property JeeLabsDebug As Boolean

Private sPort As String
Private sBaud As String
Private bJeeLabsDebug As Boolean

Public hJeeLabs As New SerialPort
Private sBuffer As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' open serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Connect() As Boolean

  ' try to close the port
  Try hJeeLabs.Close

  ' get a new one
  hJeeLabs = New Serialport As "JeeLabs"

  With hJeeLabs
    .PortName = sPort
    .Speed = sBaud
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .FlowControl = 0
    .Open()
  End With

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("JeeLabs Error: ") & ERROR.Text)
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' close port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Disconnect() As Boolean

  ' try to close the connection
  Try hJeeLabs.Close
  Main.WriteLog(("JeeLabs serial port close."))

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("JeeLabs Error: ") & ERROR.Text)
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' called from devices module
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub SendCommand(sAddress As String, sCmd As String)

  Dim iDeviceId As Integer
  Dim sType, sJeeCmd, sOnOff As String

  iDeviceId = Devices.Find(sAddress, Devices.FindInterface("JeeLabs Interface"))
  If iDeviceId Then
    sType = Devices.FindTypeForDevice(iDeviceId)
  Else
    Return
  Endif

  If Main.bJeeLabsDebug Then Main.WriteDebugLog(("[JeeLabs] SendCommand (sAddress='" & sAddress & "', sCmd = '" & sCmd & "')"))

  Select sType
    Case "ARC", "KAKU" ' KlikAanKlikUit with CodeWheel, NEXA, Domia Lite, Proove, ByeByeStandby, ELRO AB600, Intertechno, Duwi
      If Left$(sAddress, 1) Like "[A-Z]" And Right$(sAddress, 1) Like "[0-9]" Then
        KAKU(sAddress, sCmd, iDeviceId)
      Else
        Main.WriteDebugLog(("[JeeLabs] Invalid ARC or KAKU address '") & sAddress & ("' given!"))
      Endif
    Case Else
      Main.WriteDebugLog(("[JeeLabs] unsupported device type in SendCommand. (" & sType & ")"))
  End Select
End

Private Sub KAKU(sAddress As String, sCmd As String, Optional iDeviceId As Integer)

  Dim iDevice, iUnit, iStatus As Integer

  iUnit = Asc(Left$(sAddress, 1)) - &H40
  iDevice = Right$(sAddress, 2)

  Select UCase(sCmd)
    Case "ON"
      iStatus = "1"
    Case "OFF"
      iStatus = "0"
    Default
      Main.WriteDebugLog(("[JeeLabs] Unknown KAKU command '") & UCase(sCmd) & ("' given!"))
      Return
  End Select

  If Main.bJeeLabsDebug Then Main.WriteDebugLog(("[JeeLabs] Sending kaku command: " & iUnit & "," & iDevice & "," & iStatus & " k"))
  Try Print #hJeeLabs, iUnit & "," & iDevice & "," & iStatus & " k"
  If Error Then Main.WriteDebugLog(("[JeeLabs] Error writing data to the serial port! -> ") & Error.Text)

End

Public Sub JeeLabs_Read()

  Dim sData As String

  Try Read #hJeeLabs, sData, 1
  If Error Then Main.WriteDebugLog(("[JeeLabs] Error reading data from serial port! -> ") & Error.Text)
  If sData = Chr(10) Then ' buffer until linefeed then parse
    If Len(sBuffer) > 1 And If Left(sBuffer, 2) = "OK" Then ParseLine(Left(sBuffer, Len(sBuffer) - 1))
    sBuffer = Null
  Else
    sBuffer &= sData
  End If

End

Private Sub ParseLine(sData As String)

  Dim sLine, sMotion, sLowBat As String
  Dim aScan As String[]
  Dim iDeviceId, iSensorId, iLDR, iHumi, iTemp, iLowBat As Integer
  Dim bPIR As Boolean

  If Main.bJeeLabsDebug Then Main.WriteDebugLog("[JeeLabs] " & sData)

  ' parse each line
  For Each sLine In Split(sData, "\n")
    ' parse sensor data
    aScan = Scan(sLine, "* * * * * *")
    If aScan.Count = 6 Then
      iSensorId = aScan[1]
      iSensorId = IIf(iSensorId > 31, iSensorId - 32, iSensorId)
      iLDR = aScan[2]
      bPIR = BTst(CInt(aScan[3]), 0)
      iHumi = Lsr(CInt(aScan[3]), 1)
      iTemp = (((256 * (CInt(aScan[5]) And 3) + CInt(aScan[4])) Xor 512) - 512)
      iLowBat = Lsr(CInt(aScan[5]), 2) And 1
      sLowBat = If(iLowBat, "Empty", "OK")
      sMotion = IIf(bPIR, "Motion", "No Motion")
      If Main.bJeeLabsDebug Then
        Main.WriteDebugLog("[JeeLabs] Sensor ID: " & iSensorId)
        Main.WriteDebugLog("[JeeLabs] LDR      : " & iLDR)
        Main.WriteDebugLog("[JeeLabs] PIR      : " & sMotion)
        Main.WriteDebugLog("[JeeLabs] Humi     : " & iHumi)
        Main.WriteDebugLog("[JeeLabs] Temp     : " & iTemp)
        Main.WriteDebugLog("[JeeLabs] LowBat   : " & iLowBat & " (" & sLowBat & ")")
      Endif
      ' try to find device with address, and correct interface type.
      iDeviceId = Devices.Find(iSensorId, Devices.FindInterface("JeeLabs Interface"))
      ' if found then update it's value
      If iDeviceId Then
        Devices.ValueUpdate(iDeviceId, iTemp, iHumi, iLDR, sMotion)
        Devices.Battery(iDeviceId, sLowBat)
      Endif
    Endif
  Next

End

' implement properties
Function Port_Read() As String

  Return sPort

End

Sub Port_Write(Value As String)

  sPort = Value

End

Private Function Baud_Read() As String

  Return sBaud

End

Private Sub Baud_Write(Value As String)

  sBaud = Value

End

Private Function JeeLabsDebug_Read() As Boolean

  Return bJeeLabsDebug

End

Private Sub JeeLabsDebug_Write(Value As Boolean)

  bJeeLabsDebug = Value

End
