' Gambas class file

' Description:
' CTemp08.class
' Support for Midon's TEMP08 1-wire interface.

' Development Status:
' Working, but only temp sensors implemented tested yet.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Property Port As String
Property Baud As String
Property Temp08Debug As Boolean

Private sPort As String
Private sBaud As String
Private bTemp08Debug As Boolean

Public hTemp08 As New SerialPort
Public tTemp08 As New Timer

Public sBuffer As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' open serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Connect() As Boolean

  ' try to close the port
  Try hTemp08.Close

  ' get a new one
  hTemp08 = New Serialport As "Temp08"

  With hTemp08
    .PortName = sPort
    .Speed = sBaud
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .Open()
  End With

  ' start poll timer for Temp08 status LED
  tTemp08 = New Timer As "tTemp08LED"
  tTemp08.Delay = 250
  tTemp08.Stop

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("Temp08 Error: ") & ERROR.Text)
  Return False

End

Public Sub Temp08_Read()

  Dim sData As String

  Try sData = Read #hTemp08, 1
  If Error Then Main.WriteDebugLog(("[Temp08] Error reading data from serial port! -> ") & Error.Text)
  If sData = Chr(10) Then ' buffer until newline then parse
    If Len(sBuffer) > 1 Then ParseLine(sBuffer)
    sBuffer = Null
  Else
    sBuffer &= sData
  Endif

End

Public Sub ParseLine(sStr As String)

  Dim iDeviceId As Integer
  Dim aScan As String[]

  Main.ControlLed("OneWire", "On")
  If Main.bServer Then tTemp08.Start

  ' example output
  ' SUN 00:36:20
  ' Reading Sensors...
  ' Voltage #01[4 D0000004FC78A26] = 00.32 V 04.98 V
  ' Temp #01[4D0000004FC78A26]=23.75C
  ' Temp #02[150008013A024910]=22.43C
  ' Temp #03[7A0008014A6BC310]=22.68C

  If bTemp08Debug Then Main.WriteDebugLog("[Temp08] " & sStr)

  ' Temp08 temp sensor support
  If Mid$(sStr, 1, 4) = "Temp" Then
    If bTemp08Debug Then Main.WriteDebugLog(("[Temp08] We got DS1820 temperature data."))
    aScan = Scan(sStr, "*[[]*]=*")
    If aScan.Count = 3 Then
      iDeviceId = Devices.Find(aScan[1], Devices.FindInterface("Midon TEMP08"), "DS18B20")
      If iDeviceId Then Devices.ValueUpdate(iDeviceId, LTrim(Left(aScan[2], -2)), "", "", "")
    Endif
  Endif
  ' put support for other sensortypes here

End

Public Sub tTemp08LED_Timer()

  Main.ControlLed("OneWire", "Off")
  tTemp08.Stop

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' close port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Disconnect() As Boolean

  ' try to close the connection
  Try hTemp08.Close
  Main.WriteLog(("Temp08 serial port close."))

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("Temp08 Error: ") & ERROR.Text)
  Return False

End

' implement properties
Function Port_Read() As String

  Return sPort

End

Sub Port_Write(Value As String)

  sPort = Value

End

Private Function Baud_Read() As String

  Return sBaud

End

Private Sub Baud_Write(Value As String)

  sBaud = Value

End

Private Function Temp08Debug_Read() As Boolean

  Return bTemp08Debug

End

Private Sub Temp08Debug_Write(Value As Boolean)

  bTemp08Debug = Value

End
