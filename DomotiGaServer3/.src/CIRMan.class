' Gambas class file

' Description:
' CIRMan.class
' Use UIR or IRMan Infrared receiver to control devices.

' Development Status:
' Not working yet.

' Links:
' http://www.raphnet.net/divers/documentation/irman_protocol.txt

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

Property Port As String
Property IRManDebug As Boolean

Private sPort As String
Private bIRManDebug As Boolean

Public hIRMan As New SerialPort

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' open serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Connect() As Boolean

  ' try to close the port
  Try hIRMan.Close

  ' get a new one
  hIRMan = New Serialport As "IRMan"

  With hIRMan
    .PortName = sPort
    .Speed = 9600
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .Open()
  End With

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("IRMan Error: ") & ERROR.Text)
  Return False

End

Public Function Run() As Boolean

  ' init device
  hIRMan.RTS = True
  hIRMan.DTR = True
  Try Print #hIRMan, "I"
  Sleep 0.5
  Try Print #hIRMan, "R"

Catch
  If Main.bIRManDebug Then Main.WriteDebugLog(("[IRMan] Error initializing receiver!"))

End

Public Sub IRMan_Read()

  Dim sData As String

  ' read the 6 unique bytes
  Try Read #hIRMan, sData, 6
  If Not Error Then
    ParseLine(sData)
    sData = Null
  Endif

End

Public Sub ParseLine(sData As String)

  Dim iCnt As Integer
  Dim sButton As String
  Dim sRemote As String = "irman"

  For iCnt = 1 To Len(sData)
    sButton &= Hex(Asc(Mid$(sData, iCnt, 1)), 2)
  Next
  If Main.bIRManDebug Then Main.WriteDebugLog(("[UIR/IRMan] Remote: ") & sRemote & (" Button: ") & sButton)
  Events.CheckIRRemoteEvents("irman", sButton)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' close port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Disconnect() As Boolean

  ' try to close the connection
  Try hIRMan.Close
  Main.WriteLog(("IRMan serial port close."))

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("IRMan Error: ") & ERROR.Text)
  Return False

End

' implement properties
Function Port_Read() As String

  Return sPort

End

Sub Port_Write(Value As String)

  sPort = Value

End

Private Function IRManDebug_Read() As Boolean

  Return bIRManDebug

End

Private Sub IRManDebug_Write(Value As Boolean)

  bIRManDebug = Value

End

