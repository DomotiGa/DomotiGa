' Gambas module file

' Description:
' AVControl.module
' Support for control of audio and video devices.

' Development Status:
' Just started.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC sDenonCmds AS String[] = ["power", "mainpower", "z2power", "volume", "z2volume", "mute", "z2mute", "input", "z2input", "cli"]
PUBLIC sDenonValues AS String[] = ["on,off", "on,off", "on,off", "<db>,up,down,off", "<db>,up,down,off", "on,off", "on,off", "phone,cd,tuner,dvd,vdp,tv,dbs,vcr-1,vcr-2,vcr-3,v.aux,cdr/tape", "phone,cd,tuner,dvd,vdp,tv,dbs,vcr-1,vcr-2,vcr-3,v.aux", "<cmd>"]
PUBLIC sDenonInfo AS String[] = ["Switch receiver power on/off", "Switch main zone power on/off", "Switch zone2 power on/off", "Set main volume", "Mute audio", "Mute audio zone2", "Select input source", "Select input source zone2", "Send a custom command"]

PUBLIC sOnkyoCmds AS String[] = ["power", "z2power", "volume", "z2volume", "mute", "z2mute", "input", "z2input", "cli"]
PUBLIC sOnkyoValues AS String[] = ["on,off", "on,off", "<0-100>,up,down,up1,down1", "<0-100>,up,down,up1,down1", "on,off,toggle", "on,off,toggle",
"vcr,dvr,video1,cbl/sat,video2,game/tv,game,video3,aux1,aux,video4,aux2,video5,video6,video7,dvd,tv/tape,tape,tape1,tape2,phono,cd,fm,am,tuner,net,server,inet radio,usb front,usb rear,port,up,down,off",
"vcr,dvr,video1,cbl/sat,video2,game/tv,game,video3,aux1,aux,video4,aux2,video5,video6,video7,dvd,tv/tape,tape,tape1,tape2,phono,cd,fm,am,tuner,net,server,inet radio,usb front,usb rear,port,up,down,off", "<cmd>"]
PUBLIC sOnkyoInfo AS String[] = ["Switch receiver power on/off", "Switch zone2 power on/off", "Set main volume", "Set zone2 volume", "Mute audio", "Mute zone2 audio", "Select input source", "Select zone2 input", "Send a custom command"]

PUBLIC sIPortCmds AS String[] = ["playctrl", "requestipodname", "leddocked", "ledundocked", "requestplayingsongindex"]
PUBLIC sIPortValues AS String[] = ["play,next,stop,prev,startff,startrew,endffrew", "", "on,off,dim,medium,bright", "on,off,dim,medium,bright", ""]
PUBLIC sIPortInfo AS String[] = ["Control play mode", "Request iPod name", "Control LED docked", "Control LED undocked", "Request playing song index"]

PUBLIC sSqueezeServerCmds AS String[]
PUBLIC sSqueezeServerValues AS String[]
PUBLIC sSqueezeServerInfo AS String[]

PUBLIC sSharpTVCmds AS String[] = ["power", "volume", "mute", "avmode", "wide", "tvchannel", "dtvchannel", "input", "surround", "text", "cli"]
PUBLIC sSharpTVValues AS String[] = ["on,off", "0-60", "on,off", "1-7,100", "1-11", "1-99,up,down", "1-9999,up,down", "1-9,tv,dtv", "on,off", "on,off,100-899", ""]
PUBLIC sSharpTVInfo AS String[] = ["Switch TV power on/off", "Set audio volume", "Mute audio", "Set av mode", "Set aspect ratio", "Select tv channel", "Select dtv channel", "Select input", "Set surround mode", "Control teletext", "Send custom command"]

PUBLIC sLGTVCmds AS String[] = ["power", "volume", "mute", "screenmute", "aspect", "tvchannel", "cli"]
PUBLIC sLGTVValues AS String[] = ["on,off", "0-100", "on,off", "on,off", "4:3,16:9", "back", ""]
PUBLIC sLGTVInfo AS String[] = ["Switch TV power on/off", "Set audio volume", "Mute audio", "Mute screen", "Set aspect ratio", "Select channel", "Send a custom command"]

PUBLIC SUB Set(sModel AS String, sCmd AS String, sValue AS String, sAddress AS String) AS Boolean

  SELECT LCase(sModel)
    CASE "denon"
      IF Main.hDenon THEN
        Main.hDenon.SetCommand(sCmd, sValue, sAddress)
        RETURN TRUE
      ENDIF
    CASE "onkyo"
      IF Main.hOnkyo THEN
        Main.hOnkyo.SetCommand(sCmd, sValue, sAddress)
        RETURN TRUE
      ENDIF
    CASE "squeezeplayer"
      IF Main.hSqueezeServer THEN
        Main.hSqueezeServer.SetCommand(sCmd, sValue, sAddress)
        RETURN TRUE
      ENDIF
    CASE "iport"
      IF Main.hIPort THEN
        Main.hIPort.SetCommand(sCmd, sValue, sAddress)
        RETURN TRUE
      ENDIF
    CASE "lgtv"
      IF Main.hLGTV THEN
        Main.hLGTV.SetCommand(sCmd, sValue, sAddress)
        RETURN TRUE
      ENDIF
    CASE "sharptv"
      IF Main.hSharpTV THEN
        Main.hSharpTV.SetCommand(sCmd, sValue, sAddress)
        RETURN TRUE
      ENDIF
  END SELECT

  RETURN FALSE

END

PUBLIC SUB Get(sModel AS String, sCmd AS String, sAddress AS String) AS Boolean

  SELECT LCase(sModel)
    CASE "denon"
      IF Main.hDenon THEN
        Main.hDenon.GetCommand(sCmd, sAddress)
        RETURN TRUE
      ENDIF
    CASE "onkyo"
      IF Main.hOnkyo THEN
        Main.hOnkyo.GetCommand(sCmd, sAddress)
        RETURN TRUE
      ENDIF
    CASE "squeezeplayer"
      IF Main.hSqueezeServer THEN
        Main.hSqueezeServer.GetCommand(sCmd, sAddress)
        RETURN TRUE
      ENDIF
    CASE "iport"
      IF Main.hIPort THEN
        Main.hIPort.GetCommand(sCmd, sAddress)
        RETURN TRUE
      ENDIF
    CASE "lgtv"
      IF Main.hLGTV THEN
        Main.hLGTV.GetCommand(sCmd, sAddress)
        RETURN TRUE
      ENDIF
    CASE "sharptv"
      IF Main.hSharpTV THEN
        Main.hSharptTV.GetCommand(sCmd, sAddress)
        RETURN TRUE
      ENDIF
  END SELECT

  RETURN FALSE

END
