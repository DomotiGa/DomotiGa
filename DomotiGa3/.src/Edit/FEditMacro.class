' Gambas class file

' Description:
' FEditMacro.class
' Macro editor for events.

' Development Status:
' Working.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Private cMacro As New Collection
Private iKey As Integer
Public tMessage As New Timer

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)
  FillMacro()

  tMessage = New Timer As "tMessage"
  tMessage.Delay = 3000 ' 3 seconds
  tMessage.Stop

End

Public Sub Run() As Boolean

  Return Not Me.ShowModal()

End

Public Sub FillMacro()

  Dim iCount As Integer
  Dim rResult As Result

  rResult = Main.hDB.Exec("SELECT * FROM macros")
  If Not rResult Then
    lvMacro.Add("ERROR", "Error: table 'macro' not found!")
    Return
  Endif
  iKey = 0
  For iCount = 0 To rResult.Max
    lvMacro.Add(iKey, rResult!name)
    cMacro.Add(rResult!formula, iKey)
    rResult.MoveNext
    Inc iKey
  Next

End

Public Sub btnOK_Click()

  Dim rResult As Result
  Dim tableMacros As Table
  Dim iIndex As Integer

  ' delete complete history
  Try Main.hDB.Tables.Remove("macros")
  ' recreate empty one
  tableMacros = Main.hDB.Tables.Add("macros")
  tableMacros.Fields.Add("id", db.Serial)
  tableMacros.Fields.Add("name", db.String, 64)
  tableMacros.Fields.Add("formula", db.String, 0)
  tableMacros.PrimaryKey = ["id"]
  tableMacros.Update()

  For iIndex = 0 To iKey
    If cMacro.Exist(iIndex) Then
      Main.hDB.Begin()
      rResult = Main.hDB.Create("macros")
      rResult!name = lvMacro[iIndex].Text
      rResult!formula = cMacro[iIndex]
      rResult.Update()
      Main.hDB.Commit()
    Endif
  Next

  Me.Close(True)

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub lvMacro_Click()

  taMacro.Text = cMacro[lvMacro.Current.key]

End

Public Sub btEdit_Click()

  If lvMacro.Count = 0 Then Return
  taMacro.Text = FActionScriptEditor.Run(cMacro[lvMacro.Current.key])
  cMacro[lvMacro.Current.key] = taMacro.Text

End

Public Sub lvMacro_Activate()

  btEdit_Click()

End

Public Sub lvMacro_Rename()

  lvMacro.Item.Rename()

End

Public Sub btAdd_Click()

  lvMacro.Add(iKey, "Macro")
  cMacro.Add("", iKey)
  lvMacro.MoveTo(iKey)
  Inc iKey
  taMacro.Clear()
  lvMacro_Rename()

End

Event Rename()

Public Sub taMacro_DblClick()

  btEdit_Click()

End

Public Sub btDelete_Click()

  If lvMacro.Count = 0 Then Return
  cMacro.Remove(lvMacro.Current.key)
  lvMacro.Current.Delete()
  taMacro.Text = ""

End

Public Sub btEval_Click()

  Dim sToEval As String

  ' if a part of the formula is selected, we only elvaluate this part
  If taMacro.Selection.Length = 0 Then
    sToEval = taMacro.Text
  Else
    sToEval = taMacro.Selection.Text
  Endif

  tbEval.Text = Events.EvalFormula(sToEval)
  tMessage.Start

End

Public Sub tMessage_Timer()

  tbEval.Text = ""
  tMessage.Stop

End
