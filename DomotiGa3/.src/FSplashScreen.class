' Gambas class file

' Description:
' FSplashScreen.class

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public tStartup As Timer
Private bAuthOk As Boolean
Private iCountLogin As Integer

Public Sub _new()

  tStartup = New Timer As "tStartup"
  tStartup.Delay = 100
  tStartup.Enabled = True

End

Public Sub Form_Open()

  lblVersion.Text = "version " & Main.sProgramVersion
  Me.Height = 200
  Panel1.Height = 188
  prbStatus.Y = 120
  lblStatus.Y = 152
  txtCopyright.Text = "Copyright (C) 2008-" & Year(Now) & " by Ron Klinkien"

End

Public Sub tStartup_Timer()

  tStartup.Enabled = False
  If Main.bLogout Then
    Login()
  Else
    StartProgram()

    ' don't continue if clicked on close/abort during database setup
    If Not Main.ConnectedDatabase() Then
      bAuthOk = True
      Me.Close
    Endif

  Endif

End

Private Sub StartProgram()

  SetProgressValue(0)

  lblStatus.Text = ("Checking directory structure ...")
  SetProgressValue(20)
  Wait 0.05
  Main.Setup_BroadcastAddrs()
  Main.Setup_Logfiles()
  Main.DisplayProgramInfo()
  Main.CreateDirectoryTree()

  lblStatus.Text = ("Loading configuration ...")
  SetProgressValue(40)
  lblStatus.Text = ("Connecting to database ...")
  Wait 0.05
  If Not Main.ConnectDatabase(True) Then
    FInstallDBWizard.ShowModal

    ' Exit if the database connection is not available
    If Not Main.ConnectedDatabase() Then Return
  Endif

  ' update database
  SetProgressValue(50)
  lblStatus.Text = ("Updating database ...")
  Wait 0.05
  Main.UpdateDatabase()

  SetProgressValue(60)
  lblStatus.Text = ("Loading plugins ...")
  Wait 0.05
  Main.Setup()

  SetProgressValue(80, ("Starting main program ..."))

  ' update house status
  If Main.bServer Then
    If Not Main.GetGlobalVar("House_Mode") Then Main.SetGlobalVar("House_Mode", "normal")
    Main.ChangeHouseMode(Main.GetGlobalVar("House_Mode"))
    Main.ChangeMuteMode(Main.GetGlobalVar("Mute"))
  Endif

  If Main.GetGlobalVar("EmailCount") Then Main.iNewMails = Main.GetGlobalVar("EmailCount")
  If Main.GetGlobalVar("CallCount") Then Main.iNewCalls = Main.GetGlobalVar("CallCount")
  If Main.GetGlobalVar("VoiceMailCount") Then Main.iNewVoicemails = Main.GetGlobalVar("VoiceMailCount")

  Main.WriteLog("[Main] Entering main program loop.")
  SetProgressValue(100, "Entering main program loop ...")
  Wait 0.05

  ' program startup
  If Main.bServer Then ' ' only do it in server mode
    Main.UpdateGlobalVars()
  Else
    FMain.UpdateStatusPanel()
  Endif

  Main.Check_for_Action()
  Main.SetupTimers() ' start timers
  FMain.txtTime.Text = Format$(Now(), "d mmmm h:nn")

  If Main.bAuthEnabled Then
    Login()
  Else
    bAuthOk = True
    Me.Close
  Endif

End

Public Sub Login()

  Me.Height = 260
  Panel1.Height = 246
  lblStatus.Y = 215
  Label1.Visible = True
  Label2.Visible = True
  txtUser.Visible = True
  txtPassword.Visible = True
  btnLogin.Visible = True
  prbStatus.Visible = False
  btnLogin.Enabled = True
  iCountLogin = 0
  txtUser.SetFocus
  lblStatus.Text = ("Please authenticate yourself.")

  If Main.GetGlobalVar("Last_User") Then
    txtUser.Text = Main.GetGlobalVar("Last_User")
    txtPassword.SetFocus()
  Endif

End

Public Sub SetProgressValue(iValue As Integer, Optional sStatus As String)

  If iValue > 100 Then iValue = 100
  If iValue < 0 Then iValue = 0

  prbStatus.Value = iValue / 100
  If sStatus Then lblStatus.Text = sStatus

End

Public Sub btnLogin_Click()

  Enter()

End

Private Sub Enter()

  If Not txtUser.Text Then
    lblStatus.Text = ("Please specify your username.")
  Else
    If CheckAuth() Then
      bAuthOk = True
      Me.Close
    Else
      lblStatus.Text = ("Sorry wrong username and/or password!")
      ' and only allow three failures to login
    Endif
  Endif

End

Private Sub CheckAuth() As Boolean

  Dim rResult As Result
  Dim sSalt, sHash, sType As String

  Try rResult = Main.hDB.Exec("SELECT username, password, id, admin, cookie FROM users WHERE username = &1", txtUser.Text)
  If rResult.Count Then
    If (Len(rResult!password) = 33) And (Left$(rResult!password, 3) = "MD5") Then
      sSalt = Left$(rResult!password, 11)
      sType = "MD5" ' Left$(sSalt, 3)
      sSalt = Right$(sSalt, 8)
      sHash = Right$(Crypt.MD5(txtPassword.Text, sSalt), 22)
    Else
      sHash = rResult!password
    Endif
    If rResult!password = (sType & sSalt & sHash) Then
      Main.SetGlobalVar("Last_User", txtUser.Text)
      Main.sActiveUser = txtUser.Text
      Main.sActiveUserID = rResult!id
      If Len(rResult!cookie) < 1 Then 
      ' we have to init the cookie; the decrypted cookie will never change
      ' in DB the cookie is encrypted with MD5 (MD5 hash seed) hash of current password
      ' we avoid sending user password over to DB, but the crypt key is however communicated in clear!
      ' the cookie will protect private user info within the DB
      Try Main.hDB.Exec("UPDATE users SET cookie = AES_ENCRYPT(&1,&2) WHERE username = &3", Crypt.MD5(txtPassword.Text), Crypt.MD5(txtPassword.Text, Right(sHash, 8)), txtUser.Text)
      Endif
      Try rResult = Main.hDB.Exec("SELECT AES_DECRYPT(cookie,&1) AS cookie, admin FROM users WHERE username = &2", Crypt.MD5(txtPassword.Text, Right(sHash, 8)), txtUser.Text)
      Main.sActiveUserCookie = rResult!cookie ' the crypt key for private user info in the DB

      If rResult!admin Then
        Main.WriteLog(("Logged in as '") & txtUser.Text & ("' (Administrator)."))
        Main.bUserisAdmin = True  ' hide non admin menu's
        FMain.MenuEdit.Visible = True
        FMain.MenuDevices.Visible = True
        FMain.MenuSetup.Visible = True
        FMain.MenuModules.Visible = True
        FMain.MenuInterfaces.Visible = True
        FMain.MenuTools.Visible = True
        FMain.MenuThermostats.Visible = True
        FMain.MenuEvents.Visible = True
      Else
        Main.WriteLog(("Logged in as '") & txtUser.Text & ("' (User)."))
        Main.bUserisAdmin = False
        FMain.MenuEdit.Visible = False
        FMain.MenuDevices.Visible = False
        FMain.MenuSetup.Visible = False
        FMain.MenuModules.Visible = False
        FMain.MenuInterfaces.Visible = False
        FMain.MenuTools.Visible = False
        FMain.MenuThermostats.Visible = False
        FMain.MenuEvents.Visible = False
      Endif
      FMain.pbUser.Visible = True
      FMain.txtUser.Text = LCase$(txtUser.Text)
      rResult = Main.hDB.Exec("UPDATE users SET lastlogin = &1 WHERE username = &2", Format(Now(), "yyyy-mm-dd hh:nn:ss"), txtUser.Text)
      FMain.MenuLogout.Visible = True
      FMain.MenuEditUser.Visible = True
      Return True
    Endif
  Endif
  Inc iCountLogin
  If iCountLogin > 3 Then
     Main.WriteLog("User &1 entered invalid password.", txtUser.Text)
     Message(("Invalid username and/or password, too many retries, exiting program!"))

     Main.CloseAll()
     Quit
  Endif
  Return False

End

Public Sub Form_Close()

  If bAuthOk = False Then Stop Event

End
