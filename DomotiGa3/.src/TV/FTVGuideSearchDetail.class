' Gambas class file

' Description:
' FTVGuideSearchDetail.class
' Form for showing searched details.

' Development Status:
' Imported from Kris's own project, needs testing.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' This module is written by Kris Wauters on February, 17th - 2010
' For more info or help, mailto: kris@digitalplayground.be

' Read file called COPYING for license details.

Public Sub Form_Open()

  '--- declare variables ---
  Dim rRes As Result

  rRes = Main.hDB.Exec(Main.ParseTag(Me.tag, 1, "|"))
  If rRes Then
    If rRes.Count > 0 Then
      rRes.MoveFirst
      PreInit(rRes)
      ShowData(rRes)
    Else
      Message.Info(("No results found for your search-criteria !"))
      Me.Close
    Endif
  Endif

End

'--- show form-title, column-headers etc ... ---
Private Sub PreInit(rRes As Result)

  '--- declare variables ---
  Dim rResMaxDate As Result

  '--- doe FormTitle ---
  rResMaxDate = Main.hDB.Exec("SELECT MAX(EndPoint) as MaxDate FROM tv_programs")
  If rResMaxDate Then
    If rResMaxDate.Count > 0 Then
      rResMaxDate.Movefirst
      Me.Title = CStr(rRes.Count) & " " & ("Results for search [") & Main.ParseTag(Me.tag, 3, "|") & "] "
      Me.Title = Me.title & ("In the period") & " " & Main.DateFromSQLToApp(Main.ParseTag(Me.tag, 2, "|")) & " - " & Main.DateFromSQLToApp(Left(rResMaxDate!MaxDate, 8))
    Endif
  Endif
  '--- do columnheaders ---
  ColVw.Columns.count = 4
  ColVw.Columns[0].Text = LblTitle1.Text
  ColVw.Columns[0].Width = LblTitle1.Width
  ColVw.Columns[1].Text = LblTitle2.Text
  ColVw.Columns[1].Width = LblTitle2.Width
  ColVw.Columns[2].Text = LblTitle3.Text
  ColVw.Columns[2].Width = LblTitle3.Width
  ColVw.Columns[3].Text = LblTitle4.Text
  ColVw.Columns[3].Width = LblTitle4.Width

End

'--- initialises everything onscreen ---
Private Sub ShowData(rRes As Result)

  '--- declare variables ---
  Dim StrText, StrFile As String
  Dim IntI, IntCount As Integer

  ColVw.Clear
  ColVw.Columns[0].Width = LblTitle1.Width
  ColVw.Columns[1].Width = LblTitle2.Width
  ColVw.Columns[2].Width = LblTitle3.Width
  ColVw.Columns[3].Width = LblTitle4.Width

  For Each rRes
    If Len(rRes!BLOBlogo.data) > 10 Then
      StrFile = Main.BlobFromDB("SELECT * FROM tv_channels where RecID=" & rRes!RecID, "BLOBlogo", "EXTlogo")
      '--- if logo, then show logo instead of channel name ---
      ColVw.Add("P" & rRes!RecID & "_" & rRes!StartPoint, "", Picture.Load(StrFile))
    Else
      ColVw.Add("P" & rRes!RecID & "_" & rRes!StartPoint, rRes!ChannelName)
    Endif
    ColVw.MoveTo("P" & rRes!RecID & "_" & rRes!StartPoint)
    ColVw.Item[1] = rRes!ProgramName
    ColVw.Item[2] = Main.DateTimeFromSqlToApp(rRes!StartPoint)
    ColVw.Item[3] = Main.DateTimeFromSqlToApp(rRes!EndPoint)
    '--- next, add category & programdescription to child-node ---
    ColVw.Add("C" & rRes!RecID & "_" & rRes!StartPoint & "_CAT", "[" & rRes!CategoryName & " - " & rRes!SubCategoryName & "]",, "P" & rRes!RecID & "_" & rRes!StartPoint)
    ColVw.MoveTo("C" & rRes!RecID & "_" & rRes!StartPoint & "_CAT")
    StrText = Main.Wrapit(rRes!ProgramDescription, LblTitle2.Width - 25, Me)
    IntCount = 0
    For IntI = 1 To Len(StrText)
      If Mid$(StrText, IntI, 1) = gb.newline Then IntCount = IntCount + 1
    Next
    For IntI = 1 To IntCount + 1
      If IntI = 1 Then
        ColVw.Item[1] = Main.ParseTag(StrText, IntI, gb.newline)
      Else
        ColVw.Add("C" & rRes!RecID & "_" & rRes!StartPoint & "_" & CStr(IntI), "",, "P" & rRes!RecID & "_" & rRes!StartPoint)
        ColVw.MoveTo("C" & rRes!RecID & "_" & rRes!StartPoint & "_" & CStr(IntI))
        ColVw.Item[1] = Main.ParseTag(StrText, IntI, gb.newline)
      Endif
    Next
  Next

End
