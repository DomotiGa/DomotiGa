' Gambas class file

' Description:
' FWeather.class
' Form for showing weather info.

' Development Status:
' Imported from Kris's own project, needs testing.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' This module is written by Kris Wauters on February, 13th - 2010
' For more info or help, mailto: kris@digitalplayground.be

' Read file called COPYING for license details.

Private StrCity As New String[]
Private StrCountry As New String[]
Private StrCityCode As New String[]

Public Sub Form_Open()

  If Main.bWeatherBugEnabled Then
    PopulateButtons()
    TxtCityCode.Text = Main.sWeatherBugCityCode
    TxtCity.Text = Main.sWeatherBugCity
    StrCity.Add(Main.sWeatherBugCity)
    StrCountry.Add(Main.sWeatherBugCountryName)
    StrCityCode.Add(Main.sWeatherBugCityCode)
    CmbCities.add(StrCity[0] & " [" & StrCountry[0] & "]")
    CmbCities_Click
  Else
    CmbCities.Enabled = False
    TxtCity.Enabled = False
    BtnSearch.Enabled = False
    BtnView.Enabled = False
  End If

End

Public Sub Form_Resize()

  ScrollView1.Move(0, 0, Me.ClientWidth - 18, Me.ClientHeight - 65)
  TabStrip1.Move(3, 32, Me.ClientWidth - 5, Me.ClientHeight - 32)

End

Public Sub PopulateButtons()

  Dim rFeed As Result
  Dim hButton As Button

  ' populate feeds toolbutton
  Try rFeed = Main.hDB.Exec("SELECT * FROM weatherfeeds WHERE enabled is TRUE")
  If rFeed.Count Then
    For Each rFeed
    If Not rFeed!name Or rFeed!enabled = False Then Continue
    hButton = New Button(vbFeeds) As "FeedButton"
     With hButton
      .Text = rFeed!name
      .Height = 28
      .Width = 84
      .Tag = rFeed!id
    End With
    Next
  End If

End

Public Sub FeedButton_Click()

  Dim iFeed As Integer = Last.tag
  Dim oObject As Object

  ' enable all buttons, then disable selected one
  For Each oObject In vbFeeds.Children
    oObject.Enabled = True
    If oObject.Tag = iFeed Then oObject.Enabled = False
  Next
  DisplayFeed(iFeed)

End

Public Sub DisplayFeed(iFeed As Integer)

  Dim rFeed As Result

  Try rFeed = Main.hDB.Exec("SELECT * FROM weatherfeeds where id=" & iFeed)
  If rFeed Then
    InitSatelliteImage(rFeed!url)
  End If

End

Public Sub BtnSearch_Click()

  '--- declare variables ---
  Dim StrFile, StrLine As String
  Dim fFile As File
  Dim IntI As Integer

  CmbCities.Clear
  StrCity.Clear
  StrCountry.Clear
  StrCityCode.Clear
  BtnView.Enabled = False

  '--- get info from weatherbug site ---
  StrFile = XMLParser.ParseXML("http://api.wxbug.net/getLocationsXML.aspx?ACode=" & Trim(Main.sWeatherBugID) & "&SearchString=" & TxtCity.Text)
  If Len(strfile) > 0 Then
    '--- put all retrieved cities in an array ---
    fFile = Open StrFile For Input
    While Not Eof(fFile)
      Line Input #fFile, StrLine
      If Left(StrLine, 50) = "aws:weather|aws:locations|aws:location|cityname|=|" Then
        StrCity.add(Right(strline, Len(strline) - 50))
      End If
      If Left(strline, 53) = "aws:weather|aws:locations|aws:location|countryname|=|" Then
        StrCountry.add(Right(strline, Len(strline) - 53))
      End If
      If Left(StrLine, 50) = "aws:weather|aws:locations|aws:location|citycode|=|" Then
        StrCityCode.add(Right(strline, Len(strline) - 50))
      End If
    Wend
    fFile.Close
    fFile = Null
    Kill strfile
    '--- put array in combobox ---
    For IntI = 0 To StrCity.count - 1
      If Len(Trim(StrCityCode[IntI])) > 1 Then ' special code, we only use non-US cities
        CmbCities.add(StrCity[IntI] & " [" & StrCountry[IntI] & "]")
      End If
    Next
    CmbCities_Click
  End If

End

Public Sub CmbCities_Click()

  '--- declare variables ---
  Dim IntI As Integer
  Dim StrCityTmp, StrCountryTmp As String

  If CmbCities.Index > -1 Then
    StrCityTmp = Trim(Main.ParseTag(CmbCities.text, 1, "["))
    StrCountryTmp = Trim(Main.ParseTag(CmbCities.Text, 2, "["))
    StrCountryTmp = Left(StrCountryTmp, Len(StrCountryTmp) - 1)
    For IntI = 0 To StrCity.count - 1
      If StrCity[IntI] = StrCityTmp And StrCountry[IntI] = StrCountryTmp
        TxtCityCode.Text = StrCityCode[IntI]
        BtnView.Enabled = True
        Return
      End If
    Next
  End If

End

Public Sub TxtCity_KeyPress()

  CmbCities.Clear
  TxtCityCode.text = ""
  BtnView.Enabled = False

End

Public Sub BtnView_Click()

  '--- declare variables ---
  Dim IntTmp As Integer

  IntTmp = TabStrip1.Index
  InitForeCast()
  InitLiveWeather()
  TabStrip1.Index = IntTmp

End

'--- when an URL is given, try to fetch the animated satellite image ---
Private Sub InitSatelliteImage(sUrl As String)

  '--- declare variables ---
  Dim StrFile As String

  StrFile = XMLParser.GetFileFromInternet(sUrl)
  If Len(StrFile) > 0 Then
    MvSatImage.Path = StrFile
    MvSatImage.Playing = True
    MvSatImage.Refresh
    MvSatImage.Show
  Endif

End

'--- initialises the "Forecast" panel ---
Private Sub InitForeCast()

    '--- declare variables ---
  Dim StrFile, StrLine, StrCondition As String
  Dim fFile As File
  Dim IntI As Integer

  TabStrip1.Index = 1
  StrFile = XMLParser.ParseXML("http://api.wxbug.net/getForecastRSS.aspx?ACode=" & Trim(Main.sWeatherBugID) & "&citycode=" & TxtCityCode.Text & "&unittype=1&outputtype=1")
  'IntI = 0
  If Len(StrFile) > 0 Then
    fFile = Open StrFile For Input
    While Not Eof(fFile)
      Line Input #fFile, StrLine
      '--- put names of days onto frames ---
      If Left(StrLine, 51) = "aws:weather|aws:forecasts|aws:forecast|aws:title|=|" Then
        Inc IntI
        Main.SetTextProperty("Frm" & CStr(IntI), (Right(StrLine, Len(StrLine) - 51)), Me)
      End If
      '--- put condition pictures in frames ---
      If Left(StrLine, 56) = "aws:weather|aws:forecasts|aws:forecast|aws:image|icon|=|" Then
        StrCondition = Main.ParseTag(Right(StrLine, 7), 1, ".")
        Select Case IntI
          Case 1
            Pic1.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          Case 2
            Pic2.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          Case 3
            Pic3.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          Case 4
            Pic4.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          Case 5
            Pic5.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          Case 6
            Pic6.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          Case 7
            Pic7.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
        End Select
      End If
      '--- put global forecast onto labels ---
      If Left(StrLine, 62) = "aws:weather|aws:forecasts|aws:forecast|aws:short-prediction|=|" Then
        Main.SetTextProperty("LblForeCast" & CStr(IntI), Main.TranslateViaInternet(Right(StrLine, Len(StrLine) - 62), Main.sAppLanguage), Me)
      End If
      '--- put high and low temperature onto labels ---
      If Left(StrLine, 50) = "aws:weather|aws:forecasts|aws:forecast|aws:high|=|" Then
        Main.SetTextProperty("LblTempHigh" & CStr(IntI), Main.Translate("High:") & " " & Right(StrLine, Len(StrLine) - 50) & " °C", Me)
      End If
      If Left(StrLine, 49) = "aws:weather|aws:forecasts|aws:forecast|aws:low|=|" Then
        Main.SetTextProperty("LblTempLow" & CStr(IntI), Main.Translate("Low:") & " " & Right(StrLine, Len(StrLine) - 49) & " °C", Me)
      End If
      '--- put large forecast into textareas ---
      If Left(StrLine, 56) = "aws:weather|aws:forecasts|aws:forecast|aws:prediction|=|" Then
        Main.SetTextProperty("TxtPrediction" & CStr(IntI), Trim(Main.TranslateViaInternet(Right(StrLine, Len(StrLine) - 56), Main.sAppLanguage)), Me)
      End If
    Wend
    fFile.Close
    fFile = Null
    Kill strfile
  End If

End

'--- initialises the "live weather" panel ---
Private Sub InitLiveWeather()

  '--- declare variables ---
  Dim StrFile, StrLine, StrCondition, StrSunUp, StrSunDown As String
  Dim fFile As File

  Try PicCurrentWeather.Picture.Clear
  Try PicMoon.Picture.Clear
  Try PicWindDirectionAverage.Picture.Clear
  Try PicWindDirectionCurrent.Picture.Clear
  TabStrip1.Index = 0
  TxtWeather.Text = ""
  StrFile = XMLParser.ParseXML("http://api.wxbug.net/getLiveWeatherRSS.aspx?ACode=" & Trim(Main.sWeatherBugID) & "&citycode=" & TxtCityCode.Text & "&unittype=1&outputtype=1")
  If Len(StrFile) > 0 Then
    fFile = Open StrFile For Input
    While Not Eof(fFile)
      Line Input #fFile, StrLine
      '--- weather condition icon ---
      If Left(StrLine, 48) = "aws:weather|aws:ob|aws:current-condition|icon|=|" Then
        StrCondition = Main.ParseTag(Right(StrLine, 7), 1, ".")
        Me.PicCurrentWeather.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/160x134/en/trans/cond" & StrCondition & ".png"))
      End If
      '--- moon icon ---
      If Left(StrLine, 51) = "aws:weather|aws:ob|aws:moon-phase|moon-phase-img|=|" Then
        Try Me.PicMoon.picture = Picture.Load(XMLParser.GetFileFromInternet(Right(StrLine, Len(StrLine) - 51)))
      End If
      '--- general weather-info ---
      If Left(StrLine, 43) = "aws:weather|aws:ob|aws:current-condition|=|" Then
        LblGeneralWeather.Text = Main.TranslateViaInternet(Right(StrLine, Len(StrLine) - 43), Main.sAppLanguage)
      End If
      '--- temperature ---
      If Left(StrLine, 35) = "aws:weather|aws:ob|aws:dew-point|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Dew-point temperature:") & " " & Right(StrLine, Len(StrLine) - 35) & " °C" & gb.NewLine
      End If
      If Left(StrLine, 36) = "aws:weather|aws:ob|aws:feels-like|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Feels-like temperature:") & " " & Right(StrLine, Len(StrLine) - 36) & " °C" & gb.NewLine & gb.NewLine
      End If
      '--- wind ---
      If Left(StrLine, 40) = "aws:weather|aws:ob|aws:gust-direction|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Wind gust direction:") & " " & Right(StrLine, Len(StrLine) - 40) & gb.NewLine
      End If
      If Left(StrLine, 36) = "aws:weather|aws:ob|aws:gust-speed|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Wind gust speed:") & " " & Right(StrLine, Len(StrLine) - 36) & " " & Main.Translate("km/h") & gb.NewLine & gb.NewLine
      End If
      '--- humidity ---
      If Left(StrLine, 34) = "aws:weather|aws:ob|aws:humidity|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Humidity:") & " " & Right(StrLine, Len(StrLine) - 34) & " %" & gb.NewLine
      End If
      If Left(StrLine, 39) = "aws:weather|aws:ob|aws:humidity-high|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Humidity (high):") & " " & Right(StrLine, Len(StrLine) - 39) & " %" & gb.NewLine
      End If
      If Left(StrLine, 38) = "aws:weather|aws:ob|aws:humidity-low|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Humidity (low):") & " " & Right(StrLine, Len(StrLine) - 38) & " %" & gb.NewLine & gb.NewLine
      End If
      '--- pressure ---
      If Left(StrLine, 33) = "aws:weather|aws:ob|aws:pressure|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Pressure:") & " " & Right(StrLine, Len(StrLine) - 33) & " mb" & gb.NewLine
      End If
      If Left(StrLine, 39) = "aws:weather|aws:ob|aws:pressure-high|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Pressure (high):") & " " & Right(StrLine, Len(StrLine) - 39) & " mb" & gb.NewLine
      End If
      If Left(StrLine, 38) = "aws:weather|aws:ob|aws:pressure-low|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Pressure (low):") & " " & Right(StrLine, Len(StrLine) - 38) & " mb" & gb.NewLine & gb.NewLine
      End If
      '--- rain ---
      If Left(StrLine, 36) = "aws:weather|aws:ob|aws:rain-today|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Rain (today):") & " " & Right(StrLine, Len(StrLine) - 36) & " mm" & gb.NewLine
      End If
      If Left(StrLine, 36) = "aws:weather|aws:ob|aws:rain-month|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Rain (this month):") & " " & Right(StrLine, Len(StrLine) - 36) & " mm" & gb.NewLine
      End If
      If Left(StrLine, 35) = "aws:weather|aws:ob|aws:rain-year|=|" Then
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Rain (this year):") & " " & Right(StrLine, Len(StrLine) - 35) & " mm"
      End If
      '--- high/low temperature ---
      If Left(StrLine, 35) = "aws:weather|aws:ob|aws:temp-high|=|" Then
        LblTempHigh.text = Main.Translate("Maximum:") & " " & Right(StrLine, Len(StrLine) - 35) & " °C"
      End If
      If Left(StrLine, 34) = "aws:weather|aws:ob|aws:temp-low|=|" Then
        LblTempLow.text = Main.Translate("Minimum:") & " " & Right(StrLine, Len(StrLine) - 34) & " °C"
      End If
      '--- sun up ---
      If Left(StrLine, 49) = "aws:weather|aws:ob|aws:sunrise|aws:hourhour-24|=|" Then
        StrSunUp = Right(StrLine, Len(StrLine) - 49)
      End If
      If Left(StrLine, 50) = "aws:weather|aws:ob|aws:sunrise|aws:minutenumber|=|" Then
        StrSunUp = StrSunUp & ":" & Right(StrLine, Len(StrLine) - 50)
      End If
      If Left(StrLine, 50) = "aws:weather|aws:ob|aws:sunrise|aws:secondnumber|=|" Then
        StrSunUp = StrSunUp & ":" & Right(StrLine, Len(StrLine) - 50)
        LblSunRise.Text = Main.Translate("Sunrise:") & " " & StrSunUp
      End If
      '--- sun down ---
      If Left(StrLine, 48) = "aws:weather|aws:ob|aws:sunset|aws:hourhour-24|=|" Then
        StrSunDown = Right(StrLine, Len(StrLine) - 48)
      Endif
      If Left(StrLine, 49) = "aws:weather|aws:ob|aws:sunset|aws:minutenumber|=|" Then
        StrSunDown = StrSunDown & ":" & Right(StrLine, Len(StrLine) - 49)
      End If
      If Left(StrLine, 49) = "aws:weather|aws:ob|aws:sunset|aws:secondnumber|=|" Then
        StrSunDown = StrSunDown & ":" & Right(StrLine, Len(StrLine) - 49)
        LblSunset.Text = Main.Translate("Sunset:") & " " & StrSunDown
      End If
      '--- current wind ---
      If Left(StrLine, 36) = "aws:weather|aws:ob|aws:wind-speed|=|" Then
        Me.LblWindSpeedCurrent.Text = Right(StrLine, Len(StrLine) - 36) & " " & Main.Translate("km/h")
      End If
      If Left(StrLine, 40) = "aws:weather|aws:ob|aws:wind-direction|=|" Then
        Try Me.PicWindDirectionCurrent.Picture = Picture.Load(XMLParser.ReturnWindDirectionPic(Right(StrLine, Len(StrLine) - 40)))
      End If
      '--- average wind ---
      If Left(StrLine, 40) = "aws:weather|aws:ob|aws:wind-speed-avg|=|" Then
        Me.LblWindSpeedAverage.Text = Right(StrLine, Len(StrLine) - 40) & " " & Main.Translate("km/h")
      End If
      If Left(StrLine, 44) = "aws:weather|aws:ob|aws:wind-direction-avg|=|" Then
        Try Me.PicWindDirectionAverage.Picture = Picture.Load(XMLParser.ReturnWindDirectionPic(Right(StrLine, Len(StrLine) - 44)))
      End If
    Wend
    fFile.Close
    fFile = Null
    Kill StrFile
  End If

End
