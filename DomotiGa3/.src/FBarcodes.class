' Gambas class file

' Description:
' FBarcodes.class
' Support for barcode scanning, and stock inventory.
' I use a Manhattan SD313E SmartPro Barcode Scanner which functions as a USB-HID.

' Development Status:
' Working.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Private iMode As Integer = 0
Public tTimer As New Timer
Public tMessage As New Timer
Private hObserver As Observer

Public Sub Form_Open()

  txtBarcode.SetFocus
  tTimer = New Timer As "tClear"
  tTimer.Delay = 1000 ' 1 second
  tTimer.Stop

  tMessage = New Timer As "tMessage"
  tMessage.Delay = 3000 ' 3 seconds
  tMessage.Stop

  hObserver = New Observer(DataBrowser1.View) As "GridObserver"
  With DataBrowser1.View
    .Columns[0].Text = ("EAN Barcode")
    .Columns[0].Width = 120
    .Columns[1].Text = ("Product")
    .Columns[1].Width = 260
    .Columns[2].Text = ("Qty")
    .Columns[2].Width = 40
    .Columns[3].Text = ("Price")
    .Columns[3].Width = 60
    .Columns[4].Text = ("Target")
    .Columns[4].Width = 80
  End With

  txtPrice.Text = ("Price ") & Main.sCurrency
  ToggleMode(iMode)
  txtRecords.Text = DataBrowser1.View.Rows.Count & (" product(s) in database")
  txtStatus.Text = ("Waiting for your scan ...")

End

Public Sub GridObserver_Click()

  DisplayProduct(DataBrowser1.View[DataBrowser1.View.Row, 0].Text)

End

Public Sub tClear_Timer()

  txtBarcode.Text = Null
  tTimer.Stop

End

Public Sub tMessage_Timer()

  txtStatus.Text = ("Waiting for your scan ...")
  tMessage.Stop

End

Public Sub Form_GotFocus()

  txtBarcode.SetFocus

End

Public Sub btnClear_Click()

  txtBarcode.Text = Null

End

Public Sub txtBarcode_Change()

  Dim iCount, iQuantity As Integer
  Dim rResult As Result
  Dim sName As String
  Dim bFound As Boolean

  If Len(txtBarcode.Text) = 13 Or Len(txtBarcode.Text) = 8 Then
    For iCount = 0 To DataBrowser1.View.Rows.Count - 1
      If DataBrowser1.View[iCount, 0].Text = txtBarcode.Text Then
        bFound = True
        DisplayProduct(DataBrowser1.View[iCount, 0].Text)
        DataBrowser1.View.MoveTo(iCount, 0)
        If iMode = 1 Then ' substract
          Try rResult = Main.hDB.Exec("SELECT quantity,name FROM stock WHERE ean = &1", txtBarcode.Text)
          sName = rResult!name
          If rResult!quantity > 0 Then
            iQuantity = rResult!quantity - 1
            rResult = Main.hDB.Exec("UPDATE stock SET quantity = &1 WHERE ean = &2", iQuantity, txtBarcode.Text)
            txtStatus.Text = ("Removed 1 '") & sName & "'."
            DataSource1.Refresh()
            DataBrowser1.View.MoveTo(iCount, 0)
          Else
            txtStatus.Text = ("You don't have any '") & sName & ("' in Stock!")
          Endif
        Else If iMode = 2 Then ' add
          Try rResult = Main.hDB.Exec("SELECT quantity,name FROM stock WHERE ean = &1", txtBarcode.Text)
          iQuantity = rResult!quantity + 1
          sName = rResult!name
          rResult = Main.hDB.Exec("UPDATE stock SET quantity = &1 WHERE ean = &2", iQuantity, txtBarcode.Text)
          txtStatus.Text = ("Added 1 '") & sName & "'."
          DataSource1.Refresh()
          DataBrowser1.View.MoveTo(iCount, 0)
        Else If iMode = 0 Then ' find
          Try rResult = Main.hDB.Exec("SELECT quantity,name FROM stock WHERE ean = &1", txtBarcode.Text)
          sName = rResult!name
          txtStatus.Text = ("Product '") & sName & ("' found and selected.")
        Endif
        tTimer.Start
      Endif
    Next
    If Not bFound Then
      txtStatus.Text = ("Couldn't find Product in Database, enter a Description.")
      DataControl1.Value = txtBarcode.Text
      DataControl2.Value = Null
      DataControl3.Value = 1
      DataControl4.Value = Null
      DataControl5.Value = Null
      DataControl2.SetFocus()
    Endif
  Else If Len(txtBarcode.Text) = 2 Then
    Select Case txtBarcode.Text
      Case "C0" ' find command mode
        ToggleMode(0)
      Case "C1" ' substract command mode
        ToggleMode(1)
      Case "C2" ' add  command mode
        ToggleMode(2)
      Case "C3" ' shopping list requested
        GenerateList("Shop")
        txtStatus.Text = ("Shopping list requested.")
      Case "C4" ' stock list requested
        GenerateList("Stock")
        txtStatus.Text = ("Stock list requested.")
      Case Else
        txtStatus.Text = ("This Command is invalid ") & txtBarcode.Text
        tMessage.Start
        tTimer.Start
    End Select
  Else If Len(txtBarcode.Text) = 10 Or Len(txtBarcode.Text) = 12 Then
    txtStatus.Text = ("ISBN Barcodes not implemented yet ") & txtBarcode.Text
    tMessage.Start
    tTimer.Start
  Else If Len(txtBarcode.Text) > 0 And Not 8 Then
    txtStatus.Text = ("This Barcode is invalid ") & txtBarcode.Text
    tMessage.Start
    tTimer.Start
  Endif
  txtRecords.Text = DataBrowser1.View.Rows.Count & (" product(s) in database")

End

Public Sub btnFind_Click()

  ToggleMode(0)

End

Public Sub btnAdd_Click()

  ToggleMode(2)

End

Public Sub btnSubstract_Click()

  ToggleMode(1)

End

Private Sub ToggleMode(iNo As Integer)

  iMode = iNo

  Select Case iMode
    Case 0
      btnFind.Enabled = False
      btnSubstract.Enabled = True
      btnAdd.Enabled = True
      txtStatus.Text = ("Find product mode activated.")
    Case 1
      btnFind.Enabled = True
      btnSubstract.Enabled = False
      btnAdd.Enabled = True
      txtStatus.Text = ("Substract product mode activated.")
    Case 2
      btnFind.Enabled = True
      btnSubstract.Enabled = True
      btnAdd.Enabled = False
      txtStatus.Text = ("Add product mode activated.")
  End Select
  tMessage.Start

End

Public Sub btnShoppingList_Click()

  GenerateList("Shop")

End

Public Sub btnStockList_Click()

  GenerateList("Stock")

End

Public Sub GenerateList(sType As String)

  Dim sList, sPrice, sPriceOne As String
  Dim iQty As Integer
  Dim rResult As Result
  Dim fTotal, fPrice As Float

  If sType = "Shop" Then
    sList = ("\n\n**       Your Shopping List for ") & Format(Now(), "ddd dd-mmm-yyyy") & "       **\n"
    Try rResult = Main.hDB.Exec("SELECT * FROM stock WHERE quantity < target")
  Else
    sList = ("\n\n**         Your Stock List for ") & Format(Now(), "ddd dd-mmm-yyyy") & "        **\n"
    Try rResult = Main.hDB.Exec("SELECT * FROM stock")
  Endif
  sList &= String$(56, "-") & "\n"
  If rResult Then
    If rResult.Count Then
      For Each rResult
        sPrice = Null
        sPriceOne = Null
        If sType = "Shop" Then
          iQty = rResult!target - rResult!quantity
        Else
          iQty = rResult!quantity
        Endif
        fPrice = rResult!price * iQty
        fTotal = fTotal + fPrice
        If rResult!price Then
          sPriceOne = Main.sCurrency & Main.SpaceAlign(Format(rResult!price, "###.00"), 6)
          sPrice = Main.sCurrency & Main.SpaceAlign(Format(fPrice, "###.00"), 6)
        Endif
        sList &= Main.SpaceAlign(Format(iQty, "##"), 2) & "x " & Main.SpaceAlignLeft(Left(rResult!name, 32), 32)
        If sPriceOne Then
          sList &= " a " & sPriceOne & "   " & sPrice & "\n"
        Else
          sList &= "\n"
        Endif
      Next
      sList &= "                                                 -------\n"
      sList &= "Total :                                          " & Main.sCurrency & Main.SpaceAlign(Format(fTotal, "###.00"), 6)
    Else
      If sType = "Shop" Then
        sList &= ("\nNothing to buy, everything in stock!")
      Else
        sList &= ("\nNothing in stock!")
      Endif
    Endif
  Endif

  If Main.bMainDebug Then Main.WriteDebugLog(sList)

  FTextViewer.sText = sList
  If sType = "Shop" Then FTextViewer.sTitle = ("Your Shopping List")
  If sType = "Stock" Then FTextViewer.sTitle = ("Your Stock List")
  FTextViewer.Show()
  tMessage.Start

End

Public Sub DisplayProduct(sEAN As String)

  Dim pbProduct As PictureBox

  Try pbProduct.Delete()

  pbProduct = New PictureBox(Frame2) As "Product"
  With pbProduct
    .Alignment = Align.Center
    .X = 595
    .Y = 35
    .Width = 112
    .Height = 112
  End With

  Try pbProduct.Picture = Picture.Load(Main.sBaseDir &/ "icons/stock" &/ LCase(sEAN & ".jpg"))

End

Public Sub FZbarcode_Read()

  Dim sLine As String
  Dim iLang, iPos As Integer

  sLine = Read #Last, -256
  sLine = Trim(sLine)
  iLang = Len(sLine)
  iPos = InStr(sLine, ":")

  If Not Len(txtBarcode.Text) Then txtBarcode.Text = Mid(sLine, iPos + 1)

End

Public Sub btnZBar_Click()

  ' SHELL zbarcam & " 2>&1" FOR READ AS "FZbarcode"
  If Util.ProgramExist("zbarcam") Then
    Shell "zbarcam 2>&1" For Read As "FZbarcode"
  Else
    Message.Error(("Couldn't find zbarcam program!"))
  Endif

End
