' Gambas module file

' Description:
' Digitemp.module
' Support for digitemp 1-wire sensors (only temperature at this moment).
' DigiTemp supports DS18S20, DS1820, DS18B20, DS2438, DS2422, DS2423 and DS2409

' Development Status:
' Just build, possibly bugs around.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public tDigitemp As Timer
Private sOutput As String

Private Const DS18S20 As String = "10"
Private Const DS2423 As String = "1D"
Private Const DS2409 As String = "1F"
Private Const DS2438 As String = "26"
Private Const DS18B20 As String = "28"
Private Const DS2422 As String = "41"

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' start timer
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Run()

  ' start poll timer for digitemp
  tDigitemp = New Timer As "tDigitemp"
  tDigitemp.Delay = Main.iDigitempPollTime * 1000 ' multiply for seconds
  tDigitemp.Start

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' gets called at each timer event
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub tDigitemp_Timer()

  CheckDigitemp()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' run digitemp to get sensor data
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub CheckDigitemp()

  Dim iReadTime As Integer

  If Main.iDigitempReadtime < 1000 Then
    iReadtime = 1000
  Else
    iReadtime = Main.iDigitempReadtime
  End If
  If Main.bDigitempDebug Then Main.WriteDebugLog("[Digitemp] " & Main.sDigitempCommand & " -a -q -r " & iReadTime & " -c " & Main.sDigitempConfig)
  Exec [Main.sDigitempCommand, "-a", "-q", "-r", iReadTime, "-c", Main.sDigitempConfig] For Read As "Digitemp"

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' got output, save it
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Digitemp_Read()

  Dim sLine As String

  sLine = Read #Last, -256
  sOutput &= sLine

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' digitemp has finished, process it's output
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Digitemp_Kill()

  Dim sLine As String
  Dim aScan As String[]
  Dim iDeviceId As Integer

  ' parse each line
  For Each sLine In Split(sOutput, "\n")
    ' check for sensor data
    If InStr(sLine, "Sensor") Then
      Select Case Left$(sLine, 2)
        Case DS18S20
          ' 1049023A01080015 Nov 21 19:44:49 Sensor 0 C: 22.44 F: 72.39
          aScan = Scan(sLine, "* * * * * * * * * *")
          If aScan.Count = 10 Then
            If Main.bDigitempDebug Then Main.WriteDebugLog(("[Digitemp] Sensor ID: ") & aScan[0] & (" Type: DS18S20 Values: ") & aScan[7] & "°C " & aScan[9] & "°F")
            iDeviceId = Devices.Find(aScan[0], Devices.FindInterface("Digitemp"), "DS18S20")
            If iDeviceId Then
              If aScan[7] <> "85.00" Then
                If Main.sTemperature = "°C" Then
                  Devices.ValueUpdate(iDeviceId, aScan[7], "", "", "")
                Else
                  Devices.ValueUpdate(iDeviceId, aScan[9], "", "", "")
                Endif
              Endif
            Endif
          Else
            Main.WriteDebugLog(("[Digitemp] Got parse error when scanning line: ") & sLine)
          Endif
        Case DS2423
          aScan = Scan(sLine, "* * * * * * * *")
          If aScan.Count = 8 Then
            If Main.bDigitempDebug Then Main.WriteDebugLog(("[Digitemp] Sensor ID: ") & aScan[0] & (" Type: DS2423 Values: ") & aScan[6] & " " & aScan[7])
            iDeviceId = Devices.Find(aScan[0], Devices.FindInterface("Digitemp"), "DS2423")
            If iDeviceId Then
              Select aScan[6]
                Case "#0"
                  Devices.ValueUpdate(iDeviceId, aScan[7], "", "", "")
                Case "#1"
                  Devices.ValueUpdate(iDeviceId, "", aScan[7], "", "")
              End Select
            Endif
          Else
            Main.WriteDebugLog(("[Digitemp] Got parse error when scanning line: ") & sLine)
          Endif
        Case DS2409
          If Main.bDigitempDebug Then Main.WriteDebugLog(("[Digitemp] Sensor ") & aScan[0] & (" Type: DS2409 ") & sLine)
        Case DS2438
          ' 26D050E7000000FF Apr 25 18:15:45 Sensor 0 C: 22.22 F: 71.99 H: 20%
          aScan = Scan(sLine, "* * * * * * * * * * * *")
          If aScan.Count = 12 Then
            If Main.bDigitempDebug Then Main.WriteDebugLog(("[Digitemp] Sensor ID: ") & aScan[0] & (" Type: DS2438 Values: ") & aScan[7] & "°C " & aScan[9] & "°F" & aScan[11] & "%")
            iDeviceId = Devices.Find(aScan[0], Devices.FindInterface("Digitemp"), "DS2438")
            If iDeviceId Then Devices.ValueUpdate(iDeviceId, aScan[7], aScan[9], aScan[11], "")
          Else
            Main.WriteDebugLog(("[Digitemp] Got parse error when scanning line: ") & sLine)
          Endif
        Case DS18B20
          aScan = Scan(sLine, "* * * * * * * * * *")
          If aScan.Count = 10 Then
            If Main.bDigitempDebug Then Main.WriteDebugLog(("[Digitemp] Sensor ID: ") & aScan[0] & (" Type: DS18B20 Values: ") & aScan[7] & "°C " & aScan[9] & "°F")
            iDeviceId = Devices.Find(aScan[0], Devices.FindInterface("Digitemp"), "DS18B20")
            If iDeviceId Then
              If aScan[7] <> "85.00" Then
                If Main.sTemperature = "°C" Then
                  Devices.ValueUpdate(iDeviceId, aScan[7], "", "", "")
                Else
                  Devices.ValueUpdate(iDeviceId, aScan[9], "", "", "")
                Endif
              Endif
            Endif
          Else
            Main.WriteDebugLog(("[Digitemp] Got parse error when scanning line: ") & sLine)
          Endif
        Case DS2422
          If Main.bDigitempDebug Then Main.WriteDebugLog(("[Digitemp] Sensor ") & aScan[0] & (" Type: DS2422 ") & sLine)
        Case Else
          If Main.bDigitempDebug Then Main.WriteDebugLog(("[Digitemp] Sensor ") & aScan[9] & (" Type: Unsupported! ") & sLine)
        End Select
    End If
  Next
  sOutput = Null

End
