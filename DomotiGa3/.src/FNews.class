' Gambas class file

' Description:
' FNews.class
' Simple RSS Newsfeed reader.

' Development Status:
' Just build, bugs ahead. Doesn't support embedded stuff like images yet.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public hFeed As HttpClient
Public items As New CItems

Public Sub Form_Open()

  PopulateButtons()

End

Public Sub Form_Resize()

  tbFeeds.Width = Me.Width
  hbFeeds.Width = Me.Width
  pnlNews.Move(2, 33, Me.ClientWidth - 4, Me.ClientHeight - 35)
  lvItems.Move(1, 1, Me.ClientWidth / 2 - 48, Me.ClientHeight - 40)
  txtItem.Move(Me.ClientWidth / 2 - 44, 1, Me.ClientWidth / 2 + 40, Me.ClientHeight - 40)

End

Public Sub PopulateButtons()

  Dim rFeed As Result
  Dim hButton As Button

  ' populate feeds toolbutton
  Try rFeed = Main.hDB.Exec("SELECT * FROM newsfeeds WHERE enabled is TRUE")
  If rFeed.Count Then
    For Each rFeed
    If Not rFeed!name Or rFeed!enabled = False Then Continue
    hButton = New Button(hbFeeds) As "FeedButton"
     With hButton
      .Text = rFeed!name
      .Height = 28
      .Width = 84
      .Tag = rFeed!id
    End With
    Next
  Endif

End

Public Sub hFeed_Finished()

  Dim sBuffer As String

  If Lof(hFeed) Then sBuffer = Read #hFeed, Lof(hFeed)
  ParseFeed(sBuffer)
  FillList()

End

Public Sub FeedButton_Click()

  Dim iFeed As Integer = Last.tag
  Dim oObject As Object

  ' enable all buttons, then disable selected one
  For Each oObject In hbFeeds.Children
    oObject.Enabled = True
    If oObject.Tag = iFeed Then oObject.Enabled = False
  Next

  DisplayFeed(iFeed)

End

Public Sub DisplayFeed(iFeed As Integer)

  Dim rFeed As Result
  items = New CItems
  hFeed = New HttpClient As "hfeed"

  Try rFeed = Main.hDB.Exec("SELECT * FROM newsfeeds where id=" & iFeed)
  If rFeed Then
    hFeed.URL = rFeed!url
    hFeed.Get
  Endif

End

Public Sub ParseFeed(sData As String)

  Dim Xml As New XmlDocument
  Dim xNode As XmlNode

  Xml.FromString(sData)
  xNode = Xml.Root
  items.clear
  ParseNode(xNode)

Catch
  Main.WriteDebugLog(("XML Parse Error: ") & ERROR.Text & " at " & ERROR.Where)

End

Public Sub ParseNode(node As XmlNode)

  Dim t, t1 As Integer
  Dim node1 As XmlNode
  Dim buf As String
  Dim title, description, item_link As String

  For t = 0 To node.Children.Count - 1
    node1 = node.Children[t]
    If node1.name = "item" Then
      For t1 = 0 To node1.Children.Count - 1
        buf = node1.Children[t1].name
        If buf = "title" Then
          title = node1.Children[t1].value
        Else If buf = "description" Then
          description = node1.Children[t1].value
        Else If buf = "link" Then
          item_link = node1.Children[t1].value
        Endif
      Next
      items.addItem(title, description, item_link)
    Else
      If node1.Children.Count > 0 Then parseNode(node1)
    Endif
  Next

End

Public Sub lvItems_Select()

  Dim iKey As Integer

  iKey = lvItems.Current.Key
  items.seek(iKey)
  txtItem.Text = items.getDescription() & "\n" & items.getLink()

End

Public Sub FillList()

  lvItems.Clear
  items.Reset
  While items.Next()
    lvItems.Add(items.getCurrentIndex(), items.getTitle())
  Wend

End
