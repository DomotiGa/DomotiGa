' Gambas class file

' Description:
' FNews.class
' Simple RSS Newsfeed reader.

' Development Status:
' Just build, bugs ahead. Doesn't support embedded stuff like images yet.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

PUBLIC hFeed AS HttpClient
PUBLIC items AS NEW CItems

PUBLIC SUB Form_Open()

  PopulateButtons()

END

PUBLIC SUB Form_Resize()

  tbFeeds.Width = ME.Width
  hbFeeds.Width = ME.Width
  pnlNews.Move(2, 33, ME.ClientWidth - 4, ME.ClientHeight - 35)
  lvItems.Move(1, 1, ME.ClientWidth / 2 - 48, ME.ClientHeight - 40)
  txtItem.Move(ME.ClientWidth / 2 - 44, 1, ME.ClientWidth / 2 + 40, ME.ClientHeight - 40)

END

PUBLIC SUB PopulateButtons()

  DIM rFeed AS Result
  DIM hButton AS Button

  ' populate feeds toolbutton
  TRY rFeed = Main.hDB.Exec("SELECT * FROM newsfeeds WHERE enabled is TRUE")
  IF rFeed.Count THEN
    FOR EACH rFeed
    IF NOT rFeed!name OR rFeed!enabled = FALSE THEN CONTINUE
    hButton = NEW Button(hbFeeds) AS "FeedButton"
     WITH hButton
      .Text = rFeed!name
      .Height = 28
      .Width = 84
      .Tag = rFeed!id
    END WITH
    NEXT
  ENDIF

END

PUBLIC SUB hFeed_Finished()

  DIM sBuffer AS String

  IF Lof(hFeed) THEN sBuffer = READ #hFeed, Lof(hFeed)
  ParseFeed(sBuffer)
  FillList()

END

PUBLIC SUB FeedButton_Click()

  DIM iFeed AS Integer = LAST.tag
  DIM oObject AS Object

  ' enable all buttons, then disable selected one
  FOR EACH oObject IN hbFeeds.Children
    oObject.Enabled = TRUE
    IF oObject.Tag = iFeed THEN oObject.Enabled = FALSE
  NEXT

  DisplayFeed(iFeed)

END

PUBLIC SUB DisplayFeed(iFeed AS Integer)

  DIM rFeed AS Result
  items = NEW CItems
  hFeed = NEW HttpClient AS "hfeed"

  TRY rFeed = Main.hDB.Exec("SELECT * FROM newsfeeds where id=" & iFeed)
  IF rFeed THEN
    hFeed.URL = rFeed!url
    hFeed.Get
  ENDIF

END

PUBLIC SUB ParseFeed(sData AS String)

  DIM Xml AS NEW XmlDocument
  DIM xNode AS XmlNode

  Xml.FromString(sData)
  xNode = Xml.Root
  items.clear
  ParseNode(xNode)

CATCH
  Main.WriteDebugLog(("XML Parse Error: ") & ERROR.Text & " at " & ERROR.Where)

END

PUBLIC SUB ParseNode(node AS XmlNode)

  DIM t, t1 AS Integer
  DIM node1 AS XmlNode
  DIM buf AS String
  DIM title, description, item_link AS String

  FOR t = 0 TO node.Children.Count - 1
    node1 = node.Children[t]
    IF node1.name = "item" THEN
      FOR t1 = 0 TO node1.Children.Count - 1
        buf = node1.Children[t1].name
        IF buf = "title" THEN
          title = node1.Children[t1].value
        ELSE IF buf = "description" THEN
          description = node1.Children[t1].value
        ELSE IF buf = "link" THEN
          item_link = node1.Children[t1].value
        ENDIF
      NEXT
      items.addItem(title, description, item_link)
    ELSE
      IF node1.Children.Count > 0 THEN parseNode(node1)
    ENDIF
  NEXT

END

PUBLIC SUB lvItems_Select()

  DIM iKey AS Integer

  iKey = lvItems.Current.Key
  items.seek(iKey)
  txtItem.Text = items.getDescription() & "\n" & items.getLink()

END

PUBLIC SUB FillList()

  lvItems.Clear
  items.Reset
  WHILE items.Next()
    lvItems.Add(items.getCurrentIndex(), items.getTitle())
  WEND

END
