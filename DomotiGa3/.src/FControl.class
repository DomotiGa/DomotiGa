' Gambas class file

' Description:
' FControl.class
' Device control page.

' Development Status:
' Done.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public hDim As Slider
Private $iLocationMax As Integer
Private $cLocations As Collection
Private $sLocation As String = "All"

Public Sub Form_Open()

  PopulateButtons()
  ReloadPage()

End

Public Sub Form_Resize()

  If $iLocationMax < 9 Then
    ToolBar1.Move(0, 0, Me.ClientWidth - 20)
    HBox1.Move(0, 0, Me.ClientWidth - 20, 28)
    HBox2.Hide
    VPanel1.Move(7, 30, Me.ClientWidth - 20, Me.ClientHeight - 35)
  Else
    ToolBar1.Move(0, 0, Me.ClientWidth - 20)
    HBox1.Move(0, 0, Me.ClientWidth - 20, 28)
    HBox2.Move(0, 31, Me.ClientWidth - 20, 28)
    HBox2.Show
    VPanel1.Move(7, 70, Me.ClientWidth - 20, Me.ClientHeight - 70)
  Endif

End

Public Sub LocationButton_Click()

  $sLocation = Last.Tag
  ReloadPage()

End

Public Sub ReloadPage()

  Dim oObject As Object

  ' delete previous buttons first
  For Each oObject In VPanel1.Children
    oObject.Delete()
  Next
  RefreshPage()

End

Public Sub SelectButton(sLoc As String)

  Dim oObject As Object

  ' disable selected button
  For Each oObject In HBox1.Children
    If oObject.Text = sLoc Then
      oObject.Enabled = False
    Else
      oObject.Enabled = True
    Endif
  Next

  ' disable selected button
  For Each oObject In HBox2.Children
    If oObject.Text = sLoc Then
      oObject.Enabled = False
    Else
      oObject.Enabled = True
    Endif
  Next

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' create dynamic buttons for switchable and dimable devices only
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub RefreshPage()

  Dim rDevice, rLocation As Result
  Dim sValue, sValue2, sType As String
  Dim hButton As Button
  Dim iBrightness, iColor As Integer
  Dim oIcon As Object
  Dim hDimBox As HBox

  ' fetch location name
  rLocation = Main.hDB.Exec("SELECT * FROM locations WHERE name LIKE &1", $sLocation)
  If (rLocation.Count >= 1) Then 
    Try rDevice = Devices.GetDevicesAndValues(["enabled": True, "location_id": rLocation!id, "valuenum": [1]])
  Else
    Try rDevice = Devices.GetDevicesAndValues(["enabled": True, "valuenum": [1]])
  Endif

  SelectButton($sLocation)

  If Not Error Then
    If (rDevice.Count > 0) Then
      For Each rDevice
        If rDevice!device_dimable Then
          sValue = UCase(rDevice!device_value_value)
          sType = Devices.FindTypeForDevice(rDevice!device_id)
          If sValue = "ON" Or sValue = "OPEN" Or sValue = "MOTION" Or sValue = "UP" Or sValue = "AWAKE" Or sValue = "ONLINE" Or sValue = "LIGHT" Or sValue = "ALARM" Then
            hButton = New Button(VPanel1) As "SwitchButton_Off"
            If rDevice!device_onicon <> "" Then
              Try oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!device_onicon]
            Else
              oIcon = Null
            Endif
            iBrightness = 100
          Else If InStr(sValue, "DIM ") Then
            hButton = New Button(VPanel1) As "SwitchButton_Off"
            iBrightness = 0
            Try iBrightness = Val(Replace(sValue, "DIM ", ""))
            If rDevice!device_dimicon <> "" Then
              Try oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!device_dimicon]
            Else
              oIcon = Null
            Endif
          Else If (InStr(sValue, "DIM") Or InStr(sValue, "BRIGHT")) Then
            hButton = New Button(VPanel1) As "SwitchButton_Off"
            iBrightness = 0
            If rDevice!device_dimicon <> "" Then
              Try oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!device_dimicon]
            Else
              oIcon = Null
            Endif
          Else
            hButton = New Button(VPanel1) As "SwitchButton_On"
            If rDevice!device_officon <> "" Then
              Try oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!device_officon]
            Else
              oIcon = Null
            Endif
            iBrightness = 0
          Endif

          With hButton
            .Text = rDevice!device_name
            .Height = 40
            .Width = 135
            .Tag = rDevice!device_id
            .Picture = oIcon
            .Font = Font["Sans Serif, 7, Normal"]
          End With

          Select sType
            Case "X10"
              If rDevice!device_extcode = True Then
                hDim = New Slider(VPanel1) As "DimSlider"
                With hDim
                  .Tracking = False
                  .MaxValue = 100
                  .MinValue = 0
                  .PageStep = 6.25
                  .Step = 6.25
                  .Height = 20
                  .Width = 135
                  .Mark = True
                  .Tag = rDevice!device_id
                  .Value = iBrightness
                End With
              Else
                hDimBox = New HBox(VPanel1)
                With hDimBox
                  .Height = 20
                  .Width = 135
                End With
                hButton = New Button(hDimBox) As "MinusButton"
                With hButton
                  .Text = "-"
                  .Height = 30
                  .Width = 65
                  .Tag = rDevice!device_id
                End With
                hButton = New Button(hDimBox) As "PlusButton"
                With hButton
                  .Text = "+"
                  .Height = 30
                  .Width = 65
                  .Tag = rDevice!device_id
                End With
                Endif
            Case "TRC02", "TRC022"
              sValue2 = UCase(Devices.GetValueForDevice(rDevice!device_id, "2"))
              If InStr(sValue2, "COLOR ") Then
                iColor = 0
                Try iColor = Val(Replace(sValue2, "COLOR ", ""))
              Endif
              hDim = New Slider(VPanel1) As "ColorSlider"
              With hDim
                .Tracking = False
                .MaxValue = 132
                .MinValue = 14
                .PageStep = 6.25
                .Step = 6.25
                .Height = 20
                .Width = 135
                .Mark = True
                .Tag = rDevice!device_id
                .Value = iColor
              End With
              hDimBox = New HBox(VPanel1)
              With hDimBox
                .Height = 20
                .Width = 135
              End With
              hButton = New Button(hDimBox) As "DMinusButton"
              With hButton
                .Text = "D-"
                .Height = 20
                .Width = 35
                .Tag = rDevice!device_id
              End With
              hButton = New Button(hDimBox) As "DPlusButton"
              With hButton
                .Text = "D+"
                .Height = 20
                .Width = 35
                .Tag = rDevice!device_id
              End With
              hButton = New Button(hDimBox) As "CMinusButton"
              With hButton
                .Text = "C-"
                .Height = 20
                .Width = 35
                .Tag = rDevice!device_id
              End With
              hButton = New Button(hDimBox) As "CPlusButton"
              With hButton
                .Text = "C+"
                .Height = 20
                .Width = 35
                .Tag = rDevice!device_id
              End With
            Default ' "AC", "HEEU", "Z-Wave", "PLCBUS", "FS20", "KNX"
              hDim = New Slider(VPanel1) As "DimSlider"
              With hDim
                .Tracking = False
                .MaxValue = 100
                .MinValue = 0
                .PageStep = 6.25
                .Step = 6.25
                .Height = 20
                .Width = 135
                .Mark = True
                .Tag = rDevice!device_id
                .Value = iBrightness
              End With
          End Select
        Endif

        If rDevice!device_switchable Then
          sValue = UCase(rDevice!device_value_value)
          If sValue = "ON" Or sValue = "OPEN" Or sValue = "MOTION" Or sValue = "UP" Or sValue = "AWAKE" Then
            hButton = New Button(VPanel1) As "SwitchButton_Off"
            If rDevice!device_onicon <> "" Then
              Try oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!device_onicon]
            Else
              oIcon = Null
            Endif
          Else
            hButton = New Button(VPanel1) As "SwitchButton_On"
            If rDevice!device_officon <> "" Then
              Try oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!device_officon]
            Else
              oIcon = Null
            Endif
          Endif

          With hButton
            .Text = rDevice!device_name
            .Height = 40
            .Width = 135
            .Tag = rDevice!device_id
            .Picture = oIcon
            If Len(rDevice!device_name) > 12 Then .Font = Font["Sans Serif, 7, Normal"]
          End With
        Endif
      Next
    Endif
  Else
    Main.WriteLog(("Error ") & Error.Text & (" while fetching devices!"))
  Endif

End

Public Sub PopulateButtons()

  Dim rDevice, rLocation As Result
  Dim hButton As Button
  Dim sLocation As String
  Dim oBox, oObject As Object
  Dim iLoc As Integer

  ' delete previous buttons first
  For Each oObject In hBox1.Children
    If oObject.Name = "LocationButton" Then oObject.Delete()
  Next

  For Each oObject In hBox2.Children
    If oObject.Name = "LocationButton" Then oObject.Delete()
  Next

  $cLocations = New Collection

  $cLocations.Add("All", 0)
  Try rDevice = Devices.GetDevicesAndValues(["sortOrder": "name", "switchable": True, "dimable": True, "able": "OR"])
  If Not Error Then
    If rDevice.Count Then
      For Each rDevice
        If rDevice!device_location_id = 0 Then Continue
        Try rLocation = Main.hDB.Exec("SELECT * FROM locations WHERE id='" & rDevice!device_location_id & "'")
        If rLocation.Count Then
          If Not rLocation!name Then Continue
          ' get unique list of used location
          $cLocations.Add(rLocation!name, rLocation!id)
        Endif
      Next
    Endif
    $iLocationMax = $cLocations.Count

    For Each sLocation In $cLocations
      If iLoc < 9 Then
        oBox = HBox1
      Else
        oBox = HBox2
      Endif
      Inc iLoc

      hButton = New Button(oBox) As "LocationButton"
      With hButton
        .Text = sLocation
        .Height = 20
        .Width = 84
        .Tag = sLocation
        .Font = Font["Sans Serif, 7, Normal"]
      End With
    Next
  Else
    Main.WriteLog("[Main] " & ("ERROR: No database connection active!"))
  Endif

End

Private Sub SetDevice(sCmd As String)

  If Main.bServer Then
    Try Devices.SetDevice(Last.Tag, sCmd)
  Else
    Client.DeviceSetDevice(Last.Tag, sCmd)
  Endif

End

Public Sub DimSlider_MouseUp()

  If Main.bServer Then
    Try Devices.SetDevice(Last.Tag, "Dim " & Last.Value)
  Else
    Client.DeviceSetDevice(Last.Tag, "Dim " & Last.Value)
  Endif

End

Public Sub SwitchButton_Off_Click()

  SetDevice("Off")

End

Public Sub SwitchButton_On_Click()

  SetDevice("On")

End

Public Sub MinusButton_MouseDown()

  SetDevice("Dim")

End

Public Sub PlusButton_MouseDown()

  SetDevice("Bright")

End

Public Sub MinusButton_MouseUp()

  SetDevice("Stop")

End

Public Sub PlusButton_MouseUp()

  SetDevice("Stop")

End

Public Sub btnRefresh_Click()

  PopulateButtons()
  ReloadPage()

End

' TRC02/TRC022 extra buttons
Public Sub ColorSlider_MouseUp()

  If Main.bServer Then
    Try Devices.SetDevice(Last.Tag, "Color " & Last.Value)
  Else
    Client.DeviceSetDevice(Last.Tag, "Color " & Last.Value)
  Endif

End

Public Sub DMinusButton_MouseDown()

  SetDevice("Dim")

End

Public Sub DPlusButton_MouseDown()

  SetDevice("Bright")

End

Public Sub CMinusButton_MouseDown()

  SetDevice("Color-")

End

Public Sub CPlusButton_MouseDown()

  SetDevice("Color+")

End
