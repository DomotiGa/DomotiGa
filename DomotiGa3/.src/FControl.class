' Gambas class file

' Description:
' FControl.class
' Device control page.

' Development Status:
' Done.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public hDim As Slider
Private $iLocationMax As Integer
Private $cLocations As Collection
Private $sLocation As String = "All"

Public Sub Form_Open()

  PopulateButtons()
  ReloadPage()

End

Public Sub Form_Resize()

  If $iLocationMax < 9 Then
    ToolBar1.Move(0, 0, Me.ClientWidth - 20)
    HBox1.Move(0, 0, Me.ClientWidth - 20, 28)
    HBox2.Hide
    VPanel1.Move(7, 30, Me.ClientWidth - 20, Me.ClientHeight - 35)
  Else
    ToolBar1.Move(0, 0, Me.ClientWidth - 20)
    HBox1.Move(0, 0, Me.ClientWidth - 20, 28)
    HBox2.Move(0, 31, Me.ClientWidth - 20, 28)
    HBox2.Show
    VPanel1.Move(7, 70, Me.ClientWidth - 20, Me.ClientHeight - 70)
  Endif

End

Public Sub LocationButton_Click()

  $sLocation = Last.Tag
  ReloadPage()

End

Public Sub ReloadPage()

  Dim oObject As Object

  ' delete previous buttons first
  For Each oObject In VPanel1.Children
    oObject.Delete()
  Next
  RefreshPage()

End

Public Sub SelectButton(sLoc As String)

  Dim oObject As Object

  ' disable selected button
  For Each oObject In HBox1.Children
    If oObject.Text = sLoc Then
      oObject.Enabled = False
    Else
      oObject.Enabled = True
    Endif
  Next

  ' disable selected button
  For Each oObject In HBox2.Children
    If oObject.Text = sLoc Then
      oObject.Enabled = False
    Else
      oObject.Enabled = True
    Endif
  Next

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' create dynamic buttons for all controllable values
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub RefreshPage()

  Dim hButton As Button
  Dim hSpinBox As SpinBox
  Dim hCButton As ColorButton
  Dim oIcon As Object
  Dim hHBox As HBox

  Dim iDeviceId, iType, iValueNum As Integer
  Dim rDevices, rLocation As Result

  Dim sValue, sDeviceName As String
  Dim sOnIcon, sDimIcon, sOffIcon As String

  ' check
  Dim iBrightness, iColor As Integer

  ' fetch location name
  rLocation = Main.hDB.Exec("SELECT * FROM locations WHERE name LIKE &1", $sLocation)
  If (rLocation.Count >= 1) Then
    ' fetch all controllable values on that location
    Try rDevices = Devices.GetDevicesAndValues(["enabled": True, "location_id": rLocation!id, "inc_device_values": True, "controllable": True])
  Else
    ' fetch all controllable values
    Try rDevices = Devices.GetDevicesAndValues(["enabled": True, "inc_device_values": True, "controllable": True])
  Endif
  SelectButton($sLocation)

  If rDevices Then
    If rDevices.Count Then
      For Each rDevices
        If rDevices!device_name Then

          iDeviceId = rDevices!device_id
          sDeviceName = rDevices!device_name

          sOnIcon = rDevices!device_onicon
          sDimIcon = rDevices!device_dimicon
          sOffIcon = rDevices!device_officon

          iValueNum = rDevices!device_value_valuenum
          iType = rDevices!device_value_type_id
          sValue = LCase(rDevices!device_value_value)

          Select iType
            Case Devices.ValueType_Switch ' switch
              If sValue = "on"
                hButton = New Button(VPanel1) As "SwitchButton_Off"
                If sOnIcon <> "" Then
                  Try oIcon = Picture[Main.sBaseDir &/ "icons/" & sOnIcon]
                Else
                  oIcon = Null
                Endif
              Else
                hButton = New Button(VPanel1) As "SwitchButton_On"
                If sOffIcon <> "" Then
                  Try oIcon = Picture[Main.sBaseDir &/ "icons/" & sOffIcon]
                Else
                  oIcon = Null
                Endif
              Endif
              With hButton
                .Text = sDeviceName
                .Height = 40
                .Width = 135
                .Tag = iDeviceId & "," & iValueNum
                .Picture = oIcon
                If Len(sDeviceName) > 12 Then .Font = Font["Sans Serif, 7, Normal"]
               End With

            Case Devices.ValueType_Dimmer ' dimmer absolute
              If sValue == "ON"
                hButton = New Button(VPanel1) As "SwitchButton_Off"
                If sOnIcon <> "" Then
                  Try oIcon = Picture[Main.sBaseDir &/ "icons/" & sOnIcon]
                Else
                  oIcon = Null
                Endif
                iBrightness = 100
              Else If InStr(sValue, "DIM ") Then
                hButton = New Button(VPanel1) As "SwitchButton_Off"
                iBrightness = 0
                Try iBrightness = Val(Replace(sValue, "DIM ", ""))
                If sDimIcon <> "" Then
                  Try oIcon = Picture[Main.sBaseDir &/ "icons/" & sDimIcon]
                Else
                  oIcon = Null
                Endif
              Else
                hButton = New Button(VPanel1) As "SwitchButton_On"
                If sOffIcon <> "" Then
                  Try oIcon = Picture[Main.sBaseDir &/ "icons/" & sOffIcon]
                Else
                  oIcon = Null
                Endif
                iBrightness = 0
              Endif
              With hButton
                .Text = sDeviceName
                .Height = 40
                .Width = 135
                .Tag = iDeviceId & "," & iValueNum
                .Picture = oIcon
                .Font = Font["Sans Serif, 7, Normal"]
              End With
              ' display slider
              hDim = New Slider(VPanel1) As "DimSlider"
              With hDim
                .Tracking = False
                .MaxValue = 100
                .MinValue = 0
                .PageStep = 6.25
                .Step = 6.25
                .Height = 20
                .Width = 135
                .Mark = True
                .Tag = iDeviceId & "," & iValueNum
                .Value = iBrightness
              End With

            Case 21 ' thermostat setpoint
              hHBox = New HBox(VPanel1)
              With hHBox
                  .Height = 40
                  .Width = 135
              End With
              hSpinBox = New SpinBox(hHBox) As "Setpoint_Value"
              With hSpinBox
                Try .Value = Replace(sValue, "setpoint ", "")
                .Height = 40
                .Width = 65
                .Tag = iDeviceId & "," & iValueNum
              End With
              hButton = New Button(hHBox) As "SetPoint_Set"
              With hButton
                .Text = "Set"
                .Height = 40
                .Width = 65
                .Tag = iDeviceId & "," & iValueNum
                .Font = Font["Sans Serif, 7, Normal"]
              End With

            Case 44 ' dimmer relative
              hHBox = New HBox(VPanel1)
              With hHBox
                .Height = 40
                .Width = 135
              End With
              hButton = New Button(hHBox) As "MinusButton"
              With hButton
                .Text = "-"
                .Height = 40
                .Width = 65
                .Tag = iDeviceId & "," & iValueNum
              End With
              hButton = New Button(hHBox) As "PlusButton"
              With hButton
                .Text = "+"
                .Height = 40
                .Width = 65
                .Tag = iDeviceId & "," & iValueNum
              End With

            Case 45 ' shutter relative
              hHBox = New HBox(VPanel1)
              With hHBox
                .Height = 40
                .Width = 135
              End With
              hButton = New Button(hHBox) As "DownButton"
              With hButton
                .Text = "-"
                .Height = 40
                .Width = 35
                .Tag = iDeviceId & "," & iValueNum
              End With
              hButton = New Button(hHBox) As "UpButton"
              With hButton
                .Text = "+"
                .Height = 40
                .Width = 35
                .Tag = iDeviceId & "," & iValueNum
              End With
              hButton = New Button(hHBox) As "StopButton"
              With hButton
                .Text = "Stop"
                .Height = 40
                .Width = 35
                .Tag = iDeviceId & "," & iValueNum
              End With

            Case 24 ' dimmer_rgb
              hHBox = New HBox(VPanel1)
              With hHBox
                .Height = 40
                .Width = 135
              End With
              hCButton = New ColorButton(hHBox) As "CButton"
              With hCButton
                .Height = 40
                .Width = 35
                .Tag = iDeviceId & "," & iValueNum
                Try .Color = sValue
              End With
            Case Else
              Print "Unknown"
          End Select

        Endif
      Next
    Endif
  Else
    Message.Info(("ERROR: table 'devices' and/or 'device_values' not found!"))
    Return
  Endif

End

Public Sub PopulateButtons()

  Dim rDevice, rLocation As Result
  Dim hButton As Button
  Dim sLocation As String
  Dim oBox, oObject As Object
  Dim iLoc As Integer

  ' delete previous buttons first
  For Each oObject In hBox1.Children
    If oObject.Name = "LocationButton" Then oObject.Delete()
  Next

  For Each oObject In hBox2.Children
    If oObject.Name = "LocationButton" Then oObject.Delete()
  Next

  $cLocations = New Collection

  $cLocations.Add("All", 0)
  Try rDevice = Devices.GetDevicesAndValues(["sortOrder": "name", "controllable": True])
  If Not Error Then
    If rDevice.Count Then
      For Each rDevice
        If rDevice!device_location_id = 0 Then Continue
        Try rLocation = Main.hDB.Exec("SELECT * FROM locations WHERE id='" & rDevice!device_location_id & "'")
        If rLocation.Count Then
          If Not rLocation!name Then Continue
          ' get unique list of used location
          $cLocations.Add(rLocation!name, rLocation!id)
        Endif
      Next
    Endif
    $iLocationMax = $cLocations.Count

    For Each sLocation In $cLocations
      If iLoc < 9 Then
        oBox = HBox1
      Else
        oBox = HBox2
      Endif
      Inc iLoc

      hButton = New Button(oBox) As "LocationButton"
      With hButton
        .Text = sLocation
        .Height = 20
        .Width = 84
        .Tag = sLocation
        .Font = Font["Sans Serif, 7, Normal"]
      End With
    Next
  Else
    Main.WriteLog("[Main] " & ("ERROR: No database connection active!"))
  Endif

End

Private Sub SetDevice(sCmd As String)

  ' split device id and valuenum
  Dim aParams As String[] = Split(Last.Tag, ",")

  If aParams.Count = 2 Then
    If Main.bServer Then
      Devices.SetDevice(aParams[0], sCmd, aParams[1])
    Else
      Client.DeviceSetDevice(aParams[0], sCmd, aParams[1])
    Endif
  Endif

End

Public Sub DimSlider_MouseUp()

  SetDevice("Dim " & Last.Value)

End

Public Sub SwitchButton_Off_Click()

  SetDevice("Off")

End

Public Sub SwitchButton_On_Click()

  SetDevice("On")

End

Public Sub MinusButton_MouseDown()

  SetDevice("Dim")

End

Public Sub PlusButton_MouseDown()

  SetDevice("Bright")

End

Public Sub MinusButton_MouseUp()

  SetDevice("Stop")

End

Public Sub PlusButton_MouseUp()

  SetDevice("Stop")

End

Public Sub btnRefresh_Click()

  PopulateButtons()
  ReloadPage()

End

' TRC02/TRC022 extra buttons
Public Sub ColorSlider_MouseUp()

  SetDevice("Color " & Last.Value)

End

Public Sub DMinusButton_MouseDown()

  SetDevice("Dim")

End

Public Sub DPlusButton_MouseDown()

  SetDevice("Bright")

End

Public Sub CMinusButton_MouseDown()

  SetDevice("Color-")

End

Public Sub CPlusButton_MouseDown()

  SetDevice("Color+")

End

Public Sub CButton_Change()

  SetDevice(Last.Color)

End
