' Gambas module file

' Description:
' Pushover.module
' Contains code for sending Pushover messages

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Validate Pushover token and user
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Public Sub ValidatePushoverTokenUser(sToken As String, sUser As String) As String

  Dim hPushoverValidate As HttpClient
  Dim sUrl As String = "https://api.pushover.net/1/users/validate.json"
  Dim sData As String
  Dim sBuffer As String
  Dim sStatus As String
  Dim sUserResp As String
  Dim sDeviceResp As String
  Dim vResponse As Variant
  Dim vErrors As Variant
  Dim sError As String

  If sToken = "" Then sToken = Main.sPushoverToken
  If sUser = "" Then sUser = Main.sPushoverUser

  sData = "token=" & URL.Encode(sToken) & "&" & "user=" & URL.Encode(sUser)

  hPushoverValidate = New HttpClient As "hPushoverValidate"
  hPushoverValidate.URL = sUrl
  hPushoverValidate.TimeOut = 3
  hPushoverValidate.Async = False
  hPushoverValidate.Post("application/x-www-form-urlencoded", sData)

  If hPushoverValidate.Status < 0 Then
    ' Faillure fetching data or apikey is invalid
    If Main.bPushoverDebug Then Main.WriteDebugLog("[Pushover] Error validating API token=" & sToken & ", Code=" & hPushoverValidate.Status & " HTTP=" & hPushoverValidate.Code)
    Return "Failed, Code=" & hPushoverValidate.Status & ", HTTP=" & hPushoverValidate.Code
  Else
    ' success or error - read the data
    If Lof(hPushoverValidate) Then sBuffer = Read #hPushoverValidate, Lof(hPushoverValidate)

    vResponse = JSON.Decode(sBuffer)

    If vResponse.Exist("status") Then sStatus = vResponse["status"]
    If vResponse.Exist("user") Then sUserResp = vResponse["user"]
    If vResponse.Exist("device") Then sDeviceResp = vResponse["device"]
    If vResponse.Exist("errors") Then vErrors = vResponse["errors"]
    Try sError = vErrors[0]

    ' Status=1 is success, anything else is a faillure
    If sStatus = "1" Then
      If Main.bPushoverDebug Then Main.WriteDebugLog("[Pushover] Successfully validated API token=" & sToken & ", user=" & sUser)
      Return ""
    Else
      If Main.bPushoverDebug Then Main.WriteDebugLog("[Pushover] Failed to validated API token= " & sToken & ", user=" & sUser & ", Code=" & hPushoverValidate.Code & ", Error=" & sError)
      Return "Code=" & hPushoverValidate.code & ", Error=" & sError
    Endif

  End If

  Return ""

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Post the Pushover message
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub PostPushover(sToken As String, sUser As String, sDevice As String, sMessage As String) As String

  Dim hPushoverMessage As HttpClient
  Dim sUrl As String = "https://api.pushover.net/1/messages.json"
  Dim sData As String
  Dim sBuffer As String
  Dim sStatus As String
  Dim sUserResp As String
  Dim sDeviceResp As String
  Dim vResponse As Variant
  Dim vErrors As Variant
  Dim sError As String
  
  If sToken = "" Then sToken = Main.sPushoverToken
  If sUser = "" Then sUser = Main.sPushoverUser
  If sDevice = "" Then sDevice = Main.sPushoverDevice
  sData = "token=" & URL.Encode(sToken) & "&" & "user=" & URL.Encode(sUser)
  If sDevice Then
    sData &= "&" & "device=" & URL.Encode(sDevice)
  End If
  sData &= "&" & "message=" & URL.Encode(sMessage)

  hPushoverMessage = New HttpClient As "hPushoverMessage"
  hPushoverMessage.URL = sUrl
  hPushoverMessage.TimeOut = 3
  hPushoverMessage.Async = False
  hPushoverMessage.Post("application/x-www-form-urlencoded", sData)

  If hPushoverMessage.Status < 0 Then
    ' Faillure fetching data or apikey is invalid
    If Main.bPushoverDebug Then Main.WriteDebugLog("[Pushover] Error sending Pushover message. API token=" & sToken & ", User=" & sUser & ", HttpCode=" & hPushoverMessage.Status)
    Return "Failed, HTTP=" & hPushoverMessage.Status
  Else
    ' success or error - read the data
    If Lof(hPushoverMessage) Then sBuffer = Read #hPushoverMessage, Lof(hPushoverMessage)

    vResponse = JSON.Decode(sBuffer)

    If vResponse.Exist("status") Then sStatus = vResponse["status"]
    If vResponse.Exist("user") Then sUserResp = vResponse["user"]
    If vResponse.Exist("device") Then sDeviceResp = vResponse["device"]
    If vResponse.Exist("errors") Then vErrors = vResponse["errors"]
    Try sError = vErrors[0]
    
    ' Status=1 is success, anything else is a faillure
    If sStatus = "1" Then
      If Main.bPushoverDebug Then Main.WriteDebugLog("[Pushover] Successfully send message. API token=" & sToken & ", user=" & sUser)
      Return ""
    Else
      If Main.bPushoverDebug Then Main.WriteDebugLog("[Pushover] Failed to send message. API token= " & sToken & ", user=" & sUser & ", Code=" & hPushoverMessage.Code & ", Error=" & sError)
      Return "Code=" & hPushOverMessage.code & ", Error=" & sError
    Endif

  End If

  Return ""
  
End
