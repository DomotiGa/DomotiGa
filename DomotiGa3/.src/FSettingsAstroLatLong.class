' Gambas class file

' Description:
' FSettingsAstro.class
' Settings form for Astro and Location.

' Development Status:
' Working, Daylight Saving checkbox not used yet.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Private cLatitude As New Collection
Private cLongitude As New Collection

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

End

Public Sub btnSave_Click()

  Me.Close

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub btnSearch_Click()

  Dim hGoogleGeocode As HttpClient
  Dim sUrl As String = "https://maps.googleapis.com/maps/api/geocode/json?address="
  Dim sBuffer As String
  Dim vResponse As Variant
  Dim cItem As Collection

  ' Result values to empty
  cmbResults.Clear
  cLatitude.Clear
  cLongitude.Clear
  vbLatitude.Value = 0
  vbLongitude.Value = 0

  If Not txtLocation.Text Then
    Balloon("No location supplied", txtLocation)
    Return
  Endif

  sUrl &= URL.Encode(txtLocation.Text) & "&" & "sensor=false"

  hGoogleGeocode = New HttpClient As "hGoogleGeocode"
  hGoogleGeocode.URL = sUrl
  hGoogleGeocode.TimeOut = 8
  hGoogleGeocode.Async = False
  hGoogleGeocode.Post("", "")

  If hGoogleGeocode.Status < 0 Then
    ' Faillure fetching data or apikey is invalid
    Message.Error("Unable to connect Google Geocode\nCode = " & hGoogleGeocode.Status & ", HTTP = " & hGoogleGeocode.Code)
    Return
  Else
    ' success or error - read the data
    If Lof(hGoogleGeocode) Then sBuffer = Read #hGoogleGeocode, Lof(hGoogleGeocode)

    vResponse = JSON.Decode(sBuffer)

    If Not vResponse.Exist("status") Then
      Message.Error("Invalid response from Google Geocode")
      Return
    End If

    If vResponse["status"] <> "OK" Or vResponse["status"] <> "ZERO_RESULTS" Then
      Message.Error("Google Geocode denied the request or it was invalid\nResponse=" & vResponse["status"])
      Return
    End If

    If vResponse["status"] = "ZERO_RESULTS" Then
      Balloon("Google Geocode didn't find any matching location(s)", txtLocation)
      Return
    End If

    For Each cItem In vResponse["results"]
      cmbResults.Add(cItem["formatted_address"])
      cLatitude.Add(cItem["geometry"]["location"]["lat"], cmbResults.Count - 1)
      cLongitude.Add(cItem["geometry"]["location"]["lng"], cmbResults.Count - 1)
      Print cItem["formatted_address"]
      Print cItem["geometry"]["location"]["lat"]
      Print cItem["geometry"]["location"]["lng"]
    Next

    If cLatitude.Exist(0) Then vbLatitude.Value = cLatitude[cmbResults.Index]
    If cLongitude.Exist(0) Then vbLongitude.Value = cLongitude[cmbResults.Index]


' Status = REQUEST_DENIED

    'If vResponse.Exist("status") Then sStatus = vResponse["status"]
    'If vResponse.Exist("user") Then sUserResp = vResponse["user"]
    'If vResponse.Exist("device") Then sDeviceResp = vResponse["device"]
    'If vResponse.Exist("errors") Then vErrors = vResponse["errors"]
    'Try sError = vErrors[0]

    ' Status=1 is success, anything else is a faillure
    'If sStatus = "1" Then
    '  If Main.bPushoverDebug Then Main.WriteDebugLog("[Pushover] Successfully validated API token=" & sToken & ", user=" & sUser)
    '  Return ""
    ' Else
    '  If Main.bPushoverDebug Then Main.WriteDebugLog("[Pushover] Failed to validated API token=" & sToken & ", user=" & sUser & ", Code=" & hPushoverValidate.Code & ", Error=" & sError)
     ' Return "Code=" & hPushoverValidate.code & ", Error=" & sError
    'Endif

  End If

End

Public Sub cmbResults_Click()

  vbLatitude.Value = cLatitude[cmbResults.Index]
  vbLongitude.Value = cLongitude[cmbResults.Index]

End
