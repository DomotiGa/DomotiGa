' Gambas class file

' Description:
' FSystemStats.class
' Display all server related rrdtool graphs.

' Development Status:
' Working.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Private tRefresh As New Timer
Private bAutoRefresh As Boolean
Private sRange As String = "1h"

Public Sub Form_Open()

  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

  ' create refresh timer
  tRefresh = New Timer As "tRefresh"
  tRefresh.Delay = 30000 ' 30 seconds

End

Public Sub Form_Resize()

  svGraphs.Move(0, 35, Me.ClientWidth, Me.ClientHeight - 35)

End

Public Sub Form_Close()

  tRefresh.Stop

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' refresh contents
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub tRefresh_Timer()

  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

End

Public Sub btnOverview_Click()

  sRange = "1h"
  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

End

Public Sub btnGraphs2h_Click()

  sRange = "2h"
  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

End

Public Sub btnGraphs1d_Click()

  sRange = "1d"
  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

End

Public Sub btnGraphs2d_Click()

  sRange = "2d"
  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
End

Public Sub btnGraphs1w_Click()

  sRange = "1w"
  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

End

Public Sub btnGraphs2w_Click()

  sRange = "2w"
  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

End

Public Sub btnGraphs1m_Click()

  sRange = "1m"
  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

End

Public Sub btnGraphs1y_Click()

  sRange = "1y"
  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

End

Public Sub btnRefresh_Click()

  FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)

End

Public Sub tbtnRefresh_Click()

  If tbtnRefresh.Value = True Then
    tRefresh.Start
    bAutoRefresh = True
    btnRefresh.Enabled = False
  Else
    tRefresh.Stop
    bAutoRefresh = False
    btnRefresh.Enabled = True
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' display graph images
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub DisplayGraphs(sGraphRange As String, sGroup As String, oPanel As Object, Optional bAppend As Boolean)

  Dim pGraph As Picture
  Dim sGraphs As String[]
  Dim sGraph, sGraphPic, sGraphUrl As String
  Dim hPictureBox As PictureBox
  Dim oObject As Object
  Dim iHeight As Integer

  If Not bAppend Then
    ' delete previous graphs first
    For Each oObject In oPanel.Children
      oObject.Delete()
    Next
  Endif

  sGraphs = Split(ServerStats.Graphs(), "|")
  If sGraphs.Count Then
    FMain.DisplayHeader(sGroup & (" Performance - Last ") & sGraphRange, oPanel)
    If Main.bServer Then
      ServerStats.CreateGraphs(sGraphRange)
    Else
      Client.UpdateServerStatsGraphs(sGraphRange)
    Endif
    For Each sGraph In sGraphs
      If sGraph Then
        If Main.bServer Then
          sGraphPic = Main.sBaseDir & "/rrd/graphs/" & sGraph & "-" & sGraphRange & ".png"
          Try pGraph = Picture.Load(sGraphPic)
        Else
          sGraphUrl = Main.sGraphsUrl &/ sGraph & "-" & sGraphRange & ".png"
          sGraphPic = FMain.GetGraph(sGraphUrl)
          If Len(sGraphPic) Then
            If Main.bServerStatsDebug Then Main.WriteDebugLog("[ServerStats] Downloaded graph '" & sGraphUrl & "'")
            Try pGraph = Picture.Load(sGraphPic)
          Else
            If Main.bServerStatsDebug Then Main.WriteDebugLog("[ServerStats] Failed to download graph '" & sGraphUrl & "'")
          Endif
        Endif
        If pGraph Then
          hPictureBox = New PictureBox(oPanel) As "Graph"
          With hPictureBox
            .Picture = pGraph
            .Height = pGraph.Height + 5
            .Width = pGraph.Width
            .Tag = sGraph
          End With
        Endif
      Endif
      ' erase previous image
      If Main.bServer = False Then
        If Exist(sGraphPic) Then Kill sGraphPic
      Endif
    Next
    iHeight = 0
    ' calculate needed scrollview and panel height
    For Each oObject In oPanel.Children
      iHeight += oObject.Height
    Next
    oPanel.Resize(oPanel.Width, iHeight)
  Endif

End


Public Sub btnShow_Click()

  If Len(txtRange.Text) >= 2 Then
    sRange = txtRange.Text
    FMain.DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
    DisplayGraphs(sRange, "Server", FServerStats.vpnlGraphs)
  Endif

End
