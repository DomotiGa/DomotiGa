' Gambas class file

' Description:
' FSettingsAstro.class
' Settings form for Astro and Location.

' Development Status:
' Working, Daylight Saving checkbox not used yet.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  vbLatitude.Value = Main.iAstroLatitude
  vbLongitude.Value = Main.iAstroLongitude
  spbTimeZone.Value = Main.iAstroTimezone
  txtSeasons.Text = Main.sAstroSeasons
  txtSeasonStarts.Text = Main.sAstroSeasonStarts
  cmbTwilight.Text = Main.sAstroTwilight
  chkDebug.Value = Main.bAstroDebug
  cmbCurrency.Text = Main.sCurrency
  cmbTemperature.Text = Main.sTemperature
  chkDST.Value = Main.bAstroDST
  btnSave.Enabled = False

End

Public Sub btnSave_Click()

  Dim rResult As Result
  Dim sSeasons As String[]
  Dim sSeason_Start As String[]
  Dim sSeason_Element As String
  
  ' check if we got the right format like "winter,spring,summer,fall". Astro can give an error if not enough arguments 
  sSeasons = Split(txtSeasons.text, ",")
  If sSeasons.Length <> 4 Then
    Balloon(("Please enter 4 words, separated by a command e.g. winter,spring,summer,fall"), txtSeasons)
    Return
  End If

  ' check if the seasons start has 4 values like ¨20,20,21,22¨
  sSeason_Start = Split(txtSeasonStarts.Text, ",")
  If sSeason_Start.Length <> 4 Then
    Balloon(("Please enter 4 days (numeric), separated by a command e.g. 20,20,21,22"), txtSeasonStarts)
    Return
  End If

  For Each sSeason_Element In sSeason_Start
    Try CInt(sSeason_Element)
    If Error Then 
      Balloon(("Please enter 4 days (numeric), separated by a command e.g. 20,20,21,22"), txtSeasonStarts)
      Return      
    Endif
  Next

  ' save new Astro settings
  rResult = Main.hDB.Exec("UPDATE settings_astro SET debug = &1, dst = &2, currency = &3, temperature = &4, latitude = &5, longitude = &6, timezone = &7, seasons = &8, seasonstarts = &9, twilight = &{10} WHERE id = 1", chkDebug.Value, chkDST.Value, cmbCurrency.Text, cmbTemperature.Text, vbLatitude.Value, vbLongitude.Value, spbTimeZone.Value, txtSeasons.text, txtSeasonStarts.Text, cmbTwilight.Text)
  rResult = Main.GetSettingTable("astro") ' reload settings
  If rResult.Count Then
    Main.iAstroLatitude = rResult!latitude
    Main.iAstroLongitude = rResult!longitude
    Main.iAstroTimeZone = rResult!timezone
    Main.sAstroSeasons = rResult!seasons
    Main.sAstroSeasonStarts = rResult!seasonstarts
    Main.sAstroTwilight = rResult!twilight
    Main.bAstroDebug = rResult!debug
    Main.sCurrency = rResult!currency
    Main.sTemperature = rResult!temperature
    Main.bAstroDST = rResult!dst
  Endif
  If Main.bServer Then
    Main.Restart_Astro()
  Else
    XMLClient.ModuleRestart("Astro")
  Endif
  Me.Close

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub vbLatitude_Change()

  btnSave.Enabled = True

End

Public Sub vbLongitude_Change()

  btnSave.Enabled = True

End

Public Sub txtSeasons_KeyPress()

  btnSave.Enabled = True

End

Public Sub txtSeasonStarts_KeyPress()

  btnSave.Enabled = True

End

Public Sub chkDebug_Click()

  btnSave.Enabled = True

End

Public Sub btnDefaults_Click()

  Dim rResult As Result

  rResult = Main.GetSettingTable("astro", True) ' get defaults
  If rResult.Count Then
    vbLatitude.Value = rResult!latitude
    vbLongitude.Value = rResult!longitude
    spbTimeZone.Value = rResult!timezone
    txtSeasons.Text = rResult!seasons
    txtSeasonStarts.Text = rResult!seasonstarts
    chkDebug.Value = rResult!debug
    cmbCurrency.Text = rResult!currency
    cmbTemperature.Text = rResult!temperature
    chkDST.Value = rResult!dst
  Endif
  btnSave.Enabled = True

End

Public Sub cmbTwilight_Click()

  btnSave.Enabled = True

End

Public Sub spbTimeZone_Change()

  btnSave.Enabled = True

End

Public Sub cmbCurrency_Click()

  btnSave.Enabled = True

End

Public Sub cmbTemperature_Click()

  btnSave.Enabled = True

End

Public Sub chkDST_Click()

  btnSave.Enabled = True

End
