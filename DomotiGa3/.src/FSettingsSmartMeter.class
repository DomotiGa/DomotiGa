' Gambas class file

' Description:
' FSettingsSmartMeter.class
' Settings form for NTA8130 compatible smart meter.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)

  cmbType.Text = Main.sSmartMeterType
  txtSerialPort.Text = Main.sSmartMeterSerialPort
  cmbBaudrate.Text = Main.sSmartMeterBaudrate
  cmbData.Text = Main.iSmartMeterDatabits
  cmbParity.Index = Main.iSmartMeterParity
  cmbStop.Text = Main.iSmartMeterStopbits
  txtTCPHost.Text = Main.sSmartMeterTCPHost
  txtTCPPort.Text = Main.iSmartMeterTCPPort
  chkDebug.Value = Main.bSmartMeterDebug
  chkEnabled.Value = Main.bSmartMeterEnabled
  btnSave.Enabled = FALSE

  IF Main.bSmartMeterEnabled = FALSE THEN
    cmbType.Enabled = FALSE
    txtSerialPort.Enabled = FALSE
    cmbBaudrate.Enabled = FALSE
    txtTCPHost.Enabled = FALSE
    txtTCPPort.Enabled = FALSE
    chkDebug.Enabled = FALSE
    cmbData.Enabled = FALSE
    cmbStop.Enabled = FALSE
    cmbParity.Enabled = FALSE
  ELSE
    SetButtons()
  END IF

END

PUBLIC SUB btnCancel_Click()

  ME.Close

END

PUBLIC SUB txtSerialPort_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbBaudrate_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB chkDebug_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB btnSave_Click()

  DIM rResult AS Result

  ' save new NTA8130 settings
  rResult = Main.hDB.Exec("UPDATE settings_nta8130 SET debug = &1, type = &2, serialport = &3, baudrate = &4, tcphost = &5, enabled = &6, tcpport = &7, databits = &8, stopbits = &9, parity = &10 WHERE id = 1", chkDebug.Value, cmbType.Text, txtSerialPort.Text, cmbBaudrate.Text, txtTCPHost.Text, chkEnabled.Value, txtTCPPort.Text, cmbData.Text, cmbStop.Text, cmbParity.Index)
  rResult = Main.GetSettingTable("nta8130") ' reload settings
  IF rResult.Count THEN
    Main.bSmartMeterEnabled = rResult!enabled
    Main.sSmartMeterSerialPort = rResult!serialport
    Main.sSmartMeterBaudrate = rResult!baudrate
    Main.sSmartMeterTCPHost = rResult!tcphost
    Main.iSmartMeterTCPPort = rResult!tcpport
    Main.sSmartMeterType = rResult!type
    Main.bSmartMeterDebug = rResult!debug
    Main.iSmartMeterDatabits = rResult!databits
    Main.iSmartMeterStopbits = rResult!stopbits
    Main.iSmartMeterParity = rResult!parity
  END IF
  IF Main.bServer THEN
    Main.Restart_SmartMeter()
  ELSE
    XMLClient.ModuleRestart("SmartMeter")
  END IF
  ME.Close

END

PUBLIC SUB btnDefaults_Click()

  DIM rResult AS Result

  rResult = Main.GetSettingTable("nta8130", TRUE) ' get defaults
  IF rResult.Count THEN
    chkEnabled.Value = rResult!enabled
    txtSerialPort.Text = rResult!serialport
    txtTCPPort.Text = rResult!tcpport
    txtTCPHost.Text = rResult!tcphost
    cmbType.Text = rResult!type
    cmbBaudrate.Text = rResult!baudrate
    chkDebug.Value = rResult!debug
    cmbData.Text = rResult!databits
    cmbStop.Text = rResult!stopbits
    cmbParity.Index = rResult!parity
  END IF
  btnSave.Enabled = TRUE

END

PUBLIC SUB chkEnabled_Click()

  txtSerialPort.Enabled = chkEnabled.Value
  cmbBaudrate.Enabled = chkEnabled.Value
  cmbType.Enabled = chkEnabled.Value
  txtTCPHost.Enabled = chkEnabled.Value
  txtTCPPort.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value
  cmbParity.Enabled = chkEnabled.Value
  cmbData.Enabled = chkEnabled.Value
  cmbStop.Enabled = chkEnabled.Value
  btnSave.Enabled = TRUE
  IF chkEnabled.Value THEN SetButtons()

END

PUBLIC SUB SetButtons()

  IF cmbType.Text = "tcp" THEN
    txtSerialPort.Enabled = FALSE
    cmbBaudrate.Enabled = FALSE
    cmbParity.Enabled = FALSE
    cmbData.Enabled = FALSE
    cmbStop.Enabled = FALSE
    txtTCPHost.Enabled = TRUE
    txtTCPPort.Enabled = TRUE
  END IF
  IF cmbType.Text = "serial" THEN
    txtSerialPort.Enabled = TRUE
    cmbBaudrate.Enabled = TRUE
    txtTCPHost.Enabled = FALSE
    txtTCPPort.Enabled = FALSE
    cmbParity.Enabled = TRUE
    cmbData.Enabled = TRUE
    cmbStop.Enabled = TRUE
  END IF

END

PUBLIC SUB cmbType_Click()

  SetButtons()
  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbDataClick()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbStop_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbParity_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB txtTCPHost_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB txtTCPPort_KeyPress()

  btnSave.Enabled = TRUE

END
