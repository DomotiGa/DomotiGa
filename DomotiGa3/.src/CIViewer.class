' Gambas class file

' Description:
' CIViewer.class
' Native support for CommandFusion's iViewer protocol.

' Development Status:
' Not working yet.

' Links:
' http://www.commandfusion.com
' http://commandfusion.googlecode.com/svn/trunk/dotNet_control/iViewerControl

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Property IViewerPort As String
Property IViewerDebug As Boolean
Property IViewerPassword As String

Private sIViewerPort As String
Private bIViewerDebug As Boolean
Private sIViewerPassword As String

Public hIViewer As ServerSocket

Private oClients As New Object[]
Private sBuffer As String

' start our tcp server
Public Function Connect() As Boolean

  hIViewer = New ServerSocket As "IViewer"
  hIViewer.Type = Net.Internet
  hIViewer.Port = sIViewerPort
  hIViewer.Listen(0)

  If hIViewer.Status = Net.Active Then Return True

  Return False

End

' shutdown our tcp server
Public Sub Disconnect()

  ' DO WHILE hSocket.Count > 0
  '   RemoveSocket(hSocket[0])
  ' LOOP

  hIViewer.Close()

End

Public Sub IViewer_Connection(sRemoteHostIP As String)

  Dim hSocket As Socket

  If hIViewer.Status <= Net.Active Then Return
  hSocket = hIViewer.Accept()
  oClients.Add(hSocket)
  If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] Got connect from client with IP ") & hSocket.RemoteHost)

End

Public Sub IViewer_Error()

  Main.WriteLog(("CF iViewer Error: Unable to bind socket."))

End

Public Sub Socket_Read()

  Dim sData As String

  If Last.Status <> Net.Connected Then Return
  sData = Read #Last, 1
  If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] Data from socket ") & oClients.Find(Last))
  If sData = "\x03" Then ' buffer until \x03 then parse
    If Len(sBuffer) > 1 Then ParseLine(sBuffer)
    sBuffer = Null
  Else
    sBuffer &= sData
  Endif

End

Public Sub ParseLine(sText As String)

  Dim aScan As String[]

  If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] ") & sText)
  aScan = Scan(sText, "*=*")
  If aScan.Count = 2 Then
    Select Case Left(aScan[0], 1)
      Case "a", "d"
        ' analog (eg. a2=4000) or digital join (eg. d10=1)
        Events.CheckIViewerRemoteEvents("iviewer", aScan[0], aScan[1])
      Case "s"
        ' serial (eg. s4=this is text)
        If aScan[0] = "s10001" Then
          If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] < iViewer : ") & aScan[1])
        Else If aScan[0] = "s10002" Then
           If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] < Device : ") & aScan[1])
        Else
          Events.CheckIViewerRemoteEvents("iviewer", aScan[0], aScan[1])
        Endif
      Case "h"
        ' heartbeat message
        If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] < Heartbeat request."))
        Try Write #Last, "h=1\x03", 4
        If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] > Heartbeat reply."))
      Case "p"
        If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] < Password request."))
        ' password
        If aScan[1] = sIViewerPassword Then
          Try Write #Last, "p=ok\x03", 5
          If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] > Password ok."))
        Else
          Try Write #Last, "p=bad\x03", 6
          If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] > Password bad."))
        Endif
      Case "m"
        ' orientation, (eg. m=landscape)
      Case "l"
        ' list event, (eg. l1:4:d1=1)
    End Select
  Endif

End

Public Sub Socket_Closed()

  If Main.bIViewerDebug Then Main.WriteDebugLog(("[iViewer] Connection closed by client ") & oClients.Find(Last))
  oClients.Remove(oClients.Find(Last))

End

Private Function IViewerPort_Read() As String

  Return sIViewerPort

End

Private Sub IViewerPort_Write(Value As String)

  sIViewerPort = Value

End

Private Function IViewerDebug_Read() As Boolean

  Return bIViewerDebug

End

Private Sub IViewerDebug_Write(Value As Boolean)

  bIViewerDebug = Value

End

Private Function IViewerPassword_Read() As String

  Return sIViewerPassword

End

Private Sub IViewerPassword_Write(Value As String)

  sIViewerPassword = Value

End
