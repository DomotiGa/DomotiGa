' Gambas class file

' Description:
' FWeatherUnderground.class
' Form for showing weather undergound info.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Private tWeatherRefresh As New Timer

Public Sub Form_Open()

  tWeatherRefresh = New Timer As "tWeatherRefresh"
  tWeatherRefresh.Delay = Main.iWeatherUGRefresh * 1000
  tWeatherRefresh.Start

  If Main.bWeatherUGEnabled Then
    PopulateButtons()
    InitLiveWeather()
    InitForeCast()
  Endif

End

Public Sub Form_Resize()

  TabStrip1.Move(3, 32, Me.ClientWidth - 5, Me.ClientHeight - 32)

End

Public Sub PopulateButtons()

  Dim rFeed As Result
  Dim hButton As Button

  ' populate feeds toolbutton
  Try rFeed = Main.hDB.Exec("SELECT * FROM weatherfeeds WHERE enabled is TRUE")
  If rFeed.count Then
    For Each rFeed
    If Not rFeed!name Or rFeed!enabled = False Then Continue
    hButton = New Button(vbFeeds) As "FeedButton"
     With hButton
      .Text = rFeed!name
      .Height = 28
      .Width = 84
      .Tag = rFeed!id
    End With
    Next
  Endif

End

Public Sub FeedButton_Click()

  Dim iFeed As Integer = Last.tag
  Dim oObject As Object

  ' enable all buttons, then disable selected one
  For Each oObject In vbFeeds.Children
    oObject.Enabled = True
    If oObject.Tag = iFeed Then oObject.Enabled = False
  Next
  DisplayFeed(iFeed)

End

Public Sub DisplayFeed(iFeed As Integer)

  Dim rFeed As Result
  Try rFeed = Main.hDB.Exec("SELECT * FROM weatherfeeds where id=" & iFeed)
  If rFeed Then
    InitSatelliteImage(rFeed!url)
  Endif

End

'--- when an URL is given, try to fetch the animated satellite image ---
Private Sub InitSatelliteImage(sUrl As String)

  Dim StrFile As String
  StrFile = XMLParser.GetFileFromInternet(sUrl)
  If Len(StrFile) > 0 Then
    MvSatImage.Path = StrFile
    MvSatImage.Playing = True
    MvSatImage.Refresh
    MvSatImage.Show
  Endif

End

'--- initialises the "Forecast" panel ---
Private Sub InitForeCast()

  Dim iCnt As Integer
  Dim cJSONForecast As New Collection

  cJSONForecast = WeatherUG.JSONWeatherForecast()

  ' 2 day forecast detailed
  If cJSONForecast["forecast"]["txt_forecast"]["forecastday"].Count >= 6
    For iCnt = 0 To 5
      Select Case iCnt
        Case 0
          PicFor0.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & cJSONForecast["forecast"]["txt_forecast"]["forecastday"][iCnt]["icon"] & ".gif"))
        Case 1
          PicFor1.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & cJSONForecast["forecast"]["txt_forecast"]["forecastday"][iCnt]["icon"] & ".gif"))
        Case 2
          PicFor2.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & cJSONForecast["forecast"]["txt_forecast"]["forecastday"][iCnt]["icon"] & ".gif"))
        Case 3
          PicFor3.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & cJSONForecast["forecast"]["txt_forecast"]["forecastday"][iCnt]["icon"] & ".gif"))
        Case 4
          PicFor4.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & cJSONForecast["forecast"]["txt_forecast"]["forecastday"][iCnt]["icon"] & ".gif"))
      End Select
      If Main.sTemperature = "°C" Then
        Main.SetTextProperty("TextArea" & CStr(iCnt), cJSONForecast["forecast"]["txt_forecast"]["forecastday"][iCnt]["fcttext_metric"], FWeatherUnderground.Frame3)
      Else
        Main.SetTextProperty("TextArea" & CStr(iCnt), cJSONForecast["forecast"]["txt_forecast"]["forecastday"][iCnt]["fcttext"], FWeatherUnderground.Frame3)
      Endif
    Next
  Endif

  ' 3 day forecast
  If cJSONForecast["forecast"]["simpleforecast"]["forecastday"].Count = 4
    For iCnt = 0 To 3
      Main.SetTextProperty("TextDay" & CStr(iCnt), cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["date"]["weekday"], FWeatherUnderground.Frame5)
      Main.SetTextProperty("LblCondition" & CStr(iCnt), cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["conditions"], FWeatherUnderground.Frame5)
      Select Case iCnt
        Case 0
          Pic1.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["icon"] & ".gif"))
        Case 1
          Pic2.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["icon"] & ".gif"))
        Case 2
          Pic3.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["icon"] & ".gif"))
        Case 3
          Pic4.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["icon"] & ".gif"))
       End Select
      If Main.sTemperature = "°C" Then
        Main.SetTextProperty("LblTempHigh" & CStr(iCnt), ("High:") & " " & cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["low"]["celsius"] & "°C", FWeatherUnderground.Frame5)
        Main.SetTextProperty("LblTempLow" & CStr(iCnt), ("Low:") & " " & cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["low"]["celsius"] & " °C", FWeatherUnderground.Frame5)
      Else
        Main.SetTextProperty("LblTempHigh" & CStr(iCnt), ("High:") & " " & cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["low"]["fahrenheit"] & "°F", FWeatherUnderground.Frame5)
        Main.SetTextProperty("LblTempLow" & CStr(iCnt), ("Low:") & " " & cJSONForecast["forecast"]["simpleforecast"]["forecastday"][iCnt]["low"]["fahrenheit"] & " °F", FWeatherUnderground.Frame5) 'Main.SetTextProperty("TextArea" & CStr(iCnt), cJSONForecast["forecast"]["txt_forecast"]["forecastday"][iCnt]["fcttext"], FWeatherUnderground.Frame3)
      Endif
    Next
  Endif

Catch
  Main.WriteLog("[WUnderground] ERROR: InitForeCast: " & Error.Text & " at " & Error.Where)
  
End

'--- initialises the "live weather" panel ---
Private Sub InitLiveWeather()

  Dim aWind As String[]
  Dim bError As Boolean
  Dim rResult As Result

  If bError = False Then
    rResult = Main.hDB.Exec("SELECT * FROM weather ORDER BY id DESC limit 1")
    If Not rResult Then
      Main.WriteLog(("Error: table 'Weather' not found!"))
      Return
    Endif

    If rResult.Available Then
      If rResult.Count = 1 Then
        TxtWindDir.Text = WeatherUG.WindDirString(rResult!wind_dir)
        TxtTemp.Text = rResult!temp & Main.sTemperature

        aWind = Split(rResult!wind, ";")
        If aWind.Count = 4 Then
          TxtWindMph.Text = IIf(Main.sTemperature = "°C", aWind[0] & " km/u", aWind[3] & " mph")
          TxtWindMs.Text = aWind[1] & " m/sec"
          TxtWindBeaufort.Text = aWind[2] & " Bft"
        Endif

        TxtRelativeHumidity.Text = rResult!relative_humidity
        TxtPressureMb.Text = rResult!pressure & IIf(Main.sTemperature = "°C", " mb", " in")
        TxtHeatIndexC.Text = rResult!heat_index & Main.sTemperature
        TxtWindchill.Text = rResult!windchill & Main.sTemperature
        TxtDewpoint.Text = rResult!dewpoint & Main.sTemperature
        TxtWindDegrees.Text = rResult!wind_degrees

        Try PicCurrentWeather.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://icons.wxug.com/i/c/i/" & rResult!icon & ".gif"))

        aWind = Split(rResult!wind_gust, ";")
        If aWind.Count = 4 Then
          TxtWindGustMph.Text = IIf(Main.sTemperature = "°C", aWind[0] & " km/u", aWind[3] & " mph")
          TxtWindGustMs.Text = aWind[1] & " m/sec"
          TxtWindGustBeaufort.Text = aWind[2] & " Bft"
        Endif

        Try PicWindDir.Picture = Picture.Load(XMLParser.ReturnWindDirectionPic(rResult!wind_dir))

        TxtVisibilityKm.Text = rResult!visibility & IIf(Main.sTemperature = "°C", " km", " mi")
        TxtPrecip1hrMetric.Text = Trim(rResult!precip_1hr) & IIf(Main.sTemperature = "°C", " mm", " in")
        TxtPrecipTodayMetric.Text = rResult!precip_today & IIf(Main.sTemperature = "°C", " mm", " in")
        TxtWeather.Text = rResult!weather
        TxtStationLocation.Text = rResult!city & ", " & rResult!country
        TxtTimeUpdate.Text = rResult!time
        TxtPercentIlluminated.Text = rResult!percentilluminated & "%"
        TxtAgeOfMoon.Text = rResult!ageofmoon & " " & ("days")
      Endif
    Endif
  Else
    Balloon(("No weatherdata found!"))
  Endif

End

Public Sub tWeatherRefresh_Timer()

  InitLiveWeather()
  InitForeCast()

End
