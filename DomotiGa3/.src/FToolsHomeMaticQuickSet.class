' Gambas class file

' Description:
' FToolsCULCmdr.class
' Allows injection of a packet to test CUL module parser.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Credits:
' JvdK.

' Read file called COPYING for license details.

PRIVATE sValue AS Integer
PRIVATE sDevice AS String
PRIVATE iDeviceId AS Integer

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)
  LoadDevices()
  spbTemp.Hide
  LCDNumber1.Hide

END

PUBLIC SUB Run() AS Boolean

  RETURN NOT ME.ShowModal()

END

PUBLIC SUB btnCancel_Click()

  ME.Close

END

PUBLIC SUB spbTemp_Change()

  sValue = spbTemp.Value
  LCDNumber1.Value = spbTemp.Value / 2

END

PUBLIC SUB btnSend_Click()

  IF Main.hHM THEN Main.hHM.Sendcommand(iDeviceId, cmbCommand.Text & " " & Str$(LCDNumber1.Value))

END

PUBLIC SUB cmbDevices_Click()

  DIM rResult AS Result

  cmbCommand.Clear
  cmbCommand.Refresh

  TRY rResult = Main.hDB.Exec("SELECT id FROM devices WHERE name = &1", cmbDevices.Text)
  IF rResult.Available THEN
  '  Get the id for this device
    iDeviceId = rResult!id      ' get the device id and store it for the command
    LoadCommands(iDeviceId)     ' load the supported commands
  ELSE
    txtModel.Text = ""
    spbTemp.Hide
    LCDNumber1.Hide
  ENDIF

END

PUBLIC SUB LoadDevices()

  DIM rResultDevices AS Result

  rResultDevices = Main.hDB.Exec("SELECT name FROM devices WHERE interface = 36 AND enabled <> 0 ORDER BY name")
  'add them to the dropdown
  IF NOT ERROR THEN
    IF rResultDevices.Count > 0 THEN
      FOR EACH rResultDevices
        cmbDevices.Add(rResultDevices!name)
      NEXT
      cmbDevices.Add("Select Device", 0)
    ELSE
      Message(("No enabled devices found!"))
    ENDIF
  ENDIF

END

' load the allowed and supported commandset for this device, prefill with current value
PUBLIC SUB LoadCommands(iDeviceID AS Integer)

  DIM rResultHomeMaticInfo AS Result

  rResultHomeMaticInfo = Main.hDB.Exec("SELECT type, commands FROM devicetypes_homematic WHERE moduleref = &1", Devices.FindModuleForDevice(iDeviceId))
  cmbCommand.List = Split(rResultHomeMaticInfo!commands)
  cmbCommand.Add("Select Command", 0)
  txtModel.text = rResultHomeMaticInfo!type
  IF txtModel.text = "HM_CC_TC" THEN
    spbTemp.Show
    LCDNumber1.Show
    spbTemp.Value = (Devices.GetValueForDevice(cmbDevices.Text, "1") * 2) ' thermostat specific
  ENDIF

CATCH

END
