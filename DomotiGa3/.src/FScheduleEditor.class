' Gambas class file

' Description:
' FScenarioEditor.class
' Support for creating and editing of all thermostat constants.

' Development Status:
' Works for 99%.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public rResultScenarii As Result
Public rResultHeatings As Result
Public bAddSchedule As Boolean
Public TimeValue As String[] = ["00:00", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00", "03:30", "04:00", "04:30", "05:00", "05:30", "06:00", "06:30", "07:00", "07:30", "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30"]
Public nbCol As Integer = 48
Private rResult As Result
Private nbRow As Integer = 7
Private currentColor As Integer = &H00FFFFFF&
Private currentId As Integer = 0
Private tvPlanning As TableView

Public Sub Form_Open()

  If bAddSchedule Then
    Me.Text = ("Create Schedule")
    btnDelete.Visible = False
  Endif

  Me.Move(FMain.X + 50, FMain.Y + 70)

  GetScenarii()
  GetHeatings()
  GetContants()

  tvPlanning = tvPlanning1
  TabPanel1.Index = 0
  LoadSchedule()
  If bAddSchedule Then Select_Table(True)
  tvPlanning = tvPlanning2
  TabPanel1.Index = 1
  LoadSchedule()
  If bAddSchedule Then Select_Table(True)
  TabPanel1.Index = 0

End

Public Sub LoadSchedule()

  Dim i As Integer
  Dim rResultDetail As Result

  With tvPlanning
    .Font.Size = "9"
    .Columns.Count = nbCol + 1
    For i = 0 To nbCol
      .Columns[i].Title = " "
      If (i Mod 2 = 0) Then
        .Columns[i].Width = 11
        .Columns[i].Alignment = Align.Center
      Else
        .Columns[i].Width = 10
        .Columns[i].Alignment = Align.Center
      Endif
    Next
    .Rows.Count = nbRow
    .Rows[0].Title = "Sun."
    .Rows[1].Title = "Mon."
    .Rows[2].Title = "Tue."
    .Rows[3].Title = "Wed."
    .Rows[4].Title = "Thu."
    .Rows[5].Title = "Fri."
    .Rows[6].Title = "Sat."
    .Rows.Width = 48
  End With

  If Not bAddSchedule Then
    ' get selected event values
    Try rResult = Main.hDB.Exec("SELECT * FROM thermostat_schedule WHERE scenario_id=&1 AND heating_id=&2", FThermostat.txtCurTherm, FThermostat.txtCurThermAux)
    If Not Error Then
      If rResult.Count >= 1 Then
        cmbScenario.Text = GetScenarioName(rResult!scenario_id)
        cmbHeating.Text = GetHeatingName(rResult!heating_id)
        txtDescription.Text = rResult!description
      Else
        Message(("Couldn't load schedule record!"))
        Try Me.Close
      Endif
    Endif

    rResultDetail = Main.hDB.Exec("SELECT * FROM thermostat_schedule_entry WHERE scenario_id=&1 and heating_id=&2 and secondary=&3 ORDER BY day, time", FThermostat.txtCurTherm, FThermostat.txtCurThermAux, TabPanel1.index)
    i = 0
    If rResultDetail Then
      If rResultDetail.Count Then
        For Each rResultDetail
          tvPlanning[rResultDetail!day - 1, i].Text = rResultDetail!constant_id
          tvPlanning[rResultDetail!day - 1, i].Background = GetConstantColor(rResultDetail!constant_id)

          If i = nbCol - 1 Then
            i = 0
          Else
            Inc i
          Endif
        Next
      Else
        Select_Table(True)
      Endif
    Else
      Message.Error("Couldn't find thermostat_schedule_entry table!")
    Endif
  Endif

End

Public Sub GetConstantColor(iId As Integer) As Integer

  Dim rResultCst As Result

  rResultCst = Main.hDB.Exec("SELECT color FROM thermostat_constant WHERE id=&1", iId)
  If rResultCst Then
      If rResultCst.Count >= 1 Then
        Return rResultCst!color
      Endif
  Endif

  ' Return white if we can't find a color
  Return &HFFFFFF

End

Public Sub GetScenarioName(iId As Integer) As String

  Dim rResultScen As Result

  rResultScen = Main.hDB.Exec("SELECT name FROM thermostat_scenarii WHERE id = &1", iId)
  Try Return rResultScen!name

End

Public Sub GetHeatingName(iId As Integer) As String

  Dim rResultHeat As Result

  rResultHeat = Main.hDB.Exec("SELECT name FROM thermostat_heating WHERE id = &1", iId)
  Try Return rResultHeat!name

End

Public Sub ConstantToogleButton_Click()

  currentColor = Last.Background
  currentId = Last.Tag
  txtConstant.Text = Last.ToolTip & "(" & Last.text & ")"

End

Public Sub btnCancel_Click()

  bAddSchedule = False
  Me.Close

End

Public Sub btnDelete_Click()

  Select Message.Question(("Are you sure that you want to delete this schedule ?"), ("Yes"), ("No"))
    Case 1
      Main.hDB.Exec("DELETE FROM thermostat_schedule WHERE scenario_id=&1 and heating_id=&2", rResult!scenario_id, rResult!heating_id)
      Main.hDB.Exec("DELETE FROM thermostat_schedule_entry WHERE scenario_id=&1 and heating_id=&2", rResult!scenario_id, rResult!heating_id)
      Me.Close
      FThermostat.GetThermList()
  End Select

End

Public Sub btnNew_Click()

  bAddSchedule = True
  btnSave_Click()

End

Public Sub btnSave_Click()

  Dim iRow, iCol As Integer
  Dim rResultUpdate, rResultAddMod As Result
  Dim sSql As String
  Dim bSecondary As Boolean

  If Not cmbScenario.Text Then
    Balloon(("Please select a scenario for this schedule !"), cmbScenario)
    Return
  Endif

  If Not cmbHeating.Text Then
    Balloon(("Please select a heating for this schedule !"), cmbHeating)
    Return
  Endif

  If GetScenarioId(cmbScenario.Text) = 0 Then
    Balloon(("Please select a valid scenario for this schedule !"), cmbScenario)
    Return
  Endif

  If GetHeatingId(cmbHeating.Text) = 0 Then
    Balloon(("Please select a valid heating for this schedule !"), cmbHeating)
    Return
  Endif

  If bAddSchedule Then

    ' Before we add - check if it already exists
    rResultAddMod = Main.hDB.Exec("SELECT * FROM thermostat_schedule WHERE scenario_id=&1 and heating_id=&2", GetScenarioId(cmbScenario.Text), GetHeatingId(cmbHeating.Text))

    ' Don't try an insert 
    If rResultAddMod.Count > 0 Then
      Balloon("Scenario/Heating already exists in the database", cmbScenario)
      Return
    Endif

    ' create new scenario row
    sSql = "INSERT INTO thermostat_schedule SET scenario_id=&1, heating_id=&2, description=&3"
    rResultUpdate = Main.hDB.Exec(sSql, GetScenarioId(cmbScenario.Text), GetHeatingId(cmbHeating.Text), txtDescription.Text)
  Else
    ' Check if the scenario/heating name has changed
    If ((GetScenarioId(cmbScenario.Text) <> rResult!scenario_id) Or (GetHeatingId(cmbHeating.Text) <> rResult!heating_id)) Then
      rResultAddMod = Main.hDB.Exec("SELECT * FROM thermostat_schedule WHERE scenario_id=&1 AND heating_id=&2", GetScenarioId(cmbScenario.Text), GetHeatingId(cmbHeating.Text))

      ' Don't try an update
      If rResultAddMod.Count > 0 Then
        Balloon("Scenario/Heating already exists in the database", cmbScenario)
        Return
      Endif
    Endif

    ' update new event details
    sSql = "UPDATE thermostat_schedule SET scenario_id=&1, heating_id=&2, description=&3 WHERE scenario_id=&4 AND heating_id=&5"
    rResultUpdate = Main.hDB.Exec(sSql, GetScenarioId(cmbScenario.Text), GetHeatingId(cmbHeating.Text), txtDescription.Text, rResult!scenario_id, rResult!heating_id)

    ' remove entries
    sSql = "DELETE FROM thermostat_schedule_entry WHERE scenario_id=&1 AND heating_id=&2"
    rResultUpdate = Main.hDB.Exec(sSql, rResult!scenario_id, rResult!heating_id)
  Endif

  ' add new entries
  tvPlanning = tvPlanning1
  bSecondary = False
  sSql = "INSERT INTO thermostat_schedule_entry SET scenario_id=&1, heating_id=&2, day=&3, time=&4, constant_id=&5, secondary=&6"
  With tvPlanning
    For iCol = 0 To nbCol - 1
      For iRow = 0 To nbRow - 1
        Try rResultUpdate = Main.hDB.Exec(sSql, GetScenarioId(cmbScenario.Text), GetHeatingId(cmbHeating.Text), iRow + 1, TimeValue[iCol], tvPlanning[iRow, iCol].Text, bSecondary)
      Next
    Next
  End With
  tvPlanning = tvPlanning2
  bSecondary = True
  With tvPlanning
    For iCol = 0 To nbCol - 1
      For iRow = 0 To nbRow - 1
        Try rResultUpdate = Main.hDB.Exec(sSql, GetScenarioId(cmbScenario.Text), GetHeatingId(cmbHeating.Text), iRow + 1, TimeValue[iCol], tvPlanning[iRow, iCol].Text, bSecondary)
      Next
    Next
  End With

  FThermostat.GetThermList()
  bAddSchedule = False
  Me.Close

' Catch
'   Message.Error(Error.Text & " at " & Error.Where)

End

Public Sub GetHeatingId(sName As String) As Integer

  Dim rResultHeatName As Result

  rResultHeatName = Main.hDB.Exec("SELECT id FROM thermostat_heating WHERE name = &1", sName)
  If rResultHeatName Then
    If rResultHeatName.Count >= 1 Then
      Return rResultHeatName!id
    Endif
  Endif
  Return 0

End

Public Sub GetScenarioId(sName As String) As Integer

  Dim rResultScenName As Result

  rResultScenName = Main.hDB.Exec("SELECT id FROM thermostat_scenarii WHERE name = &1", sName)
  If rResultScenName Then
    If rResultScenName.Count >= 1 Then
      Return rResultScenName!id
    Endif
  Endif
  Return 0

End

Public Sub tvPlanning_ColumnClick(Column As Integer)

  Select_Column(Column, True)

End

Public Sub tvPlanning_RowClick(Row As Integer)

 Select_Row(Row, True)

End

Public Sub btnHour_Click()

  Select_Hour(Last.Tag)

End

Public Sub Select_Hour(iHour As Integer)

  Select_Column(ihour * 2, True)
  Select_Column(ihour * 2 + 1, True)

End

Public Sub Select_Table(bSelected As Boolean)

  Dim iRow As Integer

  For iRow = 0 To nbRow - 1
    Select_Row(iRow, bSelected)
  Next

End

Public Sub Select_Column(Column As Integer, bSelected As Boolean)

  Dim iRow As Integer

  For iRow = 0 To nbRow - 1
    Select_Cell(iRow, Column, bSelected)
  Next

End

Public Sub Select_Row(Row As Integer, bSelected As Boolean)

  Dim iCol As Integer

  For iCol = 0 To nbCol - 1
    Select_Cell(Row, iCol, bSelected)
  Next

End

Public Sub Select_Cell(Row As Integer, Column As Integer, bSelected As Boolean)

  If bSelected Then
    tvPlanning[Row, Column].Background = currentColor
    tvPlanning[Row, Column].Text = currentId
  Endif

  btnSave.Enabled = True

End

Public Sub tvPlanning_MouseUp()

  Dim iRow, iCol As Integer

  If Mouse.X <= 49 And Mouse.Y <= 22 Then
    Select_Table(True)
  Endif

  If Mouse.X > 49 And Mouse.Y > 22 Then
    iCol = Fix((Mouse.X - 49) / 10.5)
    iCol = Min(iCol, nbCol - 1)
    iRow = (Mouse.Y - 22) \ 20
    iRow = Min(iRow, nbRow - 1)
    Select_Table(False)
    Select_Cell(iRow, iCol, True)
  Endif

End

Public Sub GetScenarii()

  ' fill combos with available triggers
  Try rResultScenarii = Main.hDB.Exec("SELECT * FROM thermostat_scenarii")
  cmbScenario.Clear
  cmbScenario.Add("")
  If rResultScenarii Then
    If (rResultScenarii.Count >= 1) Then
      For Each rResultScenarii
        cmbScenario.Add(rResultScenarii!name)
      Next
    Endif
  Else
    Message(("No thermostat_scenarii database table found!"))
  Endif

End

Public Sub GetHeatings()

  cmbHeating.Clear
  cmbHeating.Add("")
  rResultHeatings = Main.hDB.Exec("SELECT * FROM thermostat_heating ORDER BY name")
  If rResultHeatings Then
    If rResultHeatings.Count Then
      For Each rResultHeatings
        cmbHeating.Add(rResultHeatings!name)
      Next
    Endif
  Else
    Message.Info(("Error: couldn't find thermostat_heating table!"))
    Return
  Endif

End

Public Sub GetContants()

  Dim hBtn As ToggleButton
  Dim rConstant As Result
  Dim icount As Integer

  Try rConstant = Main.hDB.Exec("SELECT * FROM thermostat_constant order by value desc")
  If Not Error Then
    For iCount = 0 To rConstant.Count - 1
      hBtn = New ToggleButton(hbxConstant) As "ConstantToogleButton"
      With hBtn
        .Name = rConstant!id
        .Text = rConstant!value
        .ToolTip = rConstant!name
        .Background = rConstant!color
        .Height = 42
        .Width = 77
        .Radio = True
        .Tag = rConstant!id
        'currentColor = .Background
        'currentId = .Tag
        txtConstant.Text = .ToolTip & "(" & .text & ")"
      End With
      rConstant.MoveNext
    Next
  Else
    Message(("Couldn't load constants!"))
    Me.Close
  Endif

End

Public Sub cmbScenario_Click()

  btnSave.Enabled = True

End

Public Sub cmbHeating_Click()

  btnSave.Enabled = True

End

Public Sub txtDescription_KeyPress()

  btnSave.Enabled = True

End

Public Sub ConstantToogleButton_DblClick()

  FThermostat.txtCurTherm = Last.Name
  FConstantEditor.Show()

End

Public Sub TabPanel1_Click()

  If TabPanel1.Index = 0 Then
    tvPlanning = tvPlanning1
  Else
    tvPlanning = tvPlanning2  
  Endif

End
