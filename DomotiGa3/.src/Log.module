' Gambas module file

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' "WriteLog" the possible TCP Error
' http://gambasdoc.org/help/comp/gb.net/net?en&v3
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Plugin_TCP_Error(sLogLabel As String, sTCPHost As String, iStatus As Integer)

  Dim sMsg As String

  ' handle error
  Select Case iStatus
    Case Net.CannotCreateSocket
      sMsg = "The system does not allow to create a socket."
    Case Net.HostNotFound
      sMsg = "Host '" & sTCPHost & "' not found."
    Case Net.CannotRead
      sMsg = "Error reading data."
    Case Net.CannotWrite
      sMsg = "Error writing data."
    Case Net.ConnectionRefused
      sMsg = "Unable to connect. Connection refused."
    Default
      sMsg = "Unknown (" & iStatus & ")"
  End Select

  Main.WriteLog(sLogLabel & "ERROR: " & sMsg)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' "WriteLog" the possible TCP Error
' http://gambasdoc.org/help/comp/gb.net.curl/net?en&v3
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Plugin_CURL_Error(sLogLabel As String, sTCPHost As String, iStatus As Integer)

  Dim sMsg As String

  ' handle error
  Select Case iStatus
    Case Net.AbortedByCallback
      sMsg = "Aborted by callback."
    Case Net.ReadError
      sMsg = "Error reading data."
    Case Net.UnableToConnect
      sMsg = "Unable to connect to host."
    Case Net.UnableToResolveHost
      sMsg = "Host '" & sTCPHost & "' not found."
    Case Net.WriteError
      sMsg = "Error writing data."
    Default
      sMsg = "Unknown (" & iStatus & ")"
  End Select

  Main.WriteLog(sLogLabel & "ERROR: " & sMsg)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' "WriteDebugLog" the DNS resolving "<name>_Found"
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Plugin_DNS_Found(sLogLabel As String, sHost As String)

  ' Only print if it isn't an IP v4 address
  If Not Net.Format(sHost) Then
    Main.WriteDebugLog(sLogLabel, "Hostname '" & sHost & "' resolved.")
  Endif

End

