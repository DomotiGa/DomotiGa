' Gambas module file

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' "WriteLog" the possible TCP Error
' http://gambasdoc.org/help/comp/gb.net/net?en&v3
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Plugin_TCP_Error(sLogLabel As String, sTCPHost As String, iStatus As Integer)

  Dim sMsg As String

  ' handle error
  Select Case iStatus
    Case Net.CannotCreateSocket
      sMsg = "The system does not allow to create a socket."
    Case Net.HostNotFound
      sMsg = "Host '" & sTCPHost & "' not found."
    Case Net.CannotRead
      sMsg = "Error reading data."
    Case Net.CannotWrite
      sMsg = "Error writing data."
    Case Net.ConnectionRefused
      sMsg = "Unable to connect. Connection refused."
    Default
      sMsg = "Unknown (" & iStatus & ")"
  End Select

  Main.WriteLog(sLogLabel & "ERROR: " & sMsg)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' "WriteLog" the possible TCP Error
' http://gambasdoc.org/help/comp/gb.net/net?en&v3
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Text_TCP_Error(iStatus As Integer, sTCPHost As String) As String

  ' handle error
  Select Case iStatus
    Case Net.CannotCreateSocket
      Return "The system does not allow to create a socket."
    Case Net.HostNotFound
      Return "Host '" & sTCPHost & "' not found."
    Case Net.CannotRead
      Return "Error reading data."
    Case Net.CannotWrite
      Return "Error writing data."
    Case Net.ConnectionRefused
      Return "Unable to connect. Connection refused."
    Default
      Return "Unknown (" & iStatus & ")"
  End Select

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' "WriteLog" the possible CURL Error
' http://gambasdoc.org/help/comp/gb.net.curl/net?en&v3
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Plugin_CURL_Error(sLogLabel As String, sTCPHost As String, iStatus As Integer)

  Dim sMsg As String

  ' Get full error description, format:
  ' <text> (iStatus)
  sMsg = CURL_Error_To_Text(iStatus, sTCPHost)

  Main.WriteLog(sLogLabel & "ERROR: " & sMsg & ".")

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' "WriteLog" the DNS resolving "<name>_Found"
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Plugin_DNS_Found(sLogLabel As String, sHost As String)

  ' Only print if it isn't an IP v4 address
  If Not Net.Format(sHost, Net.IPv4) Then Main.WriteLog(sLogLabel & "IP address for hostname '" & sHost & "' resolved.")

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Map CURL error code to text
' http://curl.haxx.se/libcurl/c/libcurl-errors.html
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub CURL_Error_To_Text(iStatus As Integer, Optional sHostName As String) As String

  Dim sMsg As String

  Select iStatus
    Case Net.AbortedByCallback
      sMsg = "Aborted by Callback"
    Case Net.Asynchronous
      sMsg = "Asynchronous"
    Case Net.AuthAny
      sMsg = "Auth Any"
    Case Net.AuthAnySafe
      sMsg = "Auth Any Safe"
    Case Net.AuthBasic
      sMsg = "Auth Basic"
    Case Net.AuthDigest
      sMsg = "Auth Digest"
    Case Net.AuthDigestIE
      sMsg = "Auth Digest IE"
    Case Net.AuthGssNegotiate
      sMsg = "Auth Gss Negotiate"
    Case Net.AuthNone
      sMsg = "Auth None"
    Case Net.AuthNtlm
      sMsg = "Auth Ntlm"
    Case Net.AuthNtlmWb
      sMsg = "Auth Ntlm Wb"
    Case Net.BadContentEncoding
      sMsg = "Bad Content Encoding"
    Case Net.BadDownloadResume
      sMsg = "Bad Download Resume"
    Case Net.BadFunctionArgument
      sMsg = "Bad Function Argument"
    Case Net.ChunkFailed
      sMsg = "Chunk Failed"
    Case Net.ConvFailed
      sMsg = "Conv Failed"
    Case Net.ConvRequired
      sMsg = "Conv Required"
    Case Net.FTPBadFileList
      sMsg = "FTP Bad File List"
    Case Net.FTPPortFailed
      sMsg = "FTP Port Failed"
    Case Net.FTPPretFailed
      sMsg = "FTP Pret Failed"
    Case Net.FTPUnableToGetHost
      sMsg = "FTP Unable to Get Host"
    Case Net.FTPUnableToRETRFile
      sMsg = "FTP Unable to RETR File"
    Case Net.FTPUnableToSetType
      sMsg = "FTP Usable to Set Type"
    Case Net.FTPUnableToUseRest
      sMsg = "FTP Uanble to Use Rest"
    Case Net.FTPWeird227Format
      sMsg = "FTP Weird 227 Format"
    Case Net.FTPWeirdPassReply
      sMsg = "FTP Weird Pass Reply"
    Case Net.FTPWeirdPasvReply
      sMsg = "FTP Weird Pasv Reply"
    Case Net.FTPWeirdServerReply
      sMsg = "FTP Weird Server Reply"
    Case Net.FailedInit
      sMsg = "Failed Init"
    Case Net.FileSizeExceeded
      sMsg = "FileSize Exceeded"
    Case Net.FunctionNotFound
      sMsg = "Function Not Found"
    Case Net.GotNothing
      sMsg = "Got Nothing"
    Case Net.HTTPPostError
      sMsg = "HTTP Post Error"
    Case Net.HttpReturnedError
      sMsg = "HTTP Returned Error"
    Case Net.InterfaceFailed
      sMsg = "Interface Failed"
    Case Net.LoginDenied
      sMsg = "Login Denied"
    Case Net.OperationTimeout
      sMsg = "Operation Timeout"
    Case Net.OutOfMemory
      sMsg = "Out Of Memory"
    Case Net.PartialFile
      sMsg = "Partial File"
    Case Net.PeerFailedVerification
      sMsg = "Peer Failed Verification"
    Case Net.ProxyHTTP
      sMsg = "Proxy HTTP"
    Case Net.ProxySocks5
      sMsg = "Proxy Sock5"
    Case Net.QuoteError
      sMsg = "Quote Error"
    Case Net.RangeError
      sMsg = "Range Error"
    Case Net.ReadError
      sMsg = "Read Error"
    Case Net.RecvError
      sMsg = "Recv Error"
    Case Net.RemoteAccessDenied
      sMsg = "Remote Access Denied"
    Case Net.RemoteDiskFull
      sMsg = "Remote Disk Full"
    Case Net.RemoteFileExists
      sMsg = "Remote File Exists"
    Case Net.RemoteFileNotFound
      sMsg = "Remote File Not Found"
    Case Net.SSLCacert
      sMsg = "SSL Cacert"
    Case Net.SSLCacertBadFile
      sMsg = "SSL Cacert Badfile"
    Case Net.SSLCertProblem
      sMsg = "SSL Cert Problem"
    Case Net.SSLCipher
      sMsg = "SSL Cipher"
    Case Net.SSLConnectError
      sMsg = "SSL Connect Error"
    Case Net.SSLCrlBadfile
      sMsg = "SSL Crl Badfile"
    Case Net.SSLEngineInitFailed
      sMsg = "SSL Engine Init Failed"
    Case Net.SSLEngineNotFound
      sMsg = "SSL Engine Not Failed"
    Case Net.SSLEngineSetFailed
      sMsg = "SSL Engine Set Failed"
    Case Net.SSLIssuerError
      sMsg = "SSL Issuer Error"
    Case Net.SSLShutdownFailed
      sMsg = "SSL Shutdown Failed"
    Case Net.SendError
      sMsg = "Send Error"
    Case Net.SendFailRewind
      sMsg = "Sned Fail Rewind"
    Case Net.Synchronous
      sMsg = "Synchronous"
    Case Net.TooManyRedirects
      sMsg = "Too Many Redirects"
    Case Net.URLMalformat
      sMsg = "URL Malformat"
    Case Net.UnableToConnect
      If sHostName Then
        sMsg = "Unable to Connect to Host '" & sHostName & "'"
      Else
        sMsg = "Unable to Connect to Host"
      Endif
    Case Net.UnableToResolveHost
      If sHostName Then
        sMsg = "Unable to Resolve Host '" & sHostName & "'"
      Else
        sMsg = "Unable to Resolve Host"
      Endif
    Case Net.UnableToResolveProxy
      sMsg = "Unable to Resolve Proxy"
    Case Net.UnsupportedProtocol
      sMsg = "Unsupported Protocol"
    Case Net.UploadFailed
      sMsg = "Upload Failed"
    Case Net.WriteError
      sMsg = "Write Error"
    Default
      sMsg = "Unknown"
  End Select

  sMsg &= " (" & iStatus & ")"
  Return sMsg

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Map HTTP error code to text
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub HTTP_Error_To_Text(iCode As Integer) As String

  Dim sMsg As String

  Select iCode
    Case 400
      sMsg = "Bad Request"
    Case 405
      sMsg = "Method Not Allowed"
    Case 406
      sMsg = "Not Acceptable"
    Case 408
      sMsg = "Request Timed Out"
    Case 411
      sMsg = "Length Required"
    Case 413
      sMsg = "Request Entity Too Large"
    Case 415
      sMsg = "Unsupported Media Type"
    Case 500
      sMsg = "Internal Server Error"
    Case 505
      sMsg = "HTTP Version Not Supported"
    Default
      sMsg = ""
  End Select

  Return iCode & " - " & sMsg

End

