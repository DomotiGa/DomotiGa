' Gambas class file

' Description:
' FThermostat.class
' Thermostat management functions.

' Development Status:
' Beta.

' Credits: This module is build by Francois.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Private Profiles As New Collection
Private Thermostat As New Collection
Private ThermostatGlobalVar As New String[]

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)
  txtRenameBox.Hide()

  LoadSchedule()
  With lcThermostat
    .Header = GridView.Horizontal
    .Columns.Count = 8
    .Rows.Count = 1
    .Font.Size = "8"
    .Columns.Width = 100
    .Columns[0].Title = ("Control point")
    .Columns[0].Width = 80
    .Columns[1].Title = ("Monday")
    .Columns[2].Title = ("Tuesday")
    .Columns[3].Title = ("Wednesday")
    .Columns[4].Title = ("Thursday")
    .Columns[5].Title = ("Friday")
    .Columns[6].Title = ("Saturday")
    .Columns[7].Title = ("Sunday")
  End With

  LoadProfiles()
  FillProfileMenu()
  LoadTable()

End

Private Sub LoadSchedule()

  Dim rResult As Result

  Try rResult = Main.hDB.Exec("SELECT * FROM thermostat")
  If rResult Then
    If rResult.Count Then
      For Each rResult
        Thermostat[rResult!name] = Split(rResult!profiles, "|")
        ThermostatGlobalVar.Add(rResult!name)
      Next
    Endif
  Endif

End

Private Sub LoadProfiles()

  Dim rResult As Result
  Dim sTemperatures As New String[24]
  Dim sVal As String
  Dim iCnt As Integer

  Profiles.Clear()
  Try rResult = Main.hDB.Exec("SELECT * FROM temperature_profile")
  If rResult Then
    If rResult.Count Then
      For Each rResult
        iCnt = 0
        Profiles[rResult!name] = New Integer[24]
        sTemperatures = Split(Trim(rResult!values), " ")
        For Each sVal In sTemperatures
          Profiles[rResult!name][iCnt] = CInt(sVal)
          Inc iCnt
        Next
      Next
      If Main.bMainDebug Then Main.WriteDebugLog(("[Main] Temperature profile restored."))
    Endif
  Endif

End

Private Sub FillProfileMenu()

  Dim aMenu As Menu

  For Each MenuProfiles.Children
    MenuProfiles.Children.Clear
  Next
  For Each Profiles
    aMenu = New Menu(MenuProfiles)
    aMenu.Text = Profiles.Key
    aMenu.Picture = FEditEventThermostatProfiles.GetProfilePicture(Profiles.Key)
    aMenu.Action = Profiles.Key
  Next

End

Private Sub LoadTable()

  Dim aList As String[]
  Dim iRow, iCol As Integer = 0
  Dim sVal As String

  lcThermostat.Clear()
  lcThermostat.Rows.Count = Thermostat.Count
  lcThermostat.Rows.Height = 27

  For Each alist In Thermostat
    iCol = 0
    lcThermostat[iRow, iCol].Text = Thermostat.Key
    For Each sVal In aList
      Inc iCol
      If Profiles.Exist(sVal) Then
        lcThermostat[iRow, iCol].Picture = FEditEventThermostatProfiles.GetProfilePicture(sVal)
        lcThermostat[iRow, iCol].Text = sVal
      Else
        lcThermostat[iRow, iCol].Text = "Not available"
        aList[iCol - 1] = "Not available"
      Endif
    Next
    Inc iRow
  Next

Catch

End

Public Sub btnSave_Click()

  Dim sVal, sGlobalvar, sProfile As String
  Dim aList As String[]
  Dim rResult As Result
  Dim tableProfiles As Table
  Dim iCnt As Integer

  ' check definition
  For Each aList In Thermostat
    For Each sProfile In aList
      If sProfile = "" Or sProfile = "Not available" Then
        Message("Thermostat '" & Thermostat.Key & "' definition is not complete!")
        Return
      Endif
    Next
  Next

  ' delete old globalvars
  For Each sVal In ThermostatGlobalVar
    Main.DelGlobalVar("Thermo_Profile_" & sVal)
    Main.DelGlobalVar("Thermo_Temp_" & sVal)
    Main.DelGlobalVar("Thermo_Control_" & sVal)
  Next

  ' delete complete history
  Try Main.hDB.Tables.Remove("thermostat")
  ' recreate new table
  tableProfiles = Main.hDB.Tables.Add("thermostat")
  tableProfiles.Fields.Add("id", db.Serial)
  tableProfiles.Fields.Add("name", db.String, 64)
  tableProfiles.Fields.Add("profiles", db.String, 0)
  tableProfiles.PrimaryKey = ["id"]
  tableProfiles.Update()

  For Each aList In Thermostat
    Main.hDB.Begin()
    rResult = Main.hDB.Create("thermostat")
    rResult!name = Thermostat.Key
    sVal = ""
    sGlobalvar = ""
    For Each sProfile In aList
      sVal &= sProfile & "|"
      For Each iCnt In Profiles[sProfile]
         If iCnt < 10 And iCnt > 0 Then
           sGlobalvar &= "0" & CStr(iCnt) & " "
         Else
           sGlobalvar &= CStr(iCnt) & " "
         Endif
      Next
    Next
    rResult!profiles = Mid(sVal, 1, -1)
    rResult.Update()
    Main.hDB.Commit()
    Main.SetGlobalVar("Thermo_Profile_" & Thermostat.Key, sGlobalvar, True)
    Main.SetGlobalVar("Thermo_Control_" & Thermostat.Key, "Profile", True)
  Next
  Me.Close()

End

Public Sub btnCancel_Click()

  Me.Close()

End

Public Sub btnAdd_Click()

  Dim sThermostat As String
  Dim iCnt As Integer
  Dim aN As New String[7]
  Dim iRow As Integer = lcThermostat.Rows.Count

  Do
    sThermostat = (lcThermostat.Rows.Count + iCnt)
    Inc iCnt
    Try Thermostat.Add(aN, sThermostat)
  Loop Until Error = False

  Inc lcThermostat.Rows.Count
  lcThermostat[iRow, 0].Text = sThermostat
  lcThermostat.Rows.Height = 27

End

Public Sub lcThermostat_Menu()

  If lcThermostat.Column > 0 Then MenuProfiles.Popup()

End

Public Sub Action_Activate(sKey As String) As Boolean

  lcThermostat.Current.Text = sKey
  lcThermostat.Current.Picture = FEditEventThermostatProfiles.GetProfilePicture(sKey)
  Thermostat[lcThermostat[lcThermostat.Row, 0].Text][lcThermostat.Column - 1] = sKey

End

Public Sub btnRemove_Click()

  If lcThermostat.Row > 0 Then
    If lcThermostat.Rows[lcThermostat.Row].Selected Then
      Thermostat.Remove(lcThermostat[lcThermostat.Row, 0].Text)
      lcThermostat.Rows.Remove(lcThermostat.Row)
    Endif
  Endif

End

Public Sub lcThermostat_Activate()

  If lcThermostat.Column = 0 Then
    txtRenameBox.X = lcThermostat.Current.X + lcThermostat.X
    txtRenameBox.Y = lcThermostat.Current.Y + lcThermostat.Y
    txtRenameBox.Text = lcThermostat[lcThermostat.Row, 0].Text
    txtRenameBox.Show()
    lcThermostat.Enabled = False
  Endif

End

Public Sub txtRenameBox_Activate()

  txtRenameBox.Hide()
  lcThermostat[lcThermostat.Row, 0].Text = txtRenameBox.Text
  RebuildThermostat()
  lcThermostat.Enabled = True

End

Public Sub RebuildThermostat()

  Dim iCnt As Integer

  Thermostat.Clear()
  For iCnt = 0 To lcThermostat.Rows.Count - 1
    Thermostat[lcThermostat[iCnt, 0].Text] = New String[7]
    Thermostat[lcThermostat[iCnt, 0].Text][0] = lcThermostat[iCnt, 1].Text
    Thermostat[lcThermostat[iCnt, 0].Text][1] = lcThermostat[iCnt, 2].Text
    Thermostat[lcThermostat[iCnt, 0].Text][2] = lcThermostat[iCnt, 3].Text
    Thermostat[lcThermostat[iCnt, 0].Text][3] = lcThermostat[iCnt, 4].Text
    Thermostat[lcThermostat[iCnt, 0].Text][4] = lcThermostat[iCnt, 5].Text
    Thermostat[lcThermostat[iCnt, 0].Text][5] = lcThermostat[iCnt, 6].Text
    Thermostat[lcThermostat[iCnt, 0].Text][6] = lcThermostat[iCnt, 7].Text
  Next

End

Public Sub btnEditProfiles_Click()

  FEditEventThermostatProfiles.ShowModal()
  LoadProfiles()
  FillProfileMenu()
  LoadTable()

End
