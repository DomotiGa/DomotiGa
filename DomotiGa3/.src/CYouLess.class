' Gambas class file

' Description:
' YouLess.class
' Provide support for fetching data from YouLess devices.

' Development Status:
' Just started to build this one.

' Links:
' http://wiki.td-er.nl/index.php?title=YouLess

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Property Polltime As Integer
Property YouLessDebug As Boolean
Private iPolltime As Integer
Private bYouLessDebug As Boolean
Private hYouLess As New HttpClient
Private tYouLess As Timer
Public cData As New Collection

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' start the poll timer
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Connect() As Boolean

  ' try to close the connection
  Try hYouLess.Close

  ' start poll timer for YouLess
  tYouLess = New Timer As "tYouLess"
  tYouLess.Delay = iPolltime * 1000 ' multiply for seconds
  tYouLess.Start

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("YouLess Error: ") & Error.Text & (" at ") & Error.Where)
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' disconnect from the host
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Disconnect() As Boolean

  ' stop timer and close handle
  Try tYouLess.Stop
  Try hYouLess.Close
  Main.WriteLog(("YouLess closed."))

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("YouLess Error: ") & Error.Text & (" at ") & Error.Where)
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' gets called at each timer event
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub tYouLess_Timer()

  FindDevices()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' find youless devices and fetch their data
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub FindDevices()

  Dim sUrl As String
  Dim rResult As Result

  rResult = Devices.FindDevicesForInterface(Devices.FindInterface("YouLess Interface"))
  If rResult.Available Then
    If rResult.Count Then
      If Main.bYouLessDebug Then Main.WriteDebugLog("[YouLess] " & rResult.Count & " device(s) found.")
      For Each rResult
        Try cData.Remove(rResult!address)
        sUrl = "http://" & rResult!address & "/a?f=j"
        hYouLess = New HttpClient As "hYouLess"
        hYouLess.URL = sUrl
        hYouLess.TimeOut = 8
        hYouLess.Tag = rResult!address
        hYouLess.Async = True
        hYouLess.Get()
        If Main.bYouLessDebug Then Main.WriteDebugLog("[YouLess] Fetching '" & sUrl & "'")
      Next
    Else
      Main.WriteDebugLog("[YouLess] No YouLess device(s) found.")
    Endif
  Else
    Main.WriteDebugLog("[YouLess] No YouLess device(s) found.")
  Endif

Catch
  Main.WriteDebugLog("[YouLess] Error fetching YouLess Device(s) " & ERROR.Text & " at " & ERROR.Where)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get youless data
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub hYouLess_Read()

  Dim sData, sBuffer As String

  If Lof(Last) Then sBuffer = Read #Last, Lof(Last)
  If cData[Last.Tag] Then
    sData = cData[Last.Tag] & sBuffer
  Else
    sData = sBuffer
  Endif
  cData[Last.Tag] = sData

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' youless data fetched
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub hYouLess_Finished()

  Dim sBuffer As String

  Select hYouLess.Code
    Case 200
      sBuffer = cData[Last.Tag]
      If Main.bYouLessDebug Then Main.WriteDebugLog(("[YouLess] Received '") & Replace(sBuffer, "\n", "") & ("' for device with address '") & Last.Tag & "'")
      ParseData(Last.Tag, sBuffer)
    Case Else
      Main.WriteDebugLog(("[YouLess] Unknown error occured while trying to get YouLess data for device with address '" & Last.Tag & "'!"))
  End Select
  Try hYouLess.Close

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' parse raw data
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub ParseData(sAddress As String, sData As String)

  Dim iDeviceId As Integer
  Dim cData As Collection
  Dim sCon, sPwr, sCnt As String

  cData = JSON.Decode(sData)
  sCnt = Replace(Trim(cData["cnt"]), ",", ".")
  sPwr = cData["pwr"]
  sCon = cData["con"]
  If Main.bYouLessDebug Then
    Main.WriteDebugLog("[YouLess] Device: " & sAddress)
    Main.WriteDebugLog("[YouLess] Counter: " & sCnt & " kWh")
    Main.WriteDebugLog("[YouLess] Usage: " & sPwr & " Watt")
    Main.WriteDebugLog("[YouLess] Status: " & sCon)
  Endif

  ' find device id
  iDeviceId = Devices.Find(sAddress, Devices.FindInterface("YouLess Interface"), "YOULESS")
  ' update device
  If iDeviceId Then
    Devices.ValueUpdate(iDeviceId, sCnt, sPwr, sCon, "")
  Endif

Catch
  Main.WriteDebugLog("[YouLess] Error parsing YouLess data " & Error.Text & (" at ") & Error.Where)

End

Public Sub hYouLess_Error()

  Main.WriteDebugLog(("[YouLess] Error fetching YouLess data: ") & hYouLess.Status)
  Try hYouLess.Close

End

' implement properties
Private Function Polltime_Read() As Integer

  Return iPolltime

End

Private Sub Polltime_Write(Value As Integer)

  iPolltime = Value

End

Private Function YouLessDebug_Read() As Boolean

  Return bYouLessDebug

End

Private Sub YouLessDebug_Write(Value As Boolean)

  bYouLessDebug = Value

End
