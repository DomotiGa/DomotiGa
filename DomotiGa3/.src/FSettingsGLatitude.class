' Gambas class file

' Description:
' FSettingsGLatitude.class
' Settings form for Google Latitude.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  txtPollTime.Text = Main.iGLatitudePolltime
  vbRange.Value = Main.iGLatitudeRange
  cmbRangeType.Index = Main.iGLatitudeRangeType
  chkDebug.Value = Main.bGLatitudeDebug
  chkEnabled.Value = Main.bGLatitudeEnabled

  If Main.bGLatitudeEnabled = False Then
    cmbRangeType.Enabled = False
    vbRange.Enabled = False
    txtPollTime.Enabled = False
    chkDebug.Enabled = False
  End If
  btnSave.Enabled = False

End

Public Sub txtPollTime_KeyPress()

  btnSave.Enabled = True

End

Public Sub vbRange_Change()

  btnSave.Enabled = True

End

Public Sub chkDebug_Click()

  btnSave.Enabled = True

End

Public Sub cmbRangeType_Click()

  btnSave.Enabled = True

End

Public Sub chkEnabled_Click()

  vbRange.Enabled = chkEnabled.Value
  cmbRangeType.Enabled = chkEnabled.Value
  txtPollTime.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value
  btnSave.Enabled = True

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub btnDefaults_Click()

  Dim rResult As Result

  rResult = Main.GetSettingTable("glatitude", True) ' get defaults
  If rResult.Count Then
    chkEnabled.Value = rResult!enabled
    vbRange.Value = rResult!rangevalue
    cmbRangeType.Index = rResult!rangetype
    txtPollTime.Text = rResult!polltime
    chkDebug.Value = rResult!debug
  End If
  btnSave.Enabled = True

End

Public Sub btnSave_Click()

  Dim rResult As Result

  ' save new GLatitude settings
  rResult = Main.hDB.Exec("UPDATE settings_glatitude SET debug = &1, enabled = &2, rangevalue = &3, rangetype = &4, polltime = &5 WHERE id = 1", chkDebug.Value, chkEnabled.Value, vbRange.Value, cmbRangeType.Index, txtPollTime.Text)
  rResult = Main.GetSettingTable("glatitude") ' reload settings
  If rResult.Count Then
    Main.bGLatitudeEnabled = rResult!enabled
    Main.iGLatitudeRange = rResult!rangevalue
    Main.iGLatitudeRangeType = rResult!rangetype
    Main.iGLatitudePolltime = rResult!polltime
    Main.bGLatitudeDebug = rResult!debug
  End If
  If Main.bServer Then
    Main.Restart_GLatitude()
  Else
    XMLClient.ModuleRestart("GLatitude")
  End If
  Me.Close

End

Public Sub btnBadges_Click()

  FEditUsers.Show

End

Public Sub btnMarkers_Click()

  FEditMarkers.Show

End
