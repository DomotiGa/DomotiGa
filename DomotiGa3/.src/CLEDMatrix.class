' Gambas class file

' Description:
' CLEDMatrix.class
' Display messages on a LED Matrix.

' Development Status:
' Just started. Tested with Conrad McCrypt AM03127 display.

' Links:
' http://www.conrad.nl/goto.php?artikel=590996

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Property Port As String
Property LEDMatrixDebug As Boolean
Property DisplayID As String
Property DisplayColor As Integer
Property DisplaySpeed As Integer

Private sPort As String
Private bLEDMatrixDebug As Boolean
Private sDisplayID As String
Private iDisplayColor As Integer
Private iDisplaySpeed As Integer

Public hLEDMatrix As New SerialPort

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' open serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Connect() As Boolean

  ' try to close the port
  Try hLEDMatrix.Close

  ' get a new one
  hLEDMatrix = New Serialport As "LEDMatrix"

  With hLEDMatrix
    .PortName = sPort
    .Speed = 9600
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .FlowControl = 0
    .Open()
  End With

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("LED Matrix Error: ") & ERROR.Text)
  Return False

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' display startup text
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Run() As Boolean

  ' DisplayMessage(sDisplayID, Application.Name & " Rocks!!")

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' display message
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub DisplayMessage(sId As String, sMessage As String, Optional iColor As Integer, Optional iSpeed As Integer)

  Dim sColor As String[] = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "P", "Q", "R", "S"]
  Dim sSpeed As String[] = ["q", "a", "Q", "A"]

  If Not iColor Then iColor = iDisplayColor
  If Not iSpeed Then iSpeed = iDisplaySpeed

  SendCommand(sId, "<L1><PA><FE><M" & sSpeed[iSpeed] & "><WC><FE><C" & sColor[iColor] & ">" & sMessage)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set real time clock
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub SetClock(sId As String)

  Dim sWeek As String

  Select Case LCase(Format(Now, "ddd"))
    Case "mon"
      sWeek = "01"
    Case "tue"
      sWeek = "02"
    Case "wed"
      sWeek = "03"
    Case "thu"
      sWeek = "04"
    Case "fri"
      sWeek = "05"
    Case "sat"
      sWeek = "06"
    Case "sun"
      sWeek = "07"
  End Select

  ' YYWWMMDDHHmmSS
  SendCommand(sId, "<SC>" & Format(Now, "yy") & sWeek & Format(Now, "mmddhhnnss"))

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' calculate checksum
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub CalcChecksum(sData As String) As String

  Dim iChecksum As Byte = Asc(Left(sData, 1))
  Dim iCnt As Integer

  For iCnt = 2 To Len(sData)
    iChecksum = iChecksum Xor Asc(Mid(sData, iCnt, 1))
  Next

  Return Hex(iChecksum, 2)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send command string to display
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub SendCommand(sId As String, sCmd As String)

  Dim sStr As String

  sStr = "<ID0" & sId & ">" & sCmd & CalcChecksum(sCmd) & "<E>"
  If Main.bLEDMatrixDebug Then Main.WriteDebugLog(("[LEDMatrix] Sending string: ") & sStr)

  Try Print #hLEDMatrix, sStr

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' read display response
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub LEDMatrix_Read()

  Dim sData As Byte

  sData = Read #hLEDMatrix As Byte
  If Main.bLEDMatrixDebug Then Main.WriteDebugLog(("[LEDMatrix] Received string: ") & sData)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' close port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function Disconnect() As Boolean

  ' try to close the connection
  Try hLEDMatrix.Close
  Main.WriteLog(("LED Matrix serial port close."))

  ' all ok
  Return True

Catch ' some errors
  Main.WriteLog(("LED Matrix Error: ") & ERROR.Text)
  Return False

End

' implement properties
Function Port_Read() As String

  Return sPort

End

Sub Port_Write(Value As String)

  sPort = Value

End

Private Function LEDMatrixDebug_Read() As Boolean

  Return bLEDMatrixDebug

End

Private Sub LEDMatrixDebug_Write(Value As Boolean)

  bLEDMatrixDebug = Value

End

Private Function DisplayID_Read() As String

  Return sDisplayID

End

Private Sub DisplayID_Write(Value As String)

  sDisplayID = Value

End

Private Function DisplayColor_Read() As Integer

  Return iDisplayColor

End

Private Sub DisplayColor_Write(Value As Integer)

  iDisplayColor = Value

End

Private Function DisplaySpeed_Read() As Integer

  Return iDisplaySpeed

End

Private Sub DisplaySpeed_Write(Value As Integer)

  iDisplaySpeed = Value

End
