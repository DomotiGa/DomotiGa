' Gambas class file

' Description:
' FSettingsAstro.class
' Settings form for Astro and Location.

' Development Status:
' Working.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' Fill the table with the TimeZone information
  cmbTimeZone.Add("Automatic")
  cmbTimeZone.Add("-12")
  cmbTimeZone.Add("-11")
  cmbTimeZone.Add("-10")
  cmbTimeZone.Add("-9\tAKST")
  cmbTimeZone.Add("-8\tPST")
  cmbTimeZone.Add("-7\tMST")
  cmbTimeZone.Add("-6\tCST")
  cmbTimeZone.Add("-5")
  cmbTimeZone.Add("-4")
  cmbTimeZone.Add("-3\tADT")
  cmbTimeZone.Add("-2")
  cmbTimeZone.Add("-1\tEGT")
  cmbTimeZone.Add(" 0\tGMT/UTC/WET")
  cmbTimeZone.Add("+1\tCET/IST")
  cmbTimeZone.Add("+2\tEET")
  cmbTimeZone.Add("+3")
  cmbTimeZone.Add("+4\tMSD")
  cmbTimeZone.Add("+5")
  cmbTimeZone.Add("+6")
  cmbTimeZone.Add("+7")
  cmbTimeZone.Add("+8\tHKT/PHT/SGT")
  cmbTimeZone.Add("+9\tJST/KST/MYT")
  cmbTimeZone.Add("+10\tPGT")
  cmbTimeZone.Add("+11")
  cmbTimeZone.Add("+12\tFJT/NZST")
  cmbTimeZone.Add("+13\tWST")

  ' Select the right field, 255=Automatic
  Select Main.iAstroTimeZone
    Case -12
      cmbTimeZone.Index = 1
    Case -11
      cmbTimeZone.Index = 2
    Case -10
      cmbTimeZone.Index = 3
    Case -9
      cmbTimeZone.Index = 4
    Case -8
      cmbTimeZone.Index = 5
    Case -7
      cmbTimeZone.Index = 6
    Case -6
      cmbTimeZone.Index = 7
    Case -5
      cmbTimeZone.Index = 8
    Case -4
      cmbTimeZone.Index = 9
    Case -3
      cmbTimeZone.Index = 10
    Case -2
      cmbTimeZone.Index = 11
    Case -1
      cmbTimeZone.Index = 12
    Case 0
      cmbTimeZone.Index = 13
    Case 1
      cmbTimeZone.Index = 14
    Case 2
      cmbTimeZone.Index = 15
    Case 3
      cmbTimeZone.Index = 16
    Case 4
      cmbTimeZone.Index = 17
    Case 5
      cmbTimeZone.Index = 18
    Case 6
      cmbTimeZone.Index = 19
    Case 7
      cmbTimeZone.Index = 20
    Case 8
      cmbTimeZone.Index = 21
    Case 9
      cmbTimeZone.Index = 22
    Case 10
      cmbTimeZone.Index = 23
    Case 11
      cmbTimeZone.Index = 24
    Case 12
      cmbTimeZone.Index = 25
    Case 13
      cmbTimeZone.Index = 26
    Case Else
      cmbTimezone.Index = 0
  End Select

  If cmbTimeZone.Index = 0 Then
    chkDST.Enabled = False
  Else
    chkDST.Enabled = True
  Endif

  chkDST.Value = Main.bAstroDST
  vbLatitude.Value = Main.iAstroLatitude
  vbLongitude.Value = Main.iAstroLongitude
  txtSeasons.Text = Main.sAstroSeasons
  txtSeasonStarts.Text = Main.sAstroSeasonStarts
  cmbTwilight.Text = Main.sAstroTwilight
  chkDebug.Value = Main.bAstroDebug
  cmbCurrency.Text = Main.sCurrency
  cmbTemperature.Text = Main.sTemperature
  btnSave.Enabled = False

End

Public Sub btnSave_Click()

  Dim rResult As Result
  Dim sSeasons As String[]
  Dim sSeason_Start As String[]
  Dim sSeason_Element As String

  ' check if we got the right format like "winter,spring,summer,fall". Astro can give an error if not enough arguments 
  sSeasons = Split(txtSeasons.text, ",")
  If sSeasons.Length <> 4 Then
    Balloon(("Please enter 4 words, separated by a command e.g. winter,spring,summer,fall"), txtSeasons)
    Return
  Endif

  ' check if the seasons start has 4 values like ¨20,20,21,22¨
  sSeason_Start = Split(txtSeasonStarts.Text, ",")
  If sSeason_Start.Length <> 4 Then
    Balloon(("Please enter 4 days (numeric), separated by a command e.g. 20,20,21,22"), txtSeasonStarts)
    Return
  Endif

  For Each sSeason_Element In sSeason_Start
    Try CInt(sSeason_Element)
    If Error Then 
      Balloon(("Please enter 4 days (numeric), separated by a command e.g. 20,20,21,22"), txtSeasonStarts)
      Return      
    Endif
  Next

  Select cmbTimeZone.Index
    Case 1
      Main.iAstroTimeZone = -12
    Case 2
      Main.iAstroTimeZone = -11
    Case 3
      Main.iAstroTimeZone = -10
    Case 4
      Main.iAstroTimeZone = -9
    Case 5
      Main.iAstroTimeZone = -8
    Case 6
      Main.iAstroTimeZone = -7
    Case 7
      Main.iAstroTimeZone = -6
    Case 8
      Main.iAstroTimeZone = -5
    Case 9
      Main.iAstroTimeZone = -4
    Case 10
      Main.iAstroTimeZone = -3
    Case 11
      Main.iAstroTimeZone = -2
    Case 12
      Main.iAstroTimeZone = -1
    Case 13
      Main.iAstroTimeZone = 0
    Case 14
      Main.iAstroTimeZone = 1
    Case 15
      Main.iAstroTimeZone = 2
    Case 16
      Main.iAstroTimeZone = 3
    Case 17
      Main.iAstroTimeZone = 4
    Case 18
      Main.iAstroTimeZone = 5
    Case 19
      Main.iAstroTimeZone = 6
    Case 20
      Main.iAstroTimeZone = 7
    Case 21
      Main.iAstroTimeZone = 8
    Case 22
      Main.iAstroTimeZone = 9
    Case 23
      Main.iAstroTimeZone = 10
    Case 24
      Main.iAstroTimeZone = 11
    Case 25
      Main.iAstroTimeZone = 12
    Case 26
      Main.iAstroTimeZone = 13
    Case Else
      Main.iAstroTimeZone = 255
  End Select

  ' save new Astro settings
  rResult = Main.hDB.Exec("UPDATE settings_astro SET debug = &1, dst = &2, currency = &3, temperature = &4, latitude = &5, longitude = &6, timezone = &7, seasons = &8, seasonstarts = &9, twilight = &{10} WHERE id = 1", chkDebug.Value, chkDST.Value, cmbCurrency.Text, cmbTemperature.Text, vbLatitude.Value, vbLongitude.Value, Main.iAstroTimeZone, txtSeasons.text, txtSeasonStarts.Text, cmbTwilight.Text)
  rResult = Main.GetSettingTable("astro") ' reload settings
  If rResult.Count Then
    Main.iAstroTimeZone = rResult!timezone
    Main.bAstroDST = rResult!dst
    Main.iAstroLatitude = rResult!latitude
    Main.iAstroLongitude = rResult!longitude
    Main.sAstroSeasons = rResult!seasons
    Main.sAstroSeasonStarts = rResult!seasonstarts
    Main.sAstroTwilight = rResult!twilight
    Main.bAstroDebug = rResult!debug
    Main.sCurrency = rResult!currency
    Main.sTemperature = rResult!temperature
  Endif

  If Main.bServer Then
    Main.Restart_Astro()
  Else
    Client.Plugin_Restart("Astro")
  Endif
  Me.Close

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub txtSeasons_KeyPress()

  btnSave.Enabled = True

End

Public Sub txtSeasonStarts_KeyPress()

  btnSave.Enabled = True

End

Public Sub chkDebug_Click()

  btnSave.Enabled = True

End

Public Sub btnDefaults_Click()

  Dim rResult As Result

  rResult = Main.GetSettingTable("astro", True) ' get defaults
  If rResult.Count Then

    ' Select the right field, 255=Automatic
    Select rResult!timezone
      Case -12
        cmbTimeZone.Index = 1
      Case -11
        cmbTimeZone.Index = 2
      Case -10
        cmbTimeZone.Index = 3
      Case -9
        cmbTimeZone.Index = 4
      Case -8
        cmbTimeZone.Index = 5
      Case -7
        cmbTimeZone.Index = 6
      Case -6
        cmbTimeZone.Index = 7
      Case -5
        cmbTimeZone.Index = 8
      Case -4
        cmbTimeZone.Index = 9
      Case -3
        cmbTimeZone.Index = 10
      Case -2
        cmbTimeZone.Index = 11
      Case -1
        cmbTimeZone.Index = 12
      Case 0
        cmbTimeZone.Index = 13
      Case 1
        cmbTimeZone.Index = 14
      Case 2
        cmbTimeZone.Index = 15
      Case 3
        cmbTimeZone.Index = 16
      Case 4
        cmbTimeZone.Index = 17
      Case 5
        cmbTimeZone.Index = 18
      Case 6
        cmbTimeZone.Index = 19
      Case 7
        cmbTimeZone.Index = 20
      Case 8
        cmbTimeZone.Index = 21
      Case 9
        cmbTimeZone.Index = 22
      Case 10
        cmbTimeZone.Index = 23
      Case 11
        cmbTimeZone.Index = 24
      Case 12
        cmbTimeZone.Index = 25
      Case 13
        cmbTimeZone.Index = 26
      Case Else
        cmbTimezone.Index = 0
    End Select

    If cmbTimeZone.Index = 0 Then
      chkDST.Enabled = False
    Else
      chkDST.Enabled = True
    Endif

    chkDST.Value = rResult!dst
    vbLatitude.Value = rResult!latitude
    vbLongitude.Value = rResult!longitude
    txtSeasons.Text = rResult!seasons
    txtSeasonStarts.Text = rResult!seasonstarts
    chkDebug.Value = rResult!debug
    cmbCurrency.Text = rResult!currency
    cmbTemperature.Text = rResult!temperature
  Endif
  btnSave.Enabled = True

End

Public Sub cmbTwilight_Click()

  btnSave.Enabled = True

End

Public Sub cmbCurrency_Click()

  btnSave.Enabled = True

End

Public Sub cmbTemperature_Click()

  btnSave.Enabled = True

End

Public Sub chkDST_Click()

  btnSave.Enabled = True

End

Public Sub cmbTimeZone_Click()

  btnSave.Enabled = True

  If cmbTimeZone.Index = 0 Then
    chkDST.Enabled = False
  Else
    chkDST.Enabled = True
  Endif

End

Public Sub vbLatitude_KeyPress()

  btnSave.Enabled = True

End

Public Sub vbLongitude_KeyPress()

  btnSave.Enabled = True

End

Public Sub btnLatLongSearch_Click()

  Dim fLatitude As Float
  Dim fLongitude As Float

  fLatitude = vbLatitude.Value
  fLongitude = vbLongitude.Value

  FSettingsAstroLatLong.ShowModal

  If fLatitude <> vbLatitude.Value Or fLongitude <> vbLongitude.Value Then
    btnSave.Enabled = True
  Endif

End
