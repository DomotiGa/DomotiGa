' Gambas class file

' Description:
' FSettingsIpx800.class
' Settings form for IPX800 Device.

' Development Status:
' Just started to build this one.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

   GetInstances()

  ' always load first instance
  If LoadSettings(1) = False Then
    Message.Error("Couldn't load settings for instance #1!")
    Try Me.Close
    Return
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

End

Public Sub GetInstances()

  Dim iMax As Integer = GetMaxInstanceforPlugin("ipx800")
  Dim iInstance As Integer

  cmbInstance.Clear
  If iMax Then
    For iInstance = 1 To iMax
      cmbInstance.Add("Instance #" & iInstance)
    Next
  Else
    Message.Error("Couldn't find MaxInstances value for this plugin!")
  Endif

End

Private Sub GetMaxInstanceforPlugin(sPluginName As String) As Integer

  If Main.bServer Then
    Return Plugin.GetPluginMaxInstances(sPluginName)
  Else
    ' FIXME: We are running in client/server mode - call json
    Return 9
  Endif

End

Public Sub cmbInstance_Click()

  ' load selected instance, if not available load defaults
  If LoadSettings(cmbInstance.Index + 1) = False Then
    LoadSettings(0)
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub btnDefaults_Click()

  LoadSettings(0)
  btnSave.Enabled = True

End

Public Sub btnSave_Click()

  Dim rTest As Result
  Dim iInstance As Integer = cmbInstance.Index + 1

  ' test if instance is already present
  rTest = Main.hDB.Exec("SELECT * from settings_ipx800 WHERE id = &1", iInstance)
  If rTest.Count = 1 Then
    ' update settings
    Main.hDB.Exec("UPDATE settings_ipx800 SET tcphost = &1, tcpport = &2, username = &3, password = &4, poll=&5, debug = &6, enabled = &7 WHERE id = &8", txtAddress.text, txtPort.text, txtUsername.Text, txtPassword.Text, txtPoll.Text, chkDebug.Value, chkEnabled.Value, iInstance)
  Else
    ' insert settings
    Main.hDB.Exec("INSERT INTO settings_ipx800 (tcphost, tcpport, username, password, poll, debug, enabled, id) values (&1, &2, &3, &4, &5, &6, &7, &8)", txtAddress.text, txtPort.text, txtUsername.Text, txtPassword.Text, txtPoll.Text, chkDebug.Value, chkEnabled.Value, iInstance)
  Endif

  If Main.bServer Then
    Plugin.Restart("Ipx800", iInstance)
  Else
    Client.Plugin_Restart("Ipx800")
  Endif

  Me.Close

End

Public Sub chkEnabled_Click()

  EnableDisableSettings()
  btnSave.Enabled = True

End

Public Sub txtAddress_KeyPress()

  btnSave.Enabled = True

End

Public Sub txtPort_KeyPress()

  btnSave.Enabled = True

End

Public Sub txtUsername_KeyPress()

  btnSave.Enabled = True

End

Public Sub txtPassword_KeyPress()

  btnSave.Enabled = True

End

Public Sub chkDebug_Click()

  btnSave.Enabled = True

End

Public Sub txtPoll_KeyPress()

  btnSave.Enabled = True

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Load table row
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub LoadSettings(iRow As Integer) As Boolean

  Dim rResult As Result

  rResult = Plugin.GetSettingsTable("settings_ipx800", iRow)

  If rResult.Count Then
    chkEnabled.Value = rResult!enabled
    txtAddress.Text = rResult!tcphost
    txtPort.Text = rResult!tcpport
    txtPassword.Text = rResult!password
    txtUsername.Text = rResult!username
    txtPoll.Text = rResult!poll
    chkDebug.Value = rResult!debug
    Return True
  Else
    Return False
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Enable/Disable all input fields depending on enable value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub EnableDisableSettings()

  txtAddress.Enabled = chkEnabled.Value
  txtPort.Enabled = chkEnabled.Value
  txtUsername.Enabled = chkEnabled.Value
  txtPassword.Enabled = chkEnabled.Value
  txtPoll.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value

End