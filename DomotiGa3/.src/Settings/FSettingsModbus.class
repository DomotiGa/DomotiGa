' Gambas class file

' Description:
' FSettingsModbus.class
' Settings form for Modbus support.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Open the Form
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Form_Open()

  ' Move the new form to a standard location
  Me.Move(FMain.X + 50, FMain.Y + 70)

  GetInstances()

  ' always load first instance
  If LoadSettings(1) = False Then
    Message.Error("Couldn't load settings for instance #1!")
    Try Me.Close
    Return
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

End

Public Sub GetInstances()

  Dim iMax As Integer = GetMaxInstanceforPlugin("modbus")
  Dim iInstance As Integer

  cmbInstance.Clear
  If iMax Then
    For iInstance = 1 To iMax
      cmbInstance.Add("Instance #" & iInstance)
    Next
  Else
    Message.Error("Couldn't find MaxInstances value for this plugin!")
  Endif

End

Private Sub GetMaxInstanceforPlugin(sPluginName As String) As Integer

  If Main.bServer Then
    Return Plugin.GetPluginMaxInstances(sPluginName)
  Else
    ' FIXME: We are running in client/server mode - call json
    Return 9
  Endif

End

Public Sub cmbInstance_Click()

  ' load selected instance, if not available load defaults
  If LoadSettings(cmbInstance.Index + 1) = False Then
    LoadSettings(0)
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub txtSerialPort_KeyPress()

  btnSave.Enabled = True

End

Public Sub cmbBaudrate_Click()

  btnSave.Enabled = True

End

Public Sub chkDebug_Click()

  btnSave.Enabled = True

End

Public Sub txtRelayPort_KeyPress()

  btnSave.Enabled = True

End

Public Sub btnSave_Click()

  Dim rSettings As Result
  Dim iInstance As Integer = cmbInstance.Index + 1

  ' test if instance is already present
  rSettings = Main.hDB.Exec("SELECT * from settings_modbus WHERE id = &1", iInstance)
  If rSettings.Count = 1 Then
    ' update settings
    Main.hDB.Exec("UPDATE settings_modbus SET debug = &1, tcphost = &2, tcpport = &3, modbustype = &4, enabled = &5, serialport = &6, baudrate = &7, databits = &8, stopbits = &9, parity = &{10}, polltime = &{11}, type = &{12} WHERE id = &{13}", chkDebug.Value, txtTCPHost.Text, vbTCPPort.Value, cmbModbusType.Text, chkEnabled.Value, txtSerialPort.Text, cmbBaudrate.Text, spbDatabits.Value, spbStopbits.Value, cmbParity.Index, vbPoll.Value, cmbType.Text, iInstance)
  Else
    ' insert settings
    Main.hDB.Exec("INSERT INTO settings_modbus (debug, tcphost, tcpport, modbustype, enabled, serialport, baudrate, databits, stopbits, parity, polltime, type, id) values (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13})", chkDebug.Value, txtTCPHost.Text, vbTCPPort.Value, cmbModbusType.Text, chkEnabled.Value, txtSerialPort.Text, cmbBaudrate.Text, spbDatabits.Value, spbStopbits.Value, cmbParity.Index, vbPoll.Value, cmbType.Text, iInstance)
  Endif

  If Main.bServer Then
    Plugin.Restart("Modbus", iInstance)
  Else
    Client.Plugin_Restart("Modbus", iInstance)
  Endif

  FMain.UpdateStatusPanel()
  Me.Close

End

Public Sub btnDefaults_Click()

  ' Load defaults from id=0
  LoadSettings(0)
  btnSave.Enabled = True

End

Public Sub chkEnabled_Click()

  EnableDisableSettings()
  btnSave.Enabled = True

End

Public Sub cmbType_Click()

  If chkEnabled.Value Then SetButtons()
  btnSave.Enabled = True

End

Public Sub txtTCPHost_KeyPress()

  btnSave.Enabled = True

End

Public Sub vbTCPPort_KeyPress()

  btnSave.Enabled = True

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Load table row
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub LoadSettings(iRow As Integer) As Boolean

  Dim rResult As Result

  rResult = Plugin.GetSettingsTable("settings_modbus", iRow)

  If rResult.Count Then
    chkEnabled.Value = rResult!enabled
    txtSerialPort.Text = rResult!serialport
    vbTCPPort.Text = rResult!tcpport
    txtTCPHost.Text = rResult!tcphost
    cmbType.Text = rResult!type
    cmbBaudrate.Text = rResult!baudrate
    spbDatabits.Value = rResult!databits
    spbStopbits.Value = rResult!stopbits
    cmbParity.Index = rResult!parity
    vbPoll.Value = rResult!polltime
    chkDebug.Value = rResult!debug
    cmbModbusType.Text = rResult!modbustype
    Return True
  Else
    Return False
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Enable/Disable all input fields depending on enable value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub EnableDisableSettings()

  txtSerialPort.Enabled = chkEnabled.Value
  cmbBaudrate.Enabled = chkEnabled.Value
  cmbType.Enabled = chkEnabled.Value
  cmbModbusType.Enabled = chkEnabled.Value
  txtTCPHost.Enabled = chkEnabled.Value
  vbTCPPort.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value
  btnSerial.Enabled = chkEnabled.Value
  cmbBaudrate.Enabled = chkEnabled.Value
  spbStopbits.Enabled = chkEnabled.Value
  spbDatabits.Enabled = chkEnabled.Value
  cmbParity.Enabled = chkEnabled.Value
  vbPoll.Enabled = chkEnabled.Value
  If chkEnabled.Value Then SetButtons()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Set TCP or Serial fields on enable/disable
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub SetButtons()

  If cmbType.Text = "tcp" Then
    txtSerialPort.Enabled = False
    cmbBaudrate.Enabled = False
    spbStopbits.Enabled = False
    spbDatabits.Enabled = False
    cmbParity.Enabled = False
    txtTCPHost.Enabled = True
    vbTCPPort.Enabled = True
  Endif
  If cmbType.Text = "serial" Then
    txtSerialPort.Enabled = True
    cmbBaudrate.Enabled = True
    spbStopbits.Enabled = True
    spbDatabits.Enabled = True
    cmbParity.Enabled = True
    txtTCPHost.Enabled = False
    vbTCPPort.Enabled = False
  Endif

End

Public Sub btnSerial_Click()

  Dim sSerialPort As String

  sSerialPort = FToolsSerialPorts.Run()
  If sSerialPort Then txtSerialPort.Text = sSerialPort
  btnSave.Enabled = True

End

Public Sub spbDatabits_Change()

  btnSave.Enabled = True

End

Public Sub spbStopbits_Change()

  btnSave.Enabled = True

End

Public Sub cmbParity_Click()

  btnSave.Enabled = True

End

Public Sub cmbModbusType_Click()

  btnSave.Enabled = True

End

Public Sub vbPoll_Change()

  btnSave.Enabled = True

End

Public Sub vbPoll_KeyPress()

  btnSave.Enabled = True

End
