' Gambas class file

' Description:
' FSettingsLEDMatrix.class
' Settings form for LED Matrix support.

' Development Status:
' Done.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public hForm As Form
Public hSendButton As Button
Public hTextBox As TextBox

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' TODO: add more instances
  If LoadSettings(1) = False Then
    ' TODO: Handle problems
    Try Me.Close
    Return
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

  If Not Main.bServer Then btnSetClock.Enabled = False

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub txtSerialPort_KeyPress()

  btnSave.Enabled = True

End

Public Sub chkDebug_Click()

  btnSave.Enabled = True

End

Public Sub btnSave_Click()

  Dim rResult As Result

  ' save new LED Matrix settings
  rResult = Main.hDB.Exec("UPDATE settings_ledmatrix SET debug = &1, serialport = &2, enabled = &3, color = &4, speed = &5, displayid = &6 WHERE id = 1", chkDebug.Value, txtSerialPort.Text, chkEnabled.Value, cmbColor.Index, cmbSpeed.Index, vbID.Value)

  If Main.bServer Then
    Plugin.Restart("LEDMatrix", 1)
  Else
    Client.Plugin_Restart("LEDMatrix")
  Endif

  Me.Close

End

Public Sub btnDefaults_Click()

  LoadSettings(0)
  btnSave.Enabled = True

End

Public Sub chkEnabled_Click()

  EnableDisableSettings()
  btnSave.Enabled = True

End

Public Sub vbID_Click()

  btnSave.Enabled = True

End

Public Sub cmbColor_Click()

  btnSave.Enabled = True

End

Public Sub cmbSpeed_Click()

  btnSave.Enabled = True

End

Public Sub btnSetClock_Click()

  If Main.bServer Then
    Try Plugin.GetPluginObject("LEDMatrix", 1).Interface.SetClock(vbID.Value)
  Endif

End

Public Sub EnterMessage()

  hForm = New Form
  With hForm
    .X = FMain.X + 50
    .Y = FMain.Y + 70
    .Background = Color.TextBackground
    .Height = 36
    .Width = 500
    .Text = "Enter your message"
  End With
  hTextBox = New TextBox(hForm) As "MessageBox"
  With hTextBox
    .X = 7
    .Y = 7
    .Height = 21
    .Width = 430
  End With
  hSendButton = New Button(hForm) As "SendButton"
  With hSendButton
    .X = 445
    .Y = 7
    .Width = 49
    .Height = 21
    .Text = "Send"
  End With
  hForm.Show

End

Public Sub SendButton_Click()

  If Len(hTextBox.Text) < 2 Then
    Balloon(("Please type some text first!"), hTextBox)
  Else
    If Main.bServer Then
      Try Plugin.GetPluginObject("LEDMatrix", 1).Interface.DisplayMessage(vbID.Value, hTextBox.Text)
    Else
      Client.DisplayLEDMessage(vbID.Value, hTextBox.Text)
    Endif
    hForm.Close
  Endif

End

Public Sub btnTest_Click()

  EnterMessage()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Load table row
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub LoadSettings(iRow As Integer) As Boolean

  Dim rResult As Result

  rResult = Plugin.GetSettingsTable("settings_ledmatrix", iRow)

  If rResult.Count Then
    chkEnabled.Value = rResult!enabled
    txtSerialPort.text = rResult!serialport
    cmbColor.Index = rResult!color
    cmbSpeed.Index = rResult!speed
    vbID.Value = rResult!displayid
    chkDebug.Value = rResult!debug
    Return True
  Else
    Return False
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Enable/Disable all input fields depending on enable value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub EnableDisableSettings()

  txtSerialPort.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value
  cmbColor.Enabled = chkEnabled.Value
  cmbSpeed.Enabled = chkEnabled.Value
  vbID.Enabled = chkEnabled.Value
  btnTest.Enabled = chkEnabled.Value
  btnSerial.Enabled = chkEnabled.Value

End

Public Sub btnSerial_Click()

  Dim sSerialPort As String

  sSerialPort = FToolsSerialPorts.Run()
  If sSerialPort Then txtSerialPort.Text = sSerialPort
  btnSave.Enabled = True

End