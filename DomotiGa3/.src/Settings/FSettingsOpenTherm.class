' Gambas class file

' Description:
' FSettingsOpenTherm.class
' Settings form for OpenTherm gateway support.

' Development Status: Work in progress

' Credits:
' Thanks to Frank van Breugel.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  GetInstances()

  ' always load first instance
  If LoadSettings(1) = False Then
    Message.Error("Couldn't load settings for instance #1!")
    Try Me.Close
    Return
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

End

Public Sub GetInstances()

  Dim iMax As Integer = GetMaxInstanceforPlugin("opentherm")
  Dim iInstance As Integer

  cmbInstance.Clear
  If iMax Then
    For iInstance = 1 To iMax
      cmbInstance.Add("Instance #" & iInstance)
    Next
  Else
    Message.Error("Couldn't find MaxInstances value for this plugin!")
  Endif

End

Private Sub GetMaxInstanceforPlugin(sPluginName As String) As Integer

  If Main.bServer Then
    Return Plugin.GetPluginMaxInstances(sPluginName)
  Else
    ' FIXME: We are running in client/server mode - call json
    Return 9
  Endif

End

Public Sub cmbInstance_Click()

  ' load selected instance, if not available load defaults
  If LoadSettings(cmbInstance.Index + 1) = False Then
    LoadSettings(0)
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub txtSerialPort_KeyPress()

  btnSave.Enabled = True

End

Public Sub chkDebug_Click()

  btnSave.Enabled = True

End

Public Sub chkRelayEnabled_Click()

  btnSave.Enabled = True
  vbRelayPort.Enabled = chkRelayEnabled.Value

End

Public Sub vbRelayPort_KeyPress()

  btnSave.Enabled = True

End

Public Sub btnSave_Click()

  Dim rSettings As Result
  Dim sSQL As String
  Dim iInstance As Integer = cmbInstance.Index + 1

  sSQL = "debug = " & chkDebug.Value
  sSQL &= ", serialport = '" & txtSerialPort.Text & "'"
  sSQL &= ", thermostat = '" & cmbThermostat.Text & "'"
  sSQL &= ", enabled = " & chkEnabled.Value
  sSQL &= ", syncclock = " & chkSyncClock.Value
  sSQL &= ", temperatureoverride = '" & cmbTemperatureOverride.Text & "'"
  sSQL &= ", type = '" & cmbType.Text & "'"
  sSQL &= ", tcphost = '" & txtTCPHost.Text & "'"
  sSQL &= ", tcpport = " & vbTCPPort.Value
  sSQL &= ", relayenabled = " & chkRelayEnabled.Value
  sSQL &= ", relayport = " & vbRelayPort.Value
  sSQL &= ", polltime = " & vbPolltime.Value

  rSettings = Main.hDB.Exec("SELECT * from settings_opentherm WHERE id = &1", iInstance)
  If rSettings.Count = 1 Then
    ' save settings
    Main.hDB.Exec("UPDATE settings_opentherm SET " & sSQL & " WHERE id = &1", iInstance)
  Else
    ' insert settings
    Main.hDB.Exec("INSERT INTO settings_opentherm (debug, serialport, thermostat, enabled, syncclock, temperatureoverride, type, tcphost, tcpport, relayenabled, relayport, polltime, id) values (&1, &2, &3, &4, &5, &6, &7, &8, &9, &{10}, &{11}, &{12}, &{13})", chkDebug.Value, txtSerialPort.Text, cmbThermostat.Text, chkEnabled.Value, chkSyncClock.Value, cmbTemperatureOverride.Text, cmbType.Text, txtTCPHost.Text, vbTCPPort.Value, chkRelayEnabled.Value, vbRelayPort.Value, vbPolltime.Value, iInstance)
  Endif

  If Main.bServer Then
    Plugin.Restart("Opentherm", iInstance)
  Else
    Client.Plugin_Restart("Opentherm", iInstance)
  Endif

  Me.Close

End

Public Sub btnDefaults_Click()

  LoadSettings(0)
  btnSave.Enabled = True

End

Public Sub chkEnabled_Click()

  EnableDisableSettings()
  btnSave.Enabled = True

End

Public Sub cmbThermostat_Click()

  btnSave.Enabled = True

End

Public Sub cmbTemperatureOverride_Click()

  btnSave.Enabled = True

End

Public Sub chkSyncClock_Click()

  btnSave.Enabled = True

End

Public Sub cmbType_Click()

  If chkEnabled.Value Then SetButtons()
  btnSave.Enabled = True

End

Public Sub txtTCPHost_KeyPress()

  btnSave.Enabled = True

End

Public Sub vbTCPPort_KeyPress()

  btnSave.Enabled = True

End

Public Sub vbPolltime_KeyPress()

  btnSave.Enabled = True

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Load table row
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub LoadSettings(iRow As Integer) As Boolean

  Dim rResult As Result

  rResult = Plugin.GetSettingsTable("settings_opentherm", iRow)

  If rResult.Count Then
    chkEnabled.Value = rResult!enabled
    txtSerialPort.text = rResult!serialport
    vbPolltime.Value = rResult!polltime
    cmbThermostat.Text = rResult!thermostat
    cmbTemperatureOverride.Text = rResult!temperatureoverride
    chkSyncClock.Value = rResult!syncclock
    chkRelayEnabled.Value = rResult!relayenabled
    vbRelayPort.Value = rResult!relayport
    txtTCPHost.Text = rResult!tcphost
    vbTCPPort.Value = rResult!tcpport
    cmbType.Text = rResult!type
    chkDebug.Value = rResult!debug
    Return True
  Else
    Return False
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Enable/Disable all input fields depending on enable value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub EnableDisableSettings()

  cmbType.Enabled = chkEnabled.Value
  txtTCPHost.Enabled = chkEnabled.Value
  vbTCPPort.Enabled = chkEnabled.Value
  txtSerialPort.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value
  cmbThermostat.Enabled = chkEnabled.Value
  vbPolltime.Enabled = chkEnabled.Value
  cmbTemperatureOverride.Enabled = chkEnabled.Value
  chkSyncClock.Enabled = chkEnabled.Value
  chkRelayEnabled.Enabled = chkEnabled.Value
  vbRelayPort.Enabled = chkEnabled.Value And chkRelayEnabled.Value
  btnSerial.Enabled = chkEnabled.Value
  If chkEnabled.Value Then SetButtons()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub SetButtons()

  If cmbType.Text = "tcp" Then
    txtSerialPort.Enabled = False
    txtTCPHost.Enabled = True
    vbTCPPort.Enabled = True
  Endif
  If cmbType.Text = "serial" Then
    txtSerialPort.Enabled = True
    txtTCPHost.Enabled = False
    vbTCPPort.Enabled = False
  Endif

  vbRelayPort.Enabled = chkRelayEnabled.Value

End

Public Sub btnSerial_Click()

  Dim sSerialPort As String

  sSerialPort = FToolsSerialPorts.Run()
  If sSerialPort Then txtSerialPort.Text = sSerialPort
  btnSave.Enabled = True

End
