' Gambas class file

' Description:
' FSettingsPVoutput.class
' Settings form for PVoutput upload.

' Development Status:
' Development just started.

' Links:
' http://www.pvoutput.org

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' This module was written by Pieter Blom in 2013.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private $iDeviceId As Integer
Private $iDeviceValue As Integer
Private $iUsageDeviceId As Integer
Private $iUsageDeviceValue As Integer
Private $iTempDeviceId As Integer
Private $iTempDeviceValue As Integer
Private $cDevices As New Collection

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' initialize buttons and fill in current values
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' TODO: add more instances
  If LoadSettings(1) = False Then
    ' TODO: Handle problems
    Try Me.Close
    Return
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

  FillDevices()
  FillValue()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' fill comboboxes with available devices
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub FillDevices()

  Dim rDevices As Result
  Dim cCol As Collection
  Dim cValue As Integer[]
  Dim sName As String

  $cDevices.Clear()

  rDevices = Devices.GetDevicesAndValues(["sortOrder": "name", "enabled": True, "inc_device_values": True])
  If rDevices Then
    If rDevices.Count Then
      For Each rDevices
        If rDevices!device_name Then
          If $cDevices.Exist(rDevices!device_name) Then
            cCol = $cDevices[rDevices!device_name]
          Else
            ' Store a new device and its id
            cCol = New Collection
            cValue = New Integer[]
            cCol["device_id"] = rDevices!device_id
            cCol["valuenum"] = cValue
            $cDevices[rDevices!device_name] = cCol
          Endif

          ' Store all valuenum of this device. We only show used valuenum (dynamic)
          If Not cCol["valuenum"].Exist(rDevices!device_value_valuenum) Then
            cCol["valuenum"].Add(rDevices!device_value_valuenum)
            cCol["valuenum"].Sort()
          Endif
        Endif
      Next
    Endif
  Else
    Message.Info(("ERROR: table 'devices' not found!"))
    Return
  Endif

  cmbSensor.Clear()
  cmbUsageSensor.Clear()
  cmbTempSensor.Clear()
  cmbSensor.Add("")
  cmbUsageSensor.Add("")
  cmbTempSensor.Add("")

  For Each $cDevices
    cmbSensor.Add($cDevices.Key)
    cmbUsageSensor.Add($cDevices.Key)
    cmbTempSensor.Add($cDevices.Key)
  Next

  sName = Devices.FindNameForDevice($iDeviceId)
  If sName Then
    cmbSensor.Text = sName
    If $iDeviceValue >= 1 Then
      cmbValue.Text = "value" & $iDeviceValue
    Else
      cmbValue.Text = ""
    Endif
  Endif

  sName = Devices.FindNameForDevice($iUsageDeviceId)
  If sName Then
    cmbUsageSensor.Text = sName
    If $iUsageDeviceValue >= 1 Then
      cmbUsageValue.Text = "value" & $iUsageDeviceValue
    Else
      cmbUsageValue.Text = ""
    Endif
  Endif

  sName = Devices.FindNameForDevice($iTempDeviceId)
  If sName Then
    cmbTempSensor.Text = sName
    If $iTempDeviceValue >= 1 Then
      cmbTempValue.Text = "value" & $iTempDeviceValue
    Else
      cmbTempValue.Text = ""
    Endif
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub FillValue()

  If cmbSensor.Text And cmbValue.Text Then
    txtValue.Text = Devices.GetCurrentValueForDevice(Devices.FindIdForDevice(cmbSensor.Text), Replace(cmbValue.Text, "value", ""))
  Else
    txtValue.Text = ""
  Endif

  If cmbUsageSensor.Text And cmbUsageValue.Text Then
    txtUsageValue.Text = Devices.GetCurrentValueForDevice(Devices.FindIdForDevice(cmbUsageSensor.Text), Replace(cmbUsageValue.Text, "value", ""))
  Else
    txtUsageValue.Text = ""
  Endif

  If cmbTempSensor.Text And cmbTempValue.Text Then
    txtTempValue.Text = Devices.GetCurrentValueForDevice(Devices.FindIdForDevice(cmbTempSensor.Text), Replace(cmbTempValue.Text, "value", ""))
  Else
    txtTempValue.Text = ""
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub btnCancel_Click()

  Me.Close

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub chkEnabled_Click()

  EnableDisableSettings()
  btnSave.Enabled = True

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub cmbValue_Click()

  btnSave.Enabled = True
  FillValue()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub cmbUsageValue_Click()

  btnSave.Enabled = True
  FillValue()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub cmbTempValue_Click()

  btnSave.Enabled = True
  FillValue()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub btnWeb_Click()

  Desktop.Open("http://www.pvoutput.org/list.jsp?sid=" & txtId.Text)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub btnUpload_Click()

  Dim cPl As New CPluginEntry
  Dim hPVoutput As New CPVoutput
  Dim iTempDeviceId As Integer
  Dim iUsageDeviceId As Integer
  Dim iValue As Integer
  Dim iTempValue As Integer
  Dim iUsageValue As Integer

  ' Only validate if it is enabled
  If chkEnabled.Value Then
    If Not ValidInput() Then Return
  Endif

  ' check if optional sensor data is used
  If cmbTempSensor.Text Then iTempDeviceId = Devices.FindIdForDevice(cmbTempSensor.Text)
  If cmbUsageSensor.Text Then iUsageDeviceId = Devices.FindIdForDevice(cmbUsageSensor.Text)
  If cmbValue.Text Then iValue = Replace(cmbValue.Text, "value", "")
  If cmbTempValue.Text Then iTempValue = Replace(cmbTempValue.Text, "value", "")
  If cmbUsageValue.Text Then iUsageValue = Replace(cmbUsageValue.Text, "value", "")

  cPl.Settings["enabled"] = chkEnabled.Value
  cPl.Settings["pvoutputid"] = txtId.Text
  cPl.Settings["api"] = txtApi.Text
  cPl.Settings["debug"] = txtPushTime.Text
  cPl.Settings["pushtime"] = txtPushTime.Text
  cPl.Settings["deviceid"] = Devices.FindIdForDevice(cmbSensor.Text)
  cPl.Settings["devicevalue"] = iValue
  cPl.Settings["usagedeviceid"] = iUsageDeviceId
  cPl.Settings["usagedevicevalue"] = iUsageValue
  cPl.Settings["tempdeviceid"] = iTempDeviceId
  cPl.Settings["tempdevicevalue"] = iTempValue

  hPVoutput.StartPlugin(cPl, False)
  hPVoutput.UploadPVoutputData()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub ValidInput() As Boolean

  If Not txtApi.Text Then
    Balloon(("Please enter your Api Key!"), txtApi)
    Return False
  Endif

  If Not txtId.Text Then
    Balloon(("Please enter your SytemID!"), txtId)
    Return False
  Endif

  If Not cmbSensor.Text And If Not cmbUsageSensor.Text And If Not cmbTempSensor.Text Then
    Balloon(("Please define at least one device!"), cmbSensor)
    Return False
  Endif

  If Not cmbValue.Text And If Not cmbUsageValue.Text And If Not cmbTempValue.Text Then
    Balloon(("Please select a value field for device(s) selected!"), cmbValue)
    Return False
  Endif

  Return True

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub btnSave_Click()

  Dim iTempDeviceId, iUsageDeviceId As Integer
  Dim iValue As Integer
  Dim iTempValue As Integer
  Dim iUsageValue As Integer

  ' Only validate if it is enabled
  If chkEnabled.Value Then
    If Not ValidInput() Then Return
  Endif

  ' check if optional sensor data is used
  If cmbTempSensor.Text Then iTempDeviceId = Devices.FindIdForDevice(cmbTempSensor.Text)
  If cmbUsageSensor.Text Then iUsageDeviceId = Devices.FindIdForDevice(cmbUsageSensor.Text)
  If cmbValue.Text Then iValue = Replace(cmbValue.Text, "value", "")
  If cmbTempValue.Text Then iTempValue = Replace(cmbTempValue.Text, "value", "")
  If cmbUsageValue.Text Then iUsageValue = Replace(cmbUsageValue.Text, "value", "")

  ' save new PVoutput settings
  Main.hDB.Exec("UPDATE settings_pvoutput SET debug = &1, pvoutputid = &2, pushtime = &3, enabled = &4, api = &5, deviceid = &6, devicevalue = &7, usagedeviceid = &8, usagedevicevalue = &9, tempdeviceid = &{10}, tempdevicevalue = &{11} WHERE id = 1", chkDebug.Value, txtId.Text, txtPushTime.Text, chkEnabled.Value, txtApi.Text, Devices.FindIdForDevice(cmbSensor.Text), iValue, iUsageDeviceId, iUsageValue, iTempDeviceId, iTempValue)

  If Main.bServer Then
    Plugin.Restart("PVoutput", 1)
  Else
    Client.Plugin_Restart("PVoutput")
  Endif

  Me.Close

End

Public Sub btnDefaults_Click()

  LoadSettings(0)
  btnSave.Enabled = True

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Load table row
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub LoadSettings(iRow As Integer) As Boolean

  Dim rResult As Result

  rResult = Plugin.GetSettingsTable("settings_pvoutput", iRow)

  If rResult.Count Then
    chkEnabled.Value = rResult!enabled
    txtApi.Text = rResult!api
    txtId.Text = rResult!pvoutputid
    chkDebug.Value = rResult!debug
    txtPushTime.Text = rResult!pushtime
    $iDeviceId = rResult!deviceid
    Try $iDeviceValue = CInt(rResult!devicevalue)
    $iUsageDeviceId = rResult!usagedeviceid
    Try $iUsageDeviceValue = (rResult!usagedevicevalue)
    $iTempDeviceId = rResult!tempdeviceid
    Try $iTempDeviceValue = CInt(rResult!tempdevicevalue)
    Return True
  Else
    Return False
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Enable/Disable all input fields depending on enable value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub EnableDisableSettings()

  txtApi.Enabled = chkEnabled.Value
  txtId.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value
  btnUpload.Enabled = chkEnabled.Value
  txtPushTime.Enabled = chkEnabled.Value
  cmbSensor.Enabled = chkEnabled.Value
  cmbValue.Enabled = chkEnabled.Value
  txtValue.Enabled = chkEnabled.Value
  txtUsageValue.Enabled = chkEnabled.Value
  txtTempValue.Enabled = chkEnabled.Value
  cmbUsageSensor.Enabled = chkEnabled.Value
  cmbUsageValue.Enabled = chkEnabled.Value
  cmbTempSensor.Enabled = chkEnabled.Value
  cmbTempValue.Enabled = chkEnabled.Value

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub cmbSensor_Click()

  Dim iValueNum As Integer

  cmbValue.Clear()
  If cmbSensor.Text Then
    If $cDevices.Exist(cmbSensor.Text) Then
      For Each iValueNum In $cDevices[cmbSensor.Text]["valuenum"]
        cmbValue.Add("value" & iValueNum)
      Next
    Endif
  Endif

  btnSave.Enabled = True
  FillValue()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub cmbUsageSensor_Click()

  Dim iValueNum As Integer

  cmbUsageValue.Clear()
  If cmbUsageSensor.Text Then
    If $cDevices.Exist(cmbUsageSensor.Text) Then
      For Each iValueNum In $cDevices[cmbUsageSensor.Text]["valuenum"]
        cmbUsageValue.Add("value" & iValueNum)
      Next
    Endif
  Endif

  FillValue()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub cmbTempSensor_Click()

  Dim iValueNum As Integer

  cmbTempValue.Clear()
  If cmbTempSensor.Text Then
    If $cDevices.Exist(cmbTempSensor.Text) Then
      For Each iValueNum In $cDevices[cmbTempSensor.Text]["valuenum"]
        cmbTempValue.Add("value" & iValueNum)
      Next
    Endif
  Endif

  FillValue()

End
