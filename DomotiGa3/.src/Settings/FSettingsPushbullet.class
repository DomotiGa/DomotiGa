' Gambas class file

' Description:
' FSettingsPushbullet.class
' Settings form for Pushbullet API support.

' Development Status:
' Development just started.

' Links:
' http://pushbullet.com/api

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' initialize buttons and fill in current values
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' TODO: add more instances
  If LoadSettings(1) = False Then
    ' TODO: Handle problems
    Try Me.Close
    Return
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

End

Public Sub btnCancel_Click()

  Me.Close

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' load defaults from database
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub btnDefaults_Click()

  LoadSettings(0)
  btnSave.Enabled = True

End

Public Sub chkEnabled_Click()

  EnableDisableSettings()
  btnSave.Enabled = True

End

Public Sub chkDebug_Click()

  btnSave.Enabled = True

End

Private Sub ValidInput() As Boolean

  If Not txtToken.Text Then
    Balloon(("Please enter your Pushbullet API token"), txtToken)
    Return False
  Endif

  Return True

End

Public Sub btnSave_Click()

  If chkEnabled.Value Then
    If Not ValidInput() Then Return
  Endif

  '--- save new Pushbullet settings ---
  Main.hDB.Exec("UPDATE settings_pushbullet SET enabled = &1, debug = &2, token = &3, device = &4  WHERE id = 1", chkEnabled.Value, chkDebug.Value, txtToken.Text, cmbDevice.Text)

  If Main.bServer Then
    Plugin.Restart("Pushbullet", 1)
  Else
    Client.ModuleRestart("Pushbullet")
  Endif

  Me.Close

End

Public Sub TextLabelLink_MouseUp()

  Desktop.Open("http://www.pushbullet.com/")

End

Public Sub btnTestToken_Click()

  Dim vResponse, vDevices As Variant
  Dim hPushbullet As New CPushbullet

  If txtToken.Text Then
    vResponse = hPushbullet.GetDevices(txtToken.Text, chkDebug.Value)
    If TypeOf(vResponse) = gb.String Then
      Message.Error("Error:\n" & vResponse)
    Else
      Message.Error("Pushbullet API token is VALID")
    Endif
  Else
    Balloon(("Please enter your Pushbullet API token"), txtToken)
  Endif

End

Public Sub btnSendMessage_Click()

  Dim sResponse As String
  Dim hPushbullet As New CPushbullet

  If txtToken.Text And If cmbDevice.Text Then
    sResponse = hPushbullet.PostPushbulletTest(txtToken.Text, cmbDevice.Text, "DomotiGa", "Test push message from DomotiGa :-)", chkDebug.Value)
    If Not sResponse Then
      Message.Info("Pushbullet message successfully send")
    Else
      Message.Error("Failed to send Pushbullet message\n" & sResponse)
    Endif
  Else If Not txtToken
    Balloon(("Please enter your Pushbullet API token"), txtToken)
  Else If Not cmbDevice.Text
    Balloon(("Please select a device to push to"), cmbDevice)
  Endif

End

Public Sub txtToken_KeyPress()

  btnSave.Enabled = True

End

Public Sub cmbDevice_Change()

  btnSave.Enabled = True

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Load table row
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub LoadSettings(iRow As Integer) As Boolean

  Dim rResult As Result

  rResult = Plugin.GetSettingsTable("settings_pushbullet", iRow)

  If rResult.Count Then
    chkEnabled.Value = rResult!enabled
    chkDebug.Value = rResult!debug
    txtToken.Text = rResult!token
    cmbDevice.Text = rResult!device
    Return True
  Else
    Return False
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Enable/Disable all input fields depending on enable value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub EnableDisableSettings()

  chkDebug.Enabled = chkEnabled.Value
  txtToken.Enabled = chkEnabled.Value
  cmbDevice.Enabled = chkEnabled.Value
  btnTestToken.Enabled = chkEnabled.Value
  btnSendMessage.Enabled = chkEnabled.Value

End

Public Sub btnFetchDevices_Click()

  Dim vResponse, vDevices As Variant
  Dim hPushbullet As New CPushbullet
  Dim sCurDevice As String = cmbDevice.Text

  If txtToken.Text Then
    vResponse = hPushbullet.GetDevicesTest(txtToken.Text, chkDebug.Value)
    If TypeOf(vResponse) = gb.String Then
      Message.Error("Error:\n" & vResponse)
    Else
      If vResponse.Count Then
        cmbDevice.Clear
        cmbDevice.Add("")
        For Each vDevices In vResponse
          If vDevices["extras"]["nickname"] Then
            cmbDevice.Add(vDevices["iden"] & " " & vDevices["extras"]["nickname"])
          Else
            cmbDevice.Add(vDevices["iden"] & " " & vDevices["extras"]["manufacturer"] & " " & vDevices["extras"]["model"])
          Endif
        Next
        ' reselect current value
        Try cmbDevice.Text = sCurDevice
      Endif
    Endif
  Else
    Balloon(("Please enter your Pushbullet API token"), txtToken)
  Endif

End
