' Gambas class file

' Description:
' FSettingsWeatherBug.class
' Settings form for WeatherBug API support.

' Development Status:
' Development just started.

' Links:
' http://www.weatherbug.com

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Private sCity As New String[]
Private sCityCode As New String[]
Private sCountry As New String[]

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' initialize buttons and fill in current values
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' TODO: add more instances
  If LoadSettings(1) = False Then
    ' TODO: Handle problems
    Try Me.Close
    Return
  Endif

  EnableDisableSettings()
  btnSave.Enabled = False

End

Public Sub btnCancel_Click()

  Me.Close

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' load defaults from database
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub btnDefaults_Click()

  LoadSettings(0)
  btnSave.Enabled = True

End

Public Sub chkEnabled_Click()

  EnableDisableSettings()
  btnSave.Enabled = True

End

Public Sub btnCitySearch_Click()

  '--- declare variables ---
  Dim sFile, sLine As String
  Dim hFile As File
  Dim iI As Integer

  cmbCities.Clear
  sCity.Clear
  sCountry.Clear
  sCityCode.Clear
  txtCityCode.text = ""

  '--- get info from weatherbug site ---
  sFile = XMLParser.ParseXML("http://api.wxbug.net/getLocationsXML.aspx?ACode=" & Trim(txtWeatherbugID.Text) & "&SearchString=" & txtCitySearch.text)
  If Len(sFile) > 0 Then
    '--- put all retrieved cities in an array ---
    hFile = Open sFile For Input
    While Not Eof(hFile)
      Line Input #hFile, sLine
      If Left(sLine, 50) = "aws:weather|aws:locations|aws:location|cityname|=|" Then
        sCity.add(Right(sLine, Len(sLine) - 50))
      Endif
      If Left(sLine, 53) = "aws:weather|aws:locations|aws:location|countryname|=|" Then
        sCountry.add(Right(sLine, Len(sLine) - 53))
      Endif
      If Left(sLine, 50) = "aws:weather|aws:locations|aws:location|citycode|=|" Then
        sCityCode.add(Right(sLine, Len(sLine) - 50))
      Endif
    Wend
    hFile.Close
    hFile = Null
    Kill sFile
    '--- put array in combobox ---
    For iI = 0 To sCity.Count - 1
      If Len(Trim(sCityCode[iI])) > 1 Then ' special code, we only use non-US cities
        cmbCities.Add(sCity[iI] & " [" & sCountry[iI] & "]")
      Endif
    Next
    cmbCities_Click
  Endif

End

Public Sub txtCitySearch_KeyPress()

  btnSave.Enabled = True
  cmbCities.Clear

End

Public Sub txtCityCode_KeyPress()

  btnSave.Enabled = True

End

Public Sub txtWeatherBugID_KeyPress()

  btnSave.Enabled = True

End

Public Sub cmbCities_Click()

  '--- declare variables ---
  Dim iI As Integer
  Dim sCityTmp, sCountryTmp As String

  btnSave.Enabled = True

  If cmbCities.Index > -1 Then
    sCityTmp = Trim(Main.ParseTag(cmbCities.text, 1, "["))
    sCountryTmp = Trim(Main.ParseTag(cmbCities.Text, 2, "["))
    sCountryTmp = Left(sCountryTmp, Len(sCountryTmp) - 1)
    For iI = 0 To sCity.Count - 1
      If sCity[iI] = sCityTmp And If sCountry[iI] = sCountryTmp Then
        txtCityCode.Text = sCityCode[iI]
        txtCity.Text = sCity[iI]
        Return
      Endif
    Next
  Endif

End

Public Sub chkDebug_Click()

  btnSave.Enabled = True

End

Private Sub ValidInput() As Boolean

  If Not txtCity.Text Then
    Balloon(("Please select a city!"), txtCity)
    Return False
  Endif
  If Not txtCityCode.Text Then
    Balloon(("Please select a city!"), txtCity)
    Return False
  Endif
  If Not txtWeatherBugID.Text Then
    Balloon(("Please enter your weatherbug id!"), txtWeatherBugID)
    Return False
  Endif
  Return True

End

Public Sub btnSave_Click()

  Dim rResult As Result
  Dim sCountryName As String

  If Not ValidInput() Then Return

  sCountryName = Trim(Main.ParseTag(CmbCities.Text, 2, "["))
  sCountryName = Left(sCountryName, Len(sCountryName) - 1)

  '--- save new WeatherBug settings ---
  rResult = Main.hDB.Exec("UPDATE settings_weatherbug SET debug = &1, city = &2, citycode = &3, countryname = &4, enabled = &5, weatherbugid = &6 WHERE id = 1", chkDebug.Value, txtCity.Text, txtCityCode.Text, sCountryName, chkEnabled.Value, txtWeatherBugID.Text)

  rResult = Main.GetSettingTable("weatherbug") ' reload settings
  If rResult.Count Then
    Main.bWeatherBugEnabled = rResult!enabled
    Main.sWeatherBugCity = rResult!city
    Main.sWeatherBugCityCode = rResult!citycode
    Main.bWeatherBugDebug = rResult!debug
    Main.sWeatherBugID = rResult!weatherbugid
  Endif

  If Main.bServer Then
    Main.Restart_WeatherBug()
  Else
    XMLClient.ModuleRestart("WeatherBug")
  Endif

  Me.Close

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Load table row
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub LoadSettings(iRow As Integer) As Boolean

  Dim rResult As Result

  rResult = Plugin.GetSettingsTable("settings_weatherbug", iRow)

  If rResult.Count Then
    chkEnabled.Value = rResult!enabled
    txtCity.Text = rResult!city
    txtCityCode.Text = rResult!citycode
    chkDebug.Value = rResult!debug
    txtWeatherBugID.Text = rResult!weatherbugid
    Return True
  Else
    Return False
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Enable/Disable all input fields depending on enable value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub EnableDisableSettings()

  txtCity.Enabled = chkEnabled.Value
  txtCityCode.Enabled = chkEnabled.Value
  txtWeatherBugID.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value
  btnCitySearch.Enabled = chkEnabled.Value
  cmbCities.Enabled = chkEnabled.Value
  txtCitySearch.Enabled = chkEnabled.Value

End

