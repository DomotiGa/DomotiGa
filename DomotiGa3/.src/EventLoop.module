' Gambas module file

' Description:
' EventLoop.module
' The Run routine is called every minute.

' Development Status:
' Stable

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public Sub Run()

  Dim sFrom, sTo, sSql As String
  Dim rResult As Result

  ' Create new log files if needed
  If Main.bNew_Month Then Main.Setup_Logfiles()

  ' Check events of type TimeNow
  Events.CheckTimeNowEvents()

  ' Check devices with repeat and/or reset params set
  Devices.CheckRepeatDevice()
  Devices.CheckResetDevice()

  ' Call the Plugin RunTask hook, to allow Modules/Interfaces to use it dynamically
  Plugin.RunTask()

  ' Write energy usage to *_usage tables and RRD files every 5 minutes
  If Main.GetGlobalVar("Minute") Mod 5 = 0 Then
    Energy.Log()
    ' Fetch random quote for this day
    Main.SetGlobalVar("Tagline", Main.Random_Text("remarks_tags"))
  Endif

  ' Run home simulation if enabled
  If Main.GetGlobalVar("Simulation") = "On" Then
    sFrom = Format(Date(Now() - 7), "yyyy-mm-dd") & " " & Format(Time(), "hh:nn")
    sTo = sFrom & ":59"
    sFrom = sFrom & ":00"
    sSql = "SELECT devices.name, device_values_log. * FROM device_values_log INNER JOIN devices ON device_values_log.device_id = devices.id INNER JOIN device_values On device_values.device_id = devices.id WHERE  groups LIKE '%|Simulation|%' AND enabled is True AND device_values.log is True And (device_values.switchable is True Or device_values.dimable is True) AND device_values_log.lastchanged >= '" & sFrom & "' AND device_values_log.lastchanged <='" & sTo & "'"
    rResult = Main.hDB.Exec(sSql)
    If rResult.Count Then
      If Main.bEventsDebug Then Main.WriteDebugLog(("[Simulate] Got ") & rResult.Count & (" result(s)."))
      For Each rResult
        If Main.bEventsDebug Then Main.WriteDebugLog(("[Simulate] Setting device '") & rResult!name & "' to '" & rResult!value & "'")
        Devices.SetDevice(rResult!id, rResult!value)
      Next
    Endif
  Endif

Catch
  Main.WriteDebugLog("[EventLoop.Run] Error '" & Error.Text & "' at '" & Error.Where & "'")

End
