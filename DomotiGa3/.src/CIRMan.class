' Gambas class file

' Description:
' CIRMan.class
' Use UIR or IRMan Infrared receiver to control devices.

' Development Status:
' Not working yet.

' Links:
' http://www.raphnet.net/divers/documentation/irman_protocol.txt

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Module/Class specific variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public PluginName As String = "IRMan"
Public PluginFriendlyName As String = "IRMan IR"
Public PluginVersion As String = "1.00"
Public PluginAuthor As String = "Ron Klinkien"
Public PluginProtocols As String[]
Public PluginMaxInstances As Integer = 1

Public KeyName As String
Public LogLabel As String = "[IRMan] "
Public Instance As Integer
Public IsRunning As Boolean
Public ErrorText As String
Public ErrorWhere As String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Private Variables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private $bEnabled As Boolean
Private $sSerPort As String
Private $bDebug As Boolean

Public hIRMan As New SerialPort

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory subroutine for each Module/Class to initialize:
' - The cPlugin[x].Settings are copied into local variables
' - Port/Connection will be started (any errors caught)
' - Any other code per Class
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StartPlugin(cPl As CPluginEntry)

  KeyName = cPl.KeyName
  Instance = cPl.Instance
  If Instance <> 1 Then LogLabel = Replace(LogLabel, "] ", "#" & Instance & "] ")

  ' Copy configuration items locally
  $bEnabled = cPl.Settings["enabled"]
  $sSerPort = cPl.Settings["serialport"]
  $bDebug = cPl.Settings["debug"]
 
  ' Connect/Initialize connection
  ConnectSerial()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' Mandatory sub for each Module/Class to stop
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub StopPlugin()

  Try Disconnect()

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' open serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub ConnectSerial()

  ' try to close the port
  Try hIRMan.Close

  ' get a new one
  hIRMan = New Serialport As "IRMan"

  With hIRMan
    .PortName = $sSerPort
    .Speed = 9600
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .FlowControl = SerialPort.None
    .Open()
  End With

  ' Write to main logfile we connected successfully
  Main.WriteLog(LogLabel & PluginFriendlyName & " serial interface connected to port " & $sSerPort)
  IsRunning = True

  Run()

Catch ' some errors
  Main.WriteLog(LogLabel & "ERROR: " & PluginFriendlyName & " serial interface FAILED to connect to port " & $sSerPort)
  Main.WriteLog(LogLabel & "ERROR: " & Error.Text)
  IsRunning = False
  ErrorText = Error.Text
  ErrorWhere = Error.Where

End

Private Sub Run()

  If $bDebug Then Main.WriteDebugLog(LogLabel & "Initializing module by sending \"IR\".")
  ' init device
  hIRMan.RTS = True
  hIRMan.DTR = True
  Print #hIRMan, "I"
  Sleep 0.5
  Print #hIRMan, "R"

Catch
  If $bDebug Then Main.WriteDebugLog(LogLabel & "Error initializing receiver!")

End

Public Sub IRMan_Read()

  Dim sData As String

  ' read the 6 unique bytes
  sData = Read #hIRMan, Lof(hIRMan)
  If $bDebug Then Main.WriteDebugLog(LogLabel & "< " & sData)
  If Not Error Then
    ParseLine(sData)
    sData = Null
  Endif

Catch
  If $bDebug Then Main.WriteDebugLog(LogLabel & "Error reading from serial port!")

End

Public Sub ParseLine(sData As String)

  Dim iCnt As Integer
  Dim sButton As String
  Dim sRemote As String = "irman"

  For iCnt = 1 To Len(sData)
    sButton &= Hex(Asc(Mid$(sData, iCnt, 1)), 2)
  Next
  If $bDebug Then Main.WriteDebugLog(LogLabel & "Remote: " & sRemote & " Button: " & sButton)
  Events.CheckIRRemoteEvents("irman", sButton)

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' close port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Private Sub Disconnect()

  ' try to close the connection
  Try hIRMan.Close

  Main.WriteLog(LogLabel & PluginFriendlyName & " Port closed.")

Finally
  IsRunning = False
  ErrorText = ""
  ErrorWhere = ""

Catch
  Main.WriteLog(LogLabel & "ERROR: " & Error.Text)

End

