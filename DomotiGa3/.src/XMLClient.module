' Gambas module file

' Description:
' XMLRPC.module
' Support for client/server setup via XMLRPC interface.

' Development Status:
' Sort of working, needs better error checking.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' let server reload config and restart module named sModule
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function ModuleRestart(sModule As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("module.restart", [XmlRpc.xstring], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sModule)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully (re)started '") & sModule & ("' module on server."))
  Else
    Main.WriteLog(("Error: There was a problem (re)starting ") & sModule & (" module on server, check it's log."))
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send e-mail
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SendEmail(sTo As String, sSubject As String, sBody As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("send.email", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sTo)
  vVar.Add(sSubject)
  vVar.Add(sBody)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully sent e-mail to '") & sTo & "'.")
  Else
    Main.WriteLog(("Error: There was a problem sending e-mail to ") & sTo & ".")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send tweet
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SendTweet(sText As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("send.tweet", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sText)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully sent tweet to 'http://twitter.com/") & Main.sTwitterUser & "'.")
  Else
    Main.WriteLog(("Error: There was a problem sending tweet to 'http://twitter.com/") & Main.sTwitterUser & "'.")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send sms
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SendSMS(sTo As String, sText As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("send.sms", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sTo)
  vVar.Add(sText)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully sent SMS to '") & sTo & "'.")
  Else
    Main.WriteLog(("Error: There was a problem sending SMS to '") & sTo & "'.")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set house mode
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SetHouseMode(sMode As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("set.housemode", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sMode)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set House mode to '") & sMode & "'.")
  Else
    Main.WriteLog(("Error: There was a problem setting House mode to '") & Main.Caps(sMode) & "'.")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set mute mode
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SetMuteMode(bMode As Boolean)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("set.mutemode", [XmlRpc.xBoolean], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(bMode)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set Mute mode to '") & IIf(bMode, "Audio Disabled", "Audio Enabled") & "'.")
  Else
    Main.WriteLog(("Error: There was a problem setting Mute mode to '") & bMode & "'.")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set device value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function DeviceSetDevice(sDevice As String, sValue As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("device.setdevice", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sDevice)
  vVar.Add(sValue)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem setting value of device '") & sDevice & "'.")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' update serverstats graphs
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function UpdateServerStatsGraphs(sRange As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("serverstats.updategraphs", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sRange)
  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem updating serverstats graphs."))
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' create rrdtool databases
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function CreateRRDs(iId As Integer)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("rrdtool.createrrds", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(iId)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem creating rrdtool databases."))
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' update rrdtool graphs for a group and range
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function UpdateRRDGraphs(sGroup As String, sRange As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("rrdtool.updategraphs", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sGroup)
  vVar.Add(sRange)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem updating rrdtool graphs."))
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set alarm pin
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SetAlarmPin(sPin As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("set.alarmpin", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPin)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set Alarm pin."))
  Else
    Main.WriteLog(("Error: There was a problem setting Alarm pin."))
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set alarm mode
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SetAlarmMode(sMode As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("set.alarmmode", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sMode)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set Alarm mode."))
  Else
    Main.WriteLog(("Error: There was a problem setting Alarm mode."))
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' play sound
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function PlaySound(sSound As String, iVolume As Integer)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("play.sound", [XmlRpc.xString, XmlRpc.xInteger], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sSound)
  vVar.Add(iVolume)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem playing sound."))
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' speak voicetext
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function VoiceTextSpeak(sText As String, sVoice As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("voicetext.speak", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sText)
  vVar.Add(sVoice)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem speaking voicetext."))
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' display led matrix message
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function DisplayLEDMessage(sId As String, sText As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("display.ledmessage", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sId)
  vVar.Add(sText)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem displaying led message."))
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set audio control
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function AVSetControl(sModel As String, sCmd As String, sValue As String, sAddress As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("av.setcontrol", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sModel)
  vVar.Add(sCmd)
  vVar.Add(sValue)
  vVar.Add(sAddress)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem controlling audio/video device '") & sModel & ("' with '") & sCmd & "'.")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get audio control
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function AVGetControl(sModel As String, sCmd As String, sAddress As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("av.getcontrol", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sModel)
  vVar.Add(sCmd)
  vVar.Add(sAddress)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem getting audio/video device setting '") & sModel & ("' with '") & sCmd & "'.")
  End If

End

Public Function GetGlobalVars()

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim aResult As RpcArray

  fRpc = New RpcFunction("globalvar.get", Null, XmlRpc.xArray)
  cRpc = New RpcClient(fRpc) As "cRpcGlobalVars"

  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  cRpc.Mode = RpcClient.httpAsync
  Try aResult = cRpc.Call(Null)

Catch
  Main.WriteLog(("Error: ") & Error.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

End

Public Sub cRpcGlobalVars_Reply(vReply As Variant)

  Dim vValue As Variant
  Dim sVar As String
  Dim i As Integer

  For i = 0 To (vReply.Count - 1) / 2
    vValue = vReply.Pop()
    sVar = vReply.Pop()
    Main.GlobalVar[sVar] = vValue
  Next

End

Public Sub sRpcGlobalvars_BadReply(sText As String)

  Main.WriteDebugLog(("Error: ") & Error.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set global var
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SetGlobalVar(sVar As String, sValue As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("globalvar.set", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sVar)
  vVar.Add(sValue)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set '") & sVar & ("' to '") & sValue & "'.")
  Else
    Main.WriteLog(("Error: There was a problem setting '") & sVar & ("' to '") & sValue & "'.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' save global var to database
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SaveGlobalVars()

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim bOk As Boolean

  fRpc = New RpcFunction("globalvar.save", Null, XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort

  Try bOk = cRpc.Call(Null)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog("Successfully saved globalvars to database.")
  Else
    Main.WriteLog("Error: There was Saving global vars to database.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' delete globalvar
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function DelGlobalVar(sVar As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("globalvar.del", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sVar)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully deleted '") & sVar & "'.")
  Else
    Main.WriteLog(("Error: There was a problem deleting '") & sVar & "'.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' cul simulate packet
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function CULSimulate(sPacket As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("cmdr.culsimulate", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPacket)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem simulating CUL packet '") & sPacket & "'.")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' cul queuecommand
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function CULQueueCommand(sPacket As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("cmdr.culqueuecommand", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPacket)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem queueing CUL command '") & sPacket & "'.")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' plcbus send command
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function PLCBUSTXCommand(sAddress As String, sCmd As String, bAck As Boolean, bData As Byte)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("cmdr.plcbustxcommand", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xBoolean, XmlRpc.xInteger], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sAddress)
  vVar.Add(sCmd)
  vVar.Add(bAck)
  vVar.Add(bData)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog(("Error: There was a problem sending PLCBUS command for '") & sAddress & "'.")
  End If

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' run actions from event
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function RunActions(iEventId As Integer)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("events.runactions", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(Str(iEventId))

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully executed actions from event with id '") & iEventId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem executing actions from event with id '") & iEventId & "'.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' run action
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function RunAction(iActionId As Integer)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("events.runaction", [XmlRpc.xInteger], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(iActionId)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully executed action with id '") & iActionId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem executing action with id '") & iActionId & "'.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get program version
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Sub GetProgramVersion() As String

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim sResult As String

  fRpc = New RpcFunction("system.program_version", Null, XmlRpc.xString)
  cRpc = New RpcClient(fRpc)

  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  Try sResult = cRpc.Call(Null)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

  Return sResult

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get calendar planning
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function GetPlanning()

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim Result As RpcArray
  Dim d As Date
  Dim i As Integer

  fRpc = New RpcFunction("calendar.getplanning", Null, XmlRpc.xArray)
  cRpc = New RpcClient(fRpc)

  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  Try Result = cRpc.Call(Null)
  If Error Then
    Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  Else
    Calendar.dPlanning.Clear()
    For i = 0 To (Result.Count - 1)
      d = Result.Pop()
      Calendar.dPlanning.Add(d)
    Next
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set planning
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SetPlanning()

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean
  Dim d As Date
  Dim list As New RpcArray

  fRpc = New RpcFunction("calendar.setplanning", [XmlRpc.xArray], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort

  For Each d In Calendar.dPlanning
    list.Add(d, XmlRpc.xDate)
  Next

  vVar.Add(list)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog("Successfully set occupancy planning.")
  Else
    Main.WriteLog("Error: There was a problem setting ocupancy planning.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set volume squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxSetVolumePlayer(sPlayerId As String, sVolume As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("squeezebox.setvolumeplayer", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)
  vVar.Add(sVolume)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set volume player '") & sPlayerId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem to set volume player '") & sPlayerId & "'.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' play squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxGetVolumePlayer(sPlayerId As String) As String

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim sResult As String

  fRpc = New RpcFunction("squeezebox.getvolumeplayer", [XmlRpc.xString], XmlRpc.xString)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try sResult = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

  Return sResult

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' stop squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxStopPlayer(sPlayerId As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("squeezebox.stopplayer", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set stop player '") & sPlayerId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem to set stop player '") & sPlayerId & "'.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' play squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxPlayPlayer(sPlayerId As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("squeezebox.playplayer", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set play player '") & sPlayerId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem to set play player '") & sPlayerId & "'.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set next number squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxNextNumberPlayer(sPlayerId As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("squeezebox.nextnumberplayer", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set next number player '") & sPlayerId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem to set next number player '") & sPlayerId & "'.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set prev squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxPrevNumberPlayer(sPlayerId As String)

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("squeezebox.prevnumberplayer", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set prev number player '") & sPlayerId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem to set prev number player '") & sPlayerId & "'.")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get current title squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxGetCurrentTitlePlayer(sPlayerId As String) As String

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim sResult As String

  fRpc = New RpcFunction("squeezebox.getcurrentnumberplayer", [XmlRpc.xString], XmlRpc.xString)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try sResult = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

  Return sResult

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get current mode squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxGetModePlayer(sPlayerId As String) As String

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim sResult As String

  fRpc = New RpcFunction("squeezebox.getmodeplayer", [XmlRpc.xString], XmlRpc.xString)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try sResult = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

  Return sResult

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get current player id squeezebox player with player index
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxGetPlayerId(sPlayerIndex As String) As String

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim sResult As String

  fRpc = New RpcFunction("squeezebox.getplayerid", [XmlRpc.xString], XmlRpc.xString)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerIndex)

  Try sResult = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

  Return sResult

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get current name squeezebox player with player index
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxGetPlayerName(sPlayerIndex As String) As String

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim sResult As String

  fRpc = New RpcFunction("squeezebox.getplayername", [XmlRpc.xString], XmlRpc.xString)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerIndex)

  Try sResult = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

  Return sResult

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get current type squeezebox player with player index
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxGetIsPlayer(sPlayerIndex As String) As String

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim sResult As String

  fRpc = New RpcFunction("squeezebox.getisplayer", [XmlRpc.xString], XmlRpc.xString)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerIndex)

  Try sResult = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

  Return sResult

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get albums squeezebox server
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxGetAlbums() As String[]

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim sResult As New RpcArray
  Dim aResults As New String[]
  Dim i As Integer

  fRpc = New RpcFunction("squeezebox.getalbums", Null, XmlRpc.xArray)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort

  Try sResult = cRpc.Call(Null)
  If Error Then
    Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  Else
    For i = 0 To (sResult.Count - 1)
      aResults.Add(sResult.Pop())
    Next
  Endif

  Return aResults

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' clear playlist squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxClearPlaylistPlayer(sPlayerId As String) As Boolean

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("squeezebox.clearplaylistplayer", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set clear playlist player '") & sPlayerId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem to clear playlistplayer '") & sPlayerId & "'.")
  Endif

  Return bOk

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' add album to playlist squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxAddAlbumToPlaylistPlayer(sPlayerId As String, sAlbumName As String) As Boolean

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("squeezebox.addalbumtoplaylistplayer", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)
  vVar.Add(sAlbumName)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bOk Then
    Main.WriteLog(("Successfully set add album to playlist player '") & sPlayerId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem to add a ablum to playlist player '") & sPlayerId & "'.")
  Endif

  Return bOk

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get current artist squeezebox player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxGetCurrentArtistPlayer(sPlayerId As String) As String

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim sArtist As String

  fRpc = New RpcFunction("squeezebox.getcurrentartistplayer", [XmlRpc.xString], XmlRpc.xString)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try sArtist = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If sArtist = Not Null Then
    Main.WriteLog(("Successfully get current artist player '") & sPlayerId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem to get current artist player '") & sPlayerId & "'.")
  End If

  Return sArtist

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' is player connected to squeezebox server player with player id
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function SqueezeboxGetIsPlayerConnectedToServer(sPlayerId As String) As Boolean

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bConnected As Boolean

  fRpc = New RpcFunction("squeezebox.getplayerisconnectedtoserver", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPlayerId)

  Try bConnected = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If bConnected Then
    Main.WriteLog(("Successfully player is connected to server player id '") & sPlayerId & "'.")
  Else
    Main.WriteLog(("Error: There was a problem to get player is connected to server player id '") & sPlayerId & "'.")
  Endif

  Return bConnected

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function ThermostatDerogateHeating(iScenarioId As String, iHeatingId As String, sOperator As String) As Boolean

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim bOk As Boolean

  fRpc = New RpcFunction("thermostat.derogateheating", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(iScenarioId)
  vVar.Add(iHeatingId)
  vVar.Add(sOperator)

  Try bOk = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  If Not bOk Then
    Main.WriteLog("Error: There was a problem derogating heating.")
  Endif

  Return bOk

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function ThermostatGetDerogateHeating(iHeatingId As String) As Float

  Dim fRpc As RpcFunction
  Dim cRpc As RpcClient
  Dim vVar As New Variant[]
  Dim fResult As Float

  fRpc = New RpcFunction("thermostat.getderogateheating", [XmlRpc.xString], XmlRpc.xDouble)
  cRpc = New RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(iHeatingId)

  Try fResult = cRpc.Call(vVar)
  If Error Then Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")

  Return fResult

End
