' Gambas class file

' Description:
' FToolsToon.class
' Toom Commander for testing and programming Toon thermostat.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Private hToon As Object
Private iSetpoint As Float
Private iCurrentTemp As Float
Private cState As Collection
Private iActiveState As Integer
Private tReset As Timer
Private tRefresh As Timer
'Private sProgramStates As Array = ["Comfort", "Home", "Sleep", "Away"]
'Private sBurnerStates As Array = ["Idle", "Heating", "Hot Water", "Pre-Heating"]

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' disable send button in client mode
  Try hToon = Plugin.GetPluginObject("TOON", 1).Interface
  If Error Then
    hToon = Null
  Endif

  If Not Main.bServer Then
    Message.Info(("Toon Commander will only work in Server-Mode"))
    Me.Close
    Return
  Endif

  UpdateState()

  ' start timer for refresh
  tRefresh = New Timer As "tRefresh"
  tRefresh.Delay = 10000
  tRefresh.Start

Catch
  Main.WriteDebugLog("Error: '" & Error.Text & "' at '" & Error.Where & "'")

End

Public Sub Form_Close()

  Try tReset.Stop
  Try tRefresh.Stop

End

Private Sub StartTimer()

  ' start timer for refresh
  tReset = New Timer As "tReset"
  tReset.Delay = 2000
  tReset.Start

End

Private Sub UpdateState()

  cState = GetThermostatState()
  iCurrentTemp = cState["thermostatInfo"]["currentTemp"] / 100
  iSetpoint = cState["thermostatInfo"]["currentSetpoint"] / 100
  iActiveState = cState["thermostatInfo"]["activeState"]

  ' update values
  txtTemp.Text = Format(iCurrentTemp, "#.0") & "°"
  txtSetpoint.Text = Format(iSetpoint, "#.0") & "°"

  UpdateProgram(iActiveState)

End

Public Sub tReset_Timer()

  UpdateProgram(-1)
  txtTemp.Text = Format(iCurrentTemp, "#.0") & "°"
  tReset.Stop

End

Public Sub tRefresh_Timer()

  UpdateState()
  'tRefresh.Start

End

Private Sub UpdateProgram(iState As Integer)


  Select Case iState
    Case 0
      btnHome.Text = "Home"
      btnSleep.Text = "Sleep"
      btnAway.Text = "Away"
      btnComfort.Text = "COMFORT"
      txtStatus.Text = "Program active "
      txtSetpoint.Text = Format(cState["thermostatStates"]["state"][0]["tempValue"] / 100, "#.0") & "°"
    Case 1
      btnHome.Text = "HOME"
      btnComfort.Text = "Comfort"
      btnSleep.Text = "Sleep"
      btnAway.Text = "Away"
      txtStatus.Text = "Program active "
      txtSetpoint.Text = Format(cState["thermostatStates"]["state"][1]["tempValue"] / 100, "#.0") & "°"
    Case 2
      btnHome.Text = "Home"
      btnComfort.Text = "Comfort"
      btnSleep.Text = "SLEEP"
      btnAway.Text = "Away"
      txtStatus.Text = "Program active "
      txtSetpoint.Text = Format(cState["thermostatStates"]["state"][2]["tempValue"] / 100, "#.0") & "°"
    Case 3
      btnHome.Text = "Home"
      btnComfort.Text = "Comfort"
      btnSleep.Text = "Sleep"
      btnAway.Text = "AWAY"
      txtStatus.Text = "Program active "
      txtSetpoint.Text = Format(cState["thermostatStates"]["state"][3]["tempValue"] / 100, "#.0") & "°"
    Case -1
      btnHome.Text = "Home"
      btnComfort.Text = "Comfort"
      btnSleep.Text = "Sleep"
      btnAway.Text = "Away"
      txtStatus.Text = "Temporarily on "
      txtSetpoint.Text = Format(iSetpoint, "#.0") & "°"
  End Select

End

Public Sub btnClose_Click()

  Me.Close

End

Public Sub btnAway_Click()

  SendSetStateCmd("AWAY")
  UpdateProgram(3)

End

Public Sub btnSleep_Click()

  SendSetStateCmd("SLEEP")
  UpdateProgram(2)

End

Public Sub btnComfort_Click()

  SendSetStateCmd("COMFORT")
  UpdateProgram(0)

End

Public Sub btnHome_Click()

  SendSetStateCmd("HOME")
  UpdateProgram(1)

End

Private Sub SendSetStateCmd(sCmd As String)

  If Main.bServer And If hTOON Then
    hTOON.SetState(sCmd)
    UpdateState()
  Else
    ' TODO: cleate client code
  Endif

End

Public Sub btnPlus_Click()

  If iSetpoint < 30.0 Then
    iSetpoint += 0.5
    txtTemp.Text = Format(iSetpoint, "#.0") & "°"
    SendSetThermostatCmd(iSetpoint)
    StartTimer()
  Endif

End

Public Sub btnMinus_Click()

  If iSetpoint > 6.0 Then
    iSetpoint -= 0.5
    txtTemp.Text = Format(iSetpoint, "#.0") & "°"
    SendSetThermostatCmd(iSetpoint)
    StartTimer()
  Endif

End

Private Sub SendSetThermostatCmd(iTemp As Integer)

  If Main.bServer And If hTOON Then
    hTOON.SetThermostat(iTemp)
  Else
    ' TODO: cleate client code
  Endif

End

Private Sub GetThermostatState() As Collection

  If Main.bServer And If hTOON Then
    Return hToon.GetThermostatState()
  Else
    ' TODO: cleate client code
  Endif

End

Private Sub GetThermostatStates() As Collection

  If Main.bServer And If hTOON Then
    Return hToon.GetThermostatStates()
  Else
    ' TODO: cleate client code
  Endif

End
