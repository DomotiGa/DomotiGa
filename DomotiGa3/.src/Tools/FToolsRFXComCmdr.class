' Gambas class file

' Description:
' FToolsRFXComCmdr.class
' Allows injection of a packet to test RFXCom module parser.
' Provides functions like RFXCom's Manager.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

' interface commands
Const msg3undec As Byte = &H80
Const msg3RFU6 As Byte = &H40
Const msg3RFU5 As Byte = &H20
Const msg3RFU4 As Byte = &H10
Const msg3RFU3 As Byte = &H8
Const msg3FINEOFFSET As Byte = &H4
Const msg3RUBICSON As Byte = &H2
Const msg3AE As Byte = &H1

Const msg4BlindsT1 As Byte = &H80
Const msg4BlindsT0 As Byte = &H40
Const msg4PROGUARD As Byte = &H20
Const msg4FS20 As Byte = &H10
Const msg4LCROS As Byte = &H8
Const msg4HID As Byte = &H4
Const msg4AD As Byte = &H2
Const msg4MERTIK As Byte = &H1

Const msg5VISONIC As Byte = &H80
Const msg5ATI As Byte = &H40
Const msg5OREGON As Byte = &H20
Const msg5MEI As Byte = &H10
Const msg5HEU As Byte = &H8
Const msg5AC As Byte = &H4
Const msg5ARC As Byte = &H2
Const msg5X10 As Byte = &H1

Private hRFXComRX As Object
Private hRFXComTRX As Object
Private hRFXComTX As Object

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' fill combo's with values
  FMain.FillCombo(cmbACDevice1, "4")
  FMain.FillCombo(cmbACDevice2, "FF")
  FMain.FillCombo(cmbACDevice3, "FF")
  FMain.FillCombo(cmbACDevice4, "FF")
  FMain.FillCombo(cmbACUnit, "16")
  FMain.FillCombo(cmbARCDevice, "16")
  FMain.FillCombo(cmbLighting1Unit, "16")

  SetLighting1Commands(cmbLighting1Type.Index)

  FMain.FillCombo(cmbLighting2ID2, "FF")
  FMain.FillCombo(cmbLighting2ID3, "FF")
  FMain.FillCombo(cmbLighting2ID4, "FF")
  FMain.FillCombo(cmbLighting2Unit, "16")

  FMain.FillCombo(cmbLighting5ID1, "FF")
  FMain.FillCombo(cmbLighting5ID2, "FF")
  FMain.FillCombo(cmbLighting5ID3, "FF")
  FMain.FillCombo(cmbLighting5Unit, "16")

  FMain.FillCombo(cmbCurtainUnit, "16")
  FMain.FillCombo(cmbThermostat2Unit, "1F")

  FMain.FillCombo(cmbLighting6ID1, "FF")
  FMain.FillCombo(cmbLighting6ID2, "FF")

  ' disable send button in client mode
  Try hRFXComRX = Plugin.GetPluginObject("RFXComRX", 1).Interface
  If Error Then
    hRFXComRX = Null
  Endif

  If hRFXComRX = Null Then
    DisableRX()
  Else
    If hRFXComRX.IsRunning = False Then
      DisableRX()
    Else
      Try chkDebug.Value = Plugin.GetPluginObject("RFXComRX", 1).Settings["debug"]
    Endif
  Endif

  ' disable send button in client mode
  Try hRFXComTRX = Plugin.GetPluginObject("RFXComTRX", 1).Interface
  If Error Then
    hRFXComTRX = Null
  Endif

  If hRFXComTRX = Null Then
    DisableTRX()
  Else
    If hRFXComTRX.IsRunning = False Then
      DisableTRX()
    Endif
  Endif

  ' disable send button in client mode
  Try hRFXComTX = Plugin.GetPluginObject("RFXComTX", 1).Interface
  If Error Then
    hRFXComTX = Null
  Endif

  If hRFXComTX = Null Then
    DisableTX()
  Else
    If hRFXComTX.IsRunning = False Then
      DisableTX()
    Else
      Try chkDebugTX.Value = Plugin.GetPluginObject("RFXComTX", 1).Settings["debug"]
    Endif
  Endif

End

Private Sub SetLighting1Commands(iMode As Integer)

  Select iMode
    Case 0, 5 ' X10, EWM200
      btnLighting1AllOn.Enabled = True
      btnLighting1AllOff.Enabled = True
      btnLighting1Chime.Enabled = False
    Case 1 ' ARC
      btnLighting1AllOn.Enabled = True
      btnLighting1AllOff.Enabled = True
      btnLighting1Chime.Enabled = True
    Case 3, 4, 6 ' ELRO AB400, Waveman, Impuls
      btnLighting1AllOn.Enabled = False
      btnLighting1AllOff.Enabled = False
      btnLighting1Chime.Enabled = False
  End Select

End

Public Sub btnClose_Click()

  Me.Close

End

Public Sub btnInject_Click()

  Main.hRFXComRX.bSimulate = True
  If txtPacketRX.Text Then Main.hRFXComRX.Simulate(txtPacketRX.Text)

End

Public Sub btnVersion_Click()

  Main.hRFXComRX.GetVersion()

End

Public Sub btnEnableAll_Click()

  Main.hRFXComRX.ProtocolSetup("ALL")

End

Public Sub btnOregon_Click()

  Main.hRFXComRX.ProtocolSetup("OREGON")

End

Public Sub btnX10_Click()

  Main.hRFXComRX.ProtocolSetup("X10")

End

Public Sub btnARC_Click()

  Main.hRFXComRX.ProtocolSetup("ARC")

End

Public Sub btnKoppla_Click()

  Main.hRFXComRX.ProtocolSetup("KOPPLA")

End

Public Sub btnATI_Click()

  Main.hRFXComRX.ProtocolSetup("ATI")

End

Public Sub btnVisonic_Click()

  Main.hRFXComRX.ProtocolSetup("VISONIC")

End

Public Sub btnSomfy_Click()

  Main.hRFXComRX.ProtocolSetup("SOMFY")

End

Public Sub btnHEUK_Click()

  Main.hRFXComRX.ProtocolSetup("HEUK")

End

Public Sub btnHEEU_Click()

  Main.hRFXComRX.ProtocolSetup("HEEU")

End

Public Sub chkDebug_Click()

  Main.hRFXComRX.RFXComDebug = chkDebug.Value

End

Public Sub DisableRX()

  btnSomfy.Enabled = False
  btnVisonic.Enabled = False
  btnATI.Enabled = False
  btnKoppla.Enabled = False
  btnARC.Enabled = False
  btnX10.Enabled = False
  btnOregon.Enabled = False
  btnHEUK.Enabled = False
  btnHEEU.Enabled = False
  btnVersion.Enabled = False
  btnEnableAll.Enabled = False
  btnInject.Enabled = False
  chkDebug.Enabled = False
  txtPacketRX.Enabled = False

End

Public Sub DisableTX()

  btnVersionTX.Enabled = False
  btnEnableARCTX.Enabled = False
  btnEnableHarrisonTX.Enabled = False
  btnDisableX10TX.Enabled = False
  chkDebugTX.Enabled = False
  btnEnableKopplaTX.Enabled = False
  slDim.Enabled = False

  ' ARC / X10
  btnARCOn.Enabled = False
  btnARCOff.Enabled = False
  btnARCDim.Enabled = False
  btnARCBright.Enabled = False
  btnARCLightsOff.Enabled = False
  btnARCLightsOn.Enabled = False
  cmbARCHouse.Enabled = False
  cmbARCDevice.Enabled = False

  ' AC / HE UK
  cmbACDevice1.Enabled = False
  cmbACDevice2.Enabled = False
  cmbACDevice3.Enabled = False
  cmbACDevice4.Enabled = False
  cmbACUnit.Enabled = False
  btnACOff.Enabled = False
  btnACOn.Enabled = False
  chkHEEU.Enabled = False
  tbtnACGroup.Enabled = False

End

Public Sub DisableTRX()

  btnTRXReset.Enabled = False
  btnTRXGetStatus.Enabled = False
  btnTRXSave.Enabled = False
  btnTRXSetMode.Enabled = False
  btnInjectTRX.Enabled = False

  btnLighting1Off.Enabled = False
  btnLighting1On.Enabled = False
  btnLighting1AllOff.Enabled = False
  btnLighting1AllOn.Enabled = False
  btnLighting1Chime.Enabled = False

  btnLighting2On.Enabled = False
  btnLighting2Off.Enabled = False
  btnLighting2AllOff.Enabled = False
  btnLighting2AllOn.Enabled = False
  slLighting2Dim.Enabled = False

  btnLighting5On.Enabled = False
  btnLighting5Off.Enabled = False
  btnLighting5AllLock.Enabled = False
  btnLighting5Close.Enabled = False
  btnLighting5GroupOn.Enabled = False
  btnLighting5GroupOff.Enabled = False
  btnLighting5Lock.Enabled = False
  btnLighting5Mood1.Enabled = False
  btnLighting5Mood2.Enabled = False
  btnLighting5Mood3.Enabled = False
  btnLighting5Mood4.Enabled = False
  btnLighting5Mood5.Enabled = False
  btnLighting5Open.Enabled = False
  btnLighting5Unlock.Enabled = False
  btnLighting5Stop.Enabled = False

  btnLighting6GroupOff.Enabled = False
  btnLighting6GroupOn.Enabled = False
  btnLighting6On.Enabled = False
  btnLighting6Off.Enabled = False

  btnCurtainClose.Enabled = False
  btnCurtainOpen.Enabled = False
  btnCurtainStop.Enabled = False
  btnCurtainProgram.Enabled = False

  btnThermostat2Off.Enabled = False
  btnThermostat2On.Enabled = False
  btnThermostat2Program.Enabled = False

End

' transmitter code below this line
Public Sub chkDebugTX_Click()

  Main.hRFXComTX.RFXComDebug = chkDebug.Value

End

Public Sub btnVersionTX_Click()

  Main.hRFXComTX.GetVersion()

End

Public Sub btnEnableARCTX_Click()

  Main.hRFXComTX.EnableARCTX()

End

Public Sub btnEnableHarrisonTX_Click()

  Main.hRFXComTX.EnableHarrisonTX()

End

Public Sub btnEnableKopplaTX_Click()

  Main.hRFXComTX.EnableKopplaTX()

End

Public Sub btnDisableX10TX_Click()

  Main.hRFXComTX.DisableX10TX()

End

Public Sub ControlTX(sAddress As String, sCmd As String)

  Main.hRFXComTX.X10(sAddress, sCmd)

End

' ARC
Public Sub btnARCOn_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "On")

End

Public Sub btnARCOff_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "Off")

End

Public Sub btnARCDim_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "Dim")

End

Public Sub btnARCBright_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "Bright")

End

Public Sub btnARCLightsOn_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "All_Lights_On")

End

Public Sub btnARCLightsOff_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "All_Lights_Off")

End

' AC / HEEU
Public Sub btnACOn_Click()

  Main.hRFXComTX.AC(cmbACDevice1.Index & cmbACDevice2.Text & cmbACDevice3.Text & cmbACDevice4.Text & " " & cmbACUnit.Text, "On", chkHEEU.Value, tbtnACGroup.Value)

End

Public Sub btnACOff_Click()

  Main.hRFXComTX.AC(cmbACDevice1.Index & cmbACDevice2.Text & cmbACDevice3.Text & cmbACDevice4.Text & " " & cmbACUnit.Text, "Off", chkHEEU.Value, tbtnACGroup.Value)

End

Public Sub slDim_Change()

  Main.hRFXComTX.AC(cmbACDevice1.Index & cmbACDevice2.Text & cmbACDevice3.Text & cmbACDevice4.Text & " " & cmbACUnit.Text, "Dim " & slDim.Value, chkHEEU.Value, tbtnACGroup.Value)

End

Public Sub cmbLighting1Type_Click()

  SetLighting1Commands(cmbLighting1Type.Index)

End

' TRX lighting1
Public Sub btnLighting1On_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "ON", chkLighting1Group.Value)

End

Public Sub btnLighting1Off_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "OFF", chkLighting1Group.Value)

End

Public Sub btnLighting1Chime_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "CHIME", chkLighting1Group.Value)

End

Public Sub btnLighting1AllOn_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "ALL ON", chkLighting1Group.Value)

End

Public Sub btnLighting1AllOff_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "ALL OFF", chkLighting1Group.Value)

End

Public Sub btnLighting2On_Click()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "ON", chkLighting2Group.Value)

End

Public Sub btnLighting2Off_Click()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "OFF", chkLighting2Group.Value)

End

Public Sub btnLighting2AllOn_Click()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "ALL ON", chkLighting2Group.Value)

End

Public Sub btnLighting2AllOff_Click()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "ALL OFF", chkLighting2Group.Value)

End

Public Sub slLighting2Dim_Change()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "DIM " & slLighting2Dim.Value, chkLighting2Group.Value)

End

Public Sub btnTRXSave_Click()

  hRFXComTRX.ProtocolSetup("SAVE")

End

Public Sub btnTRXReset_Click()

  hRFXComTRX.ProtocolSetup("RESET")

End

Public Sub btnTRXGetStatus_Click()

  hRFXComTRX.ProtocolSetup("STATUS")

End

Public Sub btnTRXSetMode_Click()

  Dim aMsg As New Byte[4]

  aMsg[0] = &H53

  If chkTRXUndec.Value Then
    aMsg[1] = &H80
  Else
    aMsg[1] = 0
  Endif

  If chkTRXBlinds0.Value Then
    ' All other protocol receiving is disabled if BlindsT0 enabled
    ' BlindsT0 receive is only used to read the address code of the remote
    aMsg[2] = aMsg[2] Or msg4BlindsT0
    aMsg[3] = 0
  Else
    ' msg3
    If chkTRXRFU6.Value Then
      aMsg[1] = aMsg[1] Or msg3RFU6
    Endif
    If chkTRXRFU5.Value Then
      aMsg[1] = aMsg[1] Or msg3RFU5
    Endif
    If chkTRXRFU4.Value Then
      aMsg[1] = aMsg[1] Or msg3RFU4
    Endif
    If chkTRXRFU3.Value Then
      aMsg[1] = aMsg[1] Or msg3RFU3
    Endif
    If chkTRXFineOffset.Value Then
      aMsg[1] = aMsg[1] Or msg3FINEOFFSET
    Endif
    If chkTRXRubicson.Value Then
      aMsg[1] = aMsg[1] Or msg3RUBICSON
    Endif
    If chkTRXAE.Value Then
      aMsg[1] = aMsg[1] Or msg3AE
    Endif

    ' msg4
    If chkTRXBlinds1.Value Then
      aMsg[2] = aMsg[2] Or msg4BlindsT1
    Endif
    If chkTRXProGuard.Value Then
      aMsg[2] = aMsg[2] Or msg4PROGUARD
    Endif
    If chkTRXFS20.Value Then
      aMsg[2] = aMsg[2] Or msg4FS20
    Endif
    If chkTRXLaCrosse.Value Then
      aMsg[2] = aMsg[2] Or msg4LCROS
    Endif
    If chkTRXHideki.Value Then
      aMsg[2] = aMsg[2] Or msg4HID
    Endif
    If chkTRXAD.Value Then
      aMsg[2] = aMsg[2] Or msg4AD
    Endif
    If chkTRXMertik.Value Then
      aMsg[2] = aMsg[2] Or msg4MERTIK
    Endif

    ' msg5
    If chkTRXVisonic.Value Then
      aMsg[3] = aMsg[3] Or msg5VISONIC
    Endif
    If chkTRXATI.Value Then
      aMsg[3] = aMsg[3] Or msg5ATI
    Endif
    If chkTRXOregon.Value Then
      aMsg[3] = aMsg[3] Or msg5Oregon
    Endif
    If chkTRXMeiantech.Value Then
      aMsg[3] = aMsg[3] Or msg5MEI
    Endif
    If chkTRXHEEU.Value Then
      aMsg[3] = aMsg[3] Or msg5HEU
    Endif
    If chkTRXAC.Value Then
      aMsg[3] = aMsg[3] Or msg5AC
    Endif
    If chkTRXARC.Value Then
      aMsg[3] = aMsg[3] Or msg5ARC
    Endif
    If chkTRXX10.Value Then
      aMsg[3] = aMsg[3] Or msg5X10
    Endif
  Endif
  hRFXComTRX.ProtocolSetup("SETMODE", aMsg)

End

Public Sub btnInjectTRX_Click()

  hRFXComTRX.Simulate(txtPacketTRX.Text)

End

Public Sub btnLighting5On_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ON")

End

Public Sub btnLighting5Off_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "OFF")

End

Public Sub btnLighting5GrpOff_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "GROUP OFF")

End

Public Sub btnLighting5GrpOn_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "GROUP ON")

End

Public Sub btnLighting5Mood1_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD1")

End

Public Sub btnLighting5Mood2_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD2")

End

Public Sub btnLighting5Mood3_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD3")

End

Public Sub btnLighting5Mood4_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD4")

End

Public Sub btnLighting5Mood5_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD5")

End

Public Sub btnLighting5Close_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "CLOSe")

End

Public Sub btnLighting5Stop_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "STOP")

End

Public Sub btnLighting5Open_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "OPEN")

End

Public Sub btnLighting5Unlock_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "UNLOCK")

End

Public Sub btnLighting5Lock_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "LOCK")

End

Public Sub btnLighting5AllLock_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ALL LOCK")

End

Public Sub btnLighting6On_Click()

  hRFXComTRX.Lighting6(cmbLighting6Type.Text, cmbLighting6ID1.Text & cmbLighting6ID2.Text & " " & cmbLighting6Group.Text & cmbLighting6Unit.Text, "ON")

End

Public Sub btnLighting6Off_Click()

  hRFXComTRX.Lighting6(cmbLighting6Type.Text, cmbLighting6ID1.Text & cmbLighting6ID2.Text & " " & cmbLighting6Group.Text & cmbLighting6Unit.Text, "OFF")

End

Public Sub btnLighting6GroupOff_Click()

  hRFXComTRX.Lighting6(cmbLighting6Type.Text, cmbLighting6ID1.Text & cmbLighting6ID2.Text & " " & cmbLighting6Group.Text & cmbLighting6Unit.Text, "GROUP OFF")

End

Public Sub btnLighting6GroupOn_Click()

  hRFXComTRX.Lighting6(cmbLighting6Type.Text, cmbLighting6ID1.Text & cmbLighting6ID2.Text & " " & cmbLighting6Group.Text & cmbLighting6Unit.Text, "GROUP ON")

End

Public Sub btnCurtainOpen_Click()

  hRFXComTRX.Curtain(cmbCurtainType.Text, cmbCurtainHouse.Text & Format(cmbCurtainUnit.Text, "00"), "OPEN")

End

Public Sub btnCurtainClose_Click()

  hRFXComTRX.Curtain(cmbCurtainType.Text, cmbCurtainHouse.Text & Format(cmbCurtainUnit.Text, "00"), "CLOSE")

End

Public Sub btnCurtainStop_Click()

  hRFXComTRX.Curtain(cmbCurtainType.Text, cmbCurtainHouse.Text & Format(cmbCurtainUnit.Text, "00"), "STOP")

End

Public Sub btnCurtainProgram_Click()

  hRFXComTRX.Curtain(cmbCurtainType.Text, cmbCurtainHouse.Text & Format(cmbCurtainUnit.Text, "00"), "PROGRAM")

End

Public Sub btnThermostat2On_Click()

  hRFXComTRX.Thermostat2(cmbThermostat2Type.Text, cmbThermostat2Unit.Text, "ON")

End

Public Sub btnThermostat2Off_Click()

  hRFXComTRX.Thermostat2(cmbThermostat2Type.Text, cmbThermostat2Unit.Text, "OFF")

End

Public Sub btnThermostat2Program_Click()

  hRFXComTRX.Thermostat2(cmbThermostat2Type.Text, cmbThermostat2Unit.Text, "PROGRAM")

End
