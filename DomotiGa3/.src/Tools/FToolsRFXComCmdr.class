' Gambas class file

' Description:
' FToolsRFXComCmdr.class
' Allows injection of a packet to test RFXCom module parser.
' Provides functions like RFXCom's Manager.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

' transceiver / receiver / transmitter
Const recType310 As Byte = &H50
Const recType315 As Byte = &H51
Const recType43392 As Byte = &H52
Const trxType43392 As Byte = &H53
Const recType86800 As Byte = &H55
Const recType86800FSK As Byte = &H56
Const recType86830 As Byte = &H57
Const recType86830FSK As Byte = &H58
Const recType86835 As Byte = &H59
Const recType86835FSK As Byte = &H5A
Const recType86895 As Byte = &H5B

' interface commands
Const msg3undec As Byte = &H80
Const msg3RFU6 As Byte = &H40
Const msg3BYRONSX As Byte = &H20
Const msg3RSL As Byte = &H10
Const msg3LIGHTING4 As Byte = &H8
Const msg3FINEOFFSET As Byte = &H4
Const msg3RUBICSON As Byte = &H2
Const msg3AE As Byte = &H1

Const msg4BlindsT1 As Byte = &H80
Const msg4BlindsT0 As Byte = &H40
Const msg4PROGUARD As Byte = &H20
Const msg4FS20 As Byte = &H10
Const msg4LCROS As Byte = &H8
Const msg4HID As Byte = &H4
Const msg4AD As Byte = &H2
Const msg4MERTIK As Byte = &H1

Const msg5VISONIC As Byte = &H80
Const msg5ATI As Byte = &H40
Const msg5OREGON As Byte = &H20
Const msg5MEI As Byte = &H10
Const msg5HEU As Byte = &H8
Const msg5AC As Byte = &H4
Const msg5ARC As Byte = &H2
Const msg5X10 As Byte = &H1

Private hRFXComRX As Object
Private hRFXComTRX As Object
Private hRFXComTX As Object

Private $TRXInstanceList As New Integer[]
Private $RXInstanceList As New Integer[]
Private $TXInstanceList As New Integer[]

Private $TRXError As String
Private $RXError As String
Private $TXError As String

Public Sub Form_Open()

  Dim iInstance As Integer

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' Check if 1 or more RFXComTRX are enabled
  If Plugin.IsPluginEnabled("RFXComTRX", 0) Then

    ' fill the combo list and auto-enable the first instance
    ' first get the list of enabled instances
    $TRXInstanceList = Plugin.GetPluginEnabledList("RFXComTRX")

    ' loop through the list and fill the combo list
    cmbTRXList.Clear()
    For Each iInstance In $TRXInstanceList
      cmbTRXList.Add("instance #" & iInstance)
    Next

    ' Auto-enable the first instance
    cmbTRXList.Index = 0

  Else
    ' hide transceiver tab
    TabStripRFXComCommander[0].Visible = False
  Endif

  ' Check if 1 or more RFXComRX are enabled
  If Plugin.IsPluginEnabled("RFXComRX", 0) Then

    ' fill the combo list and auto-enable the first instance
    ' First get the list of enabled instances
    $RXInstanceList = Plugin.GetPluginEnabledList("RFXComRX")

    ' loop through the list and fill the combo list
    cmbRXList.Clear()
    For Each iInstance In $RXInstanceList
      cmbRXList.Add("instance #" & iInstance)
    Next

    ' Auto-enable the first instance
    cmbRXList.Index = 0

  Else
    ' hide transceiver tab
    TabStripRFXComCommander[1].Visible = False
  Endif

  ' Check if 1 or more RFXComRX are enabled
  If Plugin.IsPluginEnabled("RFXComTX", 0) Then
 
    ' fill the combo list and auto-enable the first instance
    ' First get the list of enabled instances
    $TXInstanceList = Plugin.GetPluginEnabledList("RFXComTX")

    ' loop through the list and fill the combo list
    cmbTXList.Clear()
    For Each iInstance In $TXInstanceList
      cmbTXList.Add("instance #" & iInstance)
    Next

    ' Auto-enable the first instance
    cmbTXList.Index = 0

  Else
    ' hide transceiver tab
    TabStripRFXComCommander[2].Visible = False
  Endif

  ' fill combo's with values
  FMain.FillCombo(cmbACDevice1, "4")
  FMain.FillCombo(cmbACDevice2, "FF")
  FMain.FillCombo(cmbACDevice3, "FF")
  FMain.FillCombo(cmbACDevice4, "FF")
  FMain.FillCombo(cmbACUnit, "16")
  FMain.FillCombo(cmbARCDevice, "16")
  FMain.FillCombo(cmbLighting1Unit, "16")

  FMain.FillCombo(cmbLighting2ID2, "FF")
  FMain.FillCombo(cmbLighting2ID3, "FF")
  FMain.FillCombo(cmbLighting2ID4, "FF")
  FMain.FillCombo(cmbLighting2Unit, "16")

  FMain.FillCombo(cmbLighting5ID1, "FF")
  FMain.FillCombo(cmbLighting5ID2, "FF")
  FMain.FillCombo(cmbLighting5ID3, "FF")
  FMain.FillCombo(cmbLighting5Unit, "16")

  FMain.FillCombo(cmbCurtainUnit, "16")
  FMain.FillCombo(cmbThermostat2Unit, "1F")

  FMain.FillCombo(cmbLighting6ID1, "FF")
  FMain.FillCombo(cmbLighting6ID2, "FF")

  FMain.FillCombo(cmbChimeUnit, "FF")

  FMain.FillCombo(cmbSecurity1ID1, "FF")
  FMain.FillCombo(cmbSecurity1ID2, "FF")
  FMain.FillCombo(cmbSecurity1ID3, "FF")

  SetLighting1Commands(cmbLighting1Type.Index)
  SetLighting5Commands(cmbLighting5Type.Index)
  SetSecurity1Commands(cmbSecurity1Type.Index)
  SetFanCommands(cmbFanType.Index)

End

Private Sub SetLighting1Commands(iMode As Integer)

  Select iMode
    Case 0 ' X10
      btnLighting1AllOn.Enabled = True
      btnLighting1AllOff.Enabled = True
      btnLighting1Chime.Enabled = False
    Case 1 ' ARC
      btnLighting1AllOn.Enabled = True
      btnLighting1AllOff.Enabled = True
      btnLighting1Chime.Enabled = True
    Case 2, 3, 4, 5, 6 ' ELRO AB400, EMW200, Waveman, Impuls
      btnLighting1AllOn.Enabled = False
      btnLighting1AllOff.Enabled = False
      btnLighting1Chime.Enabled = False
    Case 7, 8 ' Philips SBC, Energenie
      btnLighting1Chime.Enabled = False
      btnLighting1AllOn.Enabled = True
      btnLighting1AllOff.Enabled = True
  End Select

End

Private Sub SetLighting5Disabled()

  btnLighting5Off.Enabled = False
  btnLighting5On.Enabled = False
  btnLighting5GroupOff.Enabled = False
  btnLighting5GroupOn.Enabled = False
  btnLighting5Mood1.Enabled = False
  btnLighting5Mood2.Enabled = False
  btnLighting5Mood3.Enabled = False
  btnLighting5Mood4.Enabled = False
  btnLighting5Mood5.Enabled = False
  btnLighting5Unlock.Enabled = False
  btnLighting5Lock.Enabled = False
  btnLighting5AllLock.Enabled = False
  btnLighting5Close.Enabled = False
  btnLighting5Stop.Enabled = False
  btnLighting5Open.Enabled = False
  btnLighting5ColourPal.Enabled = False
  btnLighting5ColourTone.Enabled = False
  btnLighting5ColourCycle.Enabled = False
  btnLighting5Learn.Enabled = False
  btnLighting5Set.Enabled = False
  slLighting5Level.Enabled = False
  btnLighting5Power.Enabled = False
  btnLighting5Light.Enabled = False
  btnLighting5Bright.Enabled = False
  btnLighting5Dim.Enabled = False
  btnLighting5100.Enabled = False
  btnLighting550.Enabled = False
  btnLighting525.Enabled = False
  btnLighting5ModePlus.Enabled = False
  btnLighting5SpeedPlus.Enabled = False
  btnLighting5SpeedMin.Enabled = False
  btnLighting5ModeMin.Enabled = False
  btnLighting5ToggleG1.Enabled = False
  btnLighting5ToggleG2.Enabled = False
  btnLighting5ToggleG3.Enabled = False
  btnLighting5DimPlus.Enabled = False
  btnLighting5DimMin.Enabled = False
  btnLighting5ColorPlus.Enabled = False
  btnLighting5ColorMin.Enabled = False

End

Private Sub SetLighting5Commands(iMode As Integer)

  SetLighting5Disabled()
  Select iMode
    Case 0 ' LightwaveRF
      cmbLighting5ID1.Enabled = True
      cmbLighting5Unit.Enabled = True
      FMain.FillCombo(cmbLighting5ID1, "FF")
      FMain.FillCombo(cmbLighting5ID2, "FF")
      FMain.FillCombo(cmbLighting5Unit, "16")
      btnLighting5Off.Enabled = True
      btnLighting5On.Enabled = True
      btnLighting5GroupOff.Enabled = True
      btnLighting5Mood1.Enabled = True
      btnLighting5Mood2.Enabled = True
      btnLighting5Mood3.Enabled = True
      btnLighting5Mood4.Enabled = True
      btnLighting5Mood5.Enabled = True
      btnLighting5Unlock.Enabled = True
      btnLighting5Lock.Enabled = True
      btnLighting5AllLock.Enabled = True
      btnLighting5Close.Enabled = True
      btnLighting5Stop.Enabled = True
      btnLighting5Open.Enabled = True
      btnLighting5ColourPal.Enabled = True
      btnLighting5ColourTone.Enabled = True
      btnLighting5ColourCycle.Enabled = True
      slLighting5Level.Enabled = True
      btnLighting5Set.Enabled = True
    Case 1, 4 ' BBSB, RSL
      cmbLighting5ID1.Enabled = True
      cmbLighting5Unit.Enabled = True
      FMain.FillCombo(cmbLighting5ID1, "7")
      FMain.FillCombo(cmbLighting5ID2, "FF")
      btnLighting5Off.Enabled = True
      btnLighting5On.Enabled = True
      btnLighting5GroupOff.Enabled = True
      btnLighting5GroupOn.Enabled = False
    Case 2 ' EWM100
      cmbLighting5ID1.Index = 0
      cmbLighting5Unit.Enabled = True
      FMain.FillCombo(cmbLighting5ID2, "3F")
      btnLighting5Off.Enabled = True
      btnLighting5On.Enabled = True
      btnLighting5Learn.Enabled = True
    Case 3 ' MDREMOTE
      cmbLighting5ID1.Index = 0
      FMain.FillCombo(cmbLighting5ID1, "FF")
      FMain.FillCombo(cmbLighting5ID2, "FF")
      btnLighting5Power.Enabled = True
      btnLighting5Light.Enabled = True
      btnLighting5Bright.Enabled = True
      btnLighting5Dim.Enabled = True
      btnLighting5100.Enabled = True
      btnLighting550.Enabled = True
      btnLighting525.Enabled = True
      btnLighting5ModePlus.Enabled = True
      btnLighting5SpeedPlus.Enabled = True
      btnLighting5SpeedMin.Enabled = True
      btnLighting5ModeMin.Enabled = True
    Case 5 ' LIVOLO
      cmbLighting5ID1.Index = 0
      FMain.FillCombo(cmbLighting5ID1, "FF")
      FMain.FillCombo(cmbLighting5ID2, "FF")
      btnLighting5GroupOff.Enabled = True
      btnLighting5ToggleG1.Enabled = True
      btnLighting5ToggleG2.Enabled = True
      btnLighting5ToggleG3.Enabled = True
      btnLighting5DimPlus.Enabled = True
      btnLighting5DimMin.Enabled = True
    Case 6 ' RGBTRC01
      cmbLighting5ID1.Enabled = True
      FMain.FillCombo(cmbLighting5ID1, "FF")
      FMain.FillCombo(cmbLighting5ID2, "FF")
      btnLighting5Off.Enabled = True
      btnLighting5On.Enabled = True
      btnLighting5ColorPlus.Enabled = True
      btnLighting5ColorMin.Enabled = True
      slLighting5Level.MinValue = 6
      slLighting5Level.MinValue = &H84
      slLighting5Level.Enabled = True
      btnLighting5Set.Enabled = True

  End Select

End

Private Sub SetFanCommands(iMode As Integer)

  Select iMode
    Case 0 ' Siemens SF01
      cmbFanID1.Enabled = False
      cmbFanID2.Enabled = True
      cmbFanID3.Enabled = True
      FMain.FillCombo(cmbFanID1, "FF")
      FMain.FillCombo(cmbFanID2, "7F")
      FMain.FillCombo(cmbFanID3, "FF")

  End Select

End

Private Sub SetSecurity1Disabled()

  btnSecurity1Panic.Enabled = False
  btnSecurity1EndPanic.Enabled = False
  btnSecurity1ArmAway.Enabled = False
  btnSecurity1ArmAwayDelay.Enabled = False
  btnSecurity1ArmHome.Enabled = False
  btnSecurity1ArmHomeDelay.Enabled = False
  btnSecurity1Disarm.Enabled = False
  btnSecurity1Light1Off.Enabled = False
  btnSecurity1Light1On.Enabled = False
  btnSecurity1Light2Off.Enabled = False
  btnSecurity1Light2On.Enabled = False
  btnSecurity1Pair.Enabled = False
  btnSecurity1Normal.Enabled = False
  btnSecurity1Alarm.Enabled = False
  btnSecurity1NormalTamper.Enabled = False
  btnSecurity1AlarmTamper.Enabled = False
  btnSecurity1NormalDelay.Enabled = False
  btnSecurity1AlarmDelay.Enabled = False
  btnSecurity1NormalDelayTamper.Enabled = False
  btnSecurity1AlarmDelayTamper.Enabled = False
  btnSecurity1MotionTamper.Enabled = False
  btnSecurity1NoMotionTamper.Enabled = False
  btnSecurity1IRbeam.Enabled = False
  btnSecurity1Motion.Enabled = False
  btnSecurity1NoMotion.Enabled = False

End

Private Sub SetSecurity1Commands(iMode As Integer)

  SetSecurity1Disabled()
  Select iMode
    Case 0 ' X10SecDW
      cmbSecurity1ID2.Index = cmbSecurity1ID1.Index Xor &HF
      cmbSecurity1ID2.Enabled = False
      cmbSecurity1ID3.Enabled = True
      btnSecurity1Normal.Enabled = True
      btnSecurity1NormalDelay.Enabled = True
      btnSecurity1Alarm.Enabled = True
      btnSecurity1AlarmDelay.Enabled = True
      btnSecurity1NormalTamper.Enabled = True
      btnSecurity1NormalDelayTamper.Enabled = True
      btnSecurity1AlarmTamper.Enabled = True
      btnSecurity1AlarmDelayTamper.Enabled = True

    Case 1 ' X10SecMotion
      cmbSecurity1ID2.Index = cmbSecurity1ID1.Index Xor &HF
      cmbSecurity1ID2.Enabled = False
      cmbSecurity1ID3.Enabled = True
      btnSecurity1Motion.Enabled = True
      btnSecurity1NoMotion.Enabled = True
      btnSecurity1MotionTamper.Enabled = True
      btnSecurity1NoMotionTamper.Enabled = True

    Case 2 ' X10SecRemote
      cmbSecurity1ID2.Index = cmbSecurity1ID1.Index Xor &HF
      cmbSecurity1ID2.Enabled = False
      cmbSecurity1ID3.Enabled = True
      btnSecurity1Panic.Enabled = True
      btnSecurity1EndPanic.Enabled = True
      btnSecurity1ArmAway.Enabled = True
      btnSecurity1ArmAwayDelay.Enabled = True
      btnSecurity1ArmHome.Enabled = True
      btnSecurity1ArmHomeDelay.Enabled = True
      btnSecurity1Disarm.Enabled = True
      btnSecurity1Light1Off.Enabled = True
      btnSecurity1Light1On.Enabled = True
      btnSecurity1Light2Off.Enabled = True
      btnSecurity1Light2On.Enabled = True

    Case 3, 4 ' KD101 Smoke,SA30 Smoke
      cmbSecurity1ID2.Index = 0
      cmbSecurity1ID2.Enabled = True
      cmbSecurity1ID3.Enabled = False
      btnSecurity1Panic.Enabled = True
      btnSecurity1Pair.Enabled = True

    Case 5 ' PowerCodeDW
      cmbSecurity1ID2.Enabled = True
      cmbSecurity1ID3.Enabled = True
      btnSecurity1Normal.Enabled = True
      btnSecurity1Alarm.Enabled = True
      btnSecurity1MotionTamper.Enabled = True
      btnSecurity1NoMotionTamper.Enabled = True

    Case 6 ' PowerCodeMotion
      cmbSecurity1ID2.Enabled = True
      cmbSecurity1ID3.Enabled = True
      btnSecurity1Motion.Enabled = True
      btnSecurity1NoMotion.Enabled = True
      btnSecurity1MotionTamper.Enabled = True
      btnSecurity1NoMotionTamper.Enabled = True

    Case 7 ' PowerCodeAux
      cmbSecurity1ID2.Enabled = True
      cmbSecurity1ID3.Enabled = True
      btnSecurity1Normal.Enabled = True
      btnSecurity1Alarm.Enabled = True
      btnSecurity1MotionTamper.Enabled = True
      btnSecurity1NoMotionTamper.Enabled = True

    Case 8 ' Meiantech, Atlantic, Aidebao
      cmbSecurity1ID2.Enabled = True
      cmbSecurity1ID3.Enabled = True
      btnSecurity1Panic.Enabled = True
      btnSecurity1IRbeam.Enabled = True
      btnSecurity1ArmAway.Enabled = True
      btnSecurity1ArmHome.Enabled = True
      btnSecurity1Disarm.Enabled = True
  End Select

End

Public Sub btnClose_Click()

  Me.Close

End

Public Sub btnInject_Click()

  hRFXComRX.bSimulate = True
  If txtPacketRX.Text Then Main.hRFXComRX.Simulate(txtPacketRX.Text)

End

Public Sub btnVersion_Click()

  hRFXComRX.GetVersion()

End

Public Sub btnEnableAll_Click()

  hRFXComRX.ProtocolSetup("ALL")

End

Public Sub btnOregon_Click()

  hRFXComRX.ProtocolSetup("OREGON")

End

Public Sub btnX10_Click()

  hRFXComRX.ProtocolSetup("X10")

End

Public Sub btnARC_Click()

  hRFXComRX.ProtocolSetup("ARC")

End

Public Sub btnKoppla_Click()

  hRFXComRX.ProtocolSetup("KOPPLA")

End

Public Sub btnATI_Click()

  hRFXComRX.ProtocolSetup("ATI")

End

Public Sub btnVisonic_Click()

  hRFXComRX.ProtocolSetup("VISONIC")

End

Public Sub btnSomfy_Click()

  hRFXComRX.ProtocolSetup("SOMFY")

End

Public Sub btnHEUK_Click()

  hRFXComRX.ProtocolSetup("HEUK")

End

Public Sub btnHEEU_Click()

  hRFXComRX.ProtocolSetup("HEEU")

End

Public Sub EnableDisableRX(bEnable As Boolean)

  btnSomfy.Enabled = bEnable
  btnVisonic.Enabled = bEnable
  btnATI.Enabled = bEnable
  btnKoppla.Enabled = bEnable
  btnARC.Enabled = bEnable
  btnX10.Enabled = bEnable
  btnOregon.Enabled = bEnable
  btnHEUK.Enabled = bEnable
  btnHEEU.Enabled = bEnable
  btnVersion.Enabled = bEnable
  btnEnableAll.Enabled = bEnable
  btnInject.Enabled = bEnable
  txtPacketRX.Enabled = bEnable

End

Public Sub EnableDisableTX(bEnable As Boolean)

  btnVersionTX.Enabled = bEnable
  btnEnableARCTX.Enabled = bEnable
  btnEnableHarrisonTX.Enabled = bEnable
  btnDisableX10TX.Enabled = bEnable
  btnEnableKopplaTX.Enabled = bEnable
  slDim.Enabled = bEnable

  ' ARC / X10
  btnARCOn.Enabled = bEnable
  btnARCOff.Enabled = bEnable
  btnARCDim.Enabled = bEnable
  btnARCBright.Enabled = bEnable
  btnARCLightsOff.Enabled = bEnable
  btnARCLightsOn.Enabled = bEnable
  cmbARCHouse.Enabled = bEnable
  cmbARCDevice.Enabled = bEnable

  ' AC / HE UK
  cmbACDevice1.Enabled = bEnable
  cmbACDevice2.Enabled = bEnable
  cmbACDevice3.Enabled = bEnable
  cmbACDevice4.Enabled = bEnable
  cmbACUnit.Enabled = bEnable
  btnACOff.Enabled = bEnable
  btnACOn.Enabled = bEnable
  chkHEEU.Enabled = bEnable
  tbtnACGroup.Enabled = bEnable

End

' 0=Disabled, 2=Transceiver, 1=Receiver Only
Public Sub EnableDisableTRX(iType As Integer)

  btnTRXReset.Enabled = iType >= 1
  btnTRXGetStatus.Enabled = iType >= 1
  btnTRXSave.Enabled = iType >= 1
  btnTRXSetMode.Enabled = iType >= 1
  btnInjectTRX.Enabled = iType >= 1

  btnLighting1Off.Enabled = iType >= 2
  btnLighting1On.Enabled = iType >= 2
  btnLighting1AllOff.Enabled = iType >= 2
  btnLighting1AllOn.Enabled = iType >= 2
  btnLighting1Chime.Enabled = iType >= 2
  btnLighting1AllOn.Enabled = iType >= 2
  btnLighting1AllOff.Enabled = iType >= 2

  btnLighting2On.Enabled = iType >= 2
  btnLighting2Off.Enabled = iType >= 2
  btnLighting2AllOff.Enabled = iType >= 2
  btnLighting2AllOn.Enabled = iType >= 2
  slLighting2Dim.Enabled = iType >= 2

  btnLighting5On.Enabled = iType >= 2
  btnLighting5Off.Enabled = iType >= 2
  btnLighting5AllLock.Enabled = iType >= 2
  btnLighting5Close.Enabled = iType >= 2
  btnLighting5GroupOn.Enabled = iType >= 2
  btnLighting5GroupOff.Enabled = iType >= 2
  btnLighting5Lock.Enabled = iType >= 2
  btnLighting5Mood1.Enabled = iType >= 2
  btnLighting5Mood2.Enabled = iType >= 2
  btnLighting5Mood3.Enabled = iType >= 2
  btnLighting5Mood4.Enabled = iType >= 2
  btnLighting5Mood5.Enabled = iType >= 2
  btnLighting5Open.Enabled = iType >= 2
  btnLighting5Unlock.Enabled = iType >= 2
  btnLighting5Stop.Enabled = iType >= 2

  btnLighting6GroupOff.Enabled = iType >= 2
  btnLighting6GroupOn.Enabled = iType >= 2
  btnLighting6On.Enabled = iType >= 2
  btnLighting6Off.Enabled = iType >= 2

  btnCurtainClose.Enabled = iType >= 2
  btnCurtainOpen.Enabled = iType >= 2
  btnCurtainStop.Enabled = iType >= 2
  btnCurtainProgram.Enabled = iType >= 2

  btnThermostat2Off.Enabled = iType >= 2
  btnThermostat2On.Enabled = iType >= 2
  btnThermostat2Program.Enabled = iType >= 2

  btnChimeBigBen.Enabled = iType >= 2
  btnChimeSolo.Enabled = iType >= 2
  btnChimeTubular2.Enabled = iType >= 2
  btnChimeTubular3.Enabled = iType >= 2

  ' Disable all transceiver types
  RadioButton310MHz.Value = False
  RadioButton315Mhz.Value = False
  RadioButton43392MHz.Value = False
  RadioButton868MHz.Value = False
  RadioButton868MHzFSK.Value = False
  RadioButton86830MHz.Value = False
  RadioButton86830MHzFSK.Value = False
  RadioButton86835MHz.Value = False
  RadioButton86835MHzFSK.Value = False
  RadioButton86895MHz.Value = False

  txtTRXFirmwareVersion.Text = "UNKNOWN"
  txtTRXHardwareVersion.Text = "UNKNOWN"

  ' Disable protocols
  chkTRXAC.Enabled = False
  chkTRXAD.Enabled = False
  chkTRXAE.Enabled = False
  chkTRXARC.Enabled = False
  chkTRXATI.Enabled = False
  chkTRXBlindsT0.Enabled = False
  chkTRXBlindsT1.Enabled = False
  chkTRXFineOffset.Enabled = False
  chkTRXFS20.Enabled = False
  chkTRXHEEU.Enabled = False
  chkTRXHideki.Enabled = False
  chkTRXLaCrosse.Enabled = False
  chkTRXLighting4.Enabled = False
  chkTRXMeiantech.Enabled = False
  chkTRXMertik.Enabled = False
  chkTRXOregon.Enabled = False
  chkTRXProGuard.Enabled = False
  chkTRXRSL.Enabled = False
  chkTRXByronSX.Enabled = False
  chkTRXRFU6.Enabled = False
  chkTRXRubicson.Enabled = False
  chkTRXUndec.Enabled = False
  chkTRXVisonic.Enabled = False
  chkTRXX10.Enabled = False

End


Public Sub btnVersionTX_Click()

  hRFXComTX.GetVersion()

End

Public Sub btnEnableARCTX_Click()

  hRFXComTX.EnableARCTX()

End

Public Sub btnEnableHarrisonTX_Click()

  hRFXComTX.EnableHarrisonTX()

End

Public Sub btnEnableKopplaTX_Click()

  hRFXComTX.EnableKopplaTX()

End

Public Sub btnDisableX10TX_Click()

  hRFXComTX.DisableX10TX()

End

Public Sub ControlTX(sAddress As String, sCmd As String)

  hRFXComTX.X10(sAddress, sCmd)

End

' ARC
Public Sub btnARCOn_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "On")

End

Public Sub btnARCOff_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "Off")

End

Public Sub btnARCDim_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "Dim")

End

Public Sub btnARCBright_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "Bright")

End

Public Sub btnARCLightsOn_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "All_Lights_On")

End

Public Sub btnARCLightsOff_Click()

  ControlTX(cmbARCHouse.Text & Format(cmbARCDevice.Text, "00"), "All_Lights_Off")

End

' AC / HEEU
Public Sub btnACOn_Click()

  hRFXComTX.AC(cmbACDevice1.Index & cmbACDevice2.Text & cmbACDevice3.Text & cmbACDevice4.Text & " " & cmbACUnit.Text, "On", chkHEEU.Value, tbtnACGroup.Value)

End

Public Sub btnACOff_Click()

  hRFXComTX.AC(cmbACDevice1.Index & cmbACDevice2.Text & cmbACDevice3.Text & cmbACDevice4.Text & " " & cmbACUnit.Text, "Off", chkHEEU.Value, tbtnACGroup.Value)

End

Public Sub slDim_Change()

  hRFXComTX.AC(cmbACDevice1.Index & cmbACDevice2.Text & cmbACDevice3.Text & cmbACDevice4.Text & " " & cmbACUnit.Text, "Dim " & slDim.Value, chkHEEU.Value, tbtnACGroup.Value)

End

Public Sub cmbLighting1Type_Click()

  SetLighting1Commands(cmbLighting1Type.Index)

End

' TRX lighting1
Public Sub btnLighting1On_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "ON", chkLighting1Group.Value)

End

Public Sub btnLighting1Off_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "OFF", chkLighting1Group.Value)

End

Public Sub btnLighting1Chime_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "CHIME", chkLighting1Group.Value)

End

Public Sub btnLighting1AllOn_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "ALL ON", chkLighting1Group.Value)

End

Public Sub btnLighting1AllOff_Click()

  hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "ALL OFF", chkLighting1Group.Value)

End

Public Sub btnLighting2On_Click()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "ON", chkLighting2Group.Value)

End

Public Sub btnLighting2Off_Click()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "OFF", chkLighting2Group.Value)

End

Public Sub btnLighting2AllOn_Click()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "ALL ON", chkLighting2Group.Value)

End

Public Sub btnLighting2AllOff_Click()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "ALL OFF", chkLighting2Group.Value)

End

Public Sub slLighting2Dim_Change()

  hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "DIM " & slLighting2Dim.Value, chkLighting2Group.Value)

End

' TRX Chime
Public Sub btnChimeBigBen_Click()

  hRFXComTRX.Chime(cmbChimeType.Text, Format(cmbChimeUnit.Text, "00"), "BigBen")

End

Public Sub btnChimeSolo_Click()

  hRFXComTRX.Chime(cmbChimeType.Text, Format(cmbChimeUnit.Text, "00"), "Solo")

End

Public Sub btnChimeTubular2_Click()

  hRFXComTRX.Chime(cmbChimeType.Text, Format(cmbChimeUnit.Text, "00"), "Tubular2")

End

Public Sub btnChimeTubular3_Click()

  hRFXComTRX.Chime(cmbChimeType.Text, Format(cmbChimeUnit.Text, "00"), "Tubular3")

End

Public Sub btnTRXSave_Click()

  hRFXComTRX.ProtocolSetup("SAVE")

End

Public Sub btnTRXReset_Click()

  hRFXComTRX.ProtocolSetup("RESET")

End

Public Sub btnTRXGetStatus_Click()

  hRFXComTRX.ProtocolSetup("STATUS")

End

Public Sub btnTRXSetMode_Click()

  Dim aMsg As New Byte[4]

  aMsg[0] = &H53

  If chkTRXUndec.Value Then
    aMsg[1] = &H80
  Else
    aMsg[1] = 0
  Endif

  If chkTRXBlindsT0.Value Then
    ' All other protocol receiving is disabled if BlindsT0 enabled
    ' BlindsT0 receive is only used to read the address code of the remote
    aMsg[2] = aMsg[2] Or msg4BlindsT0
    aMsg[3] = 0
  Else
    ' msg3
    If chkTRXRFU6.Value Then
      aMsg[1] = aMsg[1] Or msg3RFU6
    Endif
    If chkTRXByronSX.Value Then
      aMsg[1] = aMsg[1] Or msg3BYRONSX
    Endif
    If chkTRXRSL.Value Then
      aMsg[1] = aMsg[1] Or msg3RSL
    Endif
    If chkTRXLighting4.Value Then
      aMsg[1] = aMsg[1] Or msg3LIGHTING4
    Endif
    If chkTRXFineOffset.Value Then
      aMsg[1] = aMsg[1] Or msg3FINEOFFSET
    Endif
    If chkTRXRubicson.Value Then
      aMsg[1] = aMsg[1] Or msg3RUBICSON
    Endif
    If chkTRXAE.Value Then
      aMsg[1] = aMsg[1] Or msg3AE
    Endif

    ' msg4
    If chkTRXBlindsT1.Value Then
      aMsg[2] = aMsg[2] Or msg4BlindsT1
    Endif
    If chkTRXProGuard.Value Then
      aMsg[2] = aMsg[2] Or msg4PROGUARD
    Endif
    If chkTRXFS20.Value Then
      aMsg[2] = aMsg[2] Or msg4FS20
    Endif
    If chkTRXLaCrosse.Value Then
      aMsg[2] = aMsg[2] Or msg4LCROS
    Endif
    If chkTRXHideki.Value Then
      aMsg[2] = aMsg[2] Or msg4HID
    Endif
    If chkTRXAD.Value Then
      aMsg[2] = aMsg[2] Or msg4AD
    Endif
    If chkTRXMertik.Value Then
      aMsg[2] = aMsg[2] Or msg4MERTIK
    Endif

    ' msg5
    If chkTRXVisonic.Value Then
      aMsg[3] = aMsg[3] Or msg5VISONIC
    Endif
    If chkTRXATI.Value Then
      aMsg[3] = aMsg[3] Or msg5ATI
    Endif
    If chkTRXOregon.Value Then
      aMsg[3] = aMsg[3] Or msg5Oregon
    Endif
    If chkTRXMeiantech.Value Then
      aMsg[3] = aMsg[3] Or msg5MEI
    Endif
    If chkTRXHEEU.Value Then
      aMsg[3] = aMsg[3] Or msg5HEU
    Endif
    If chkTRXAC.Value Then
      aMsg[3] = aMsg[3] Or msg5AC
    Endif
    If chkTRXARC.Value Then
      aMsg[3] = aMsg[3] Or msg5ARC
    Endif
    If chkTRXX10.Value Then
      aMsg[3] = aMsg[3] Or msg5X10
    Endif
  Endif
  hRFXComTRX.ProtocolSetup("SETMODE", aMsg)

End

Public Sub btnInjectTRX_Click()

  hRFXComTRX.Simulate(txtPacketTRX.Text)

End

Public Sub btnLighting5On_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ON")

End

Public Sub btnLighting5Off_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "OFF")

End

Public Sub btnLighting5GrpOff_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "GROUP OFF")

End

Public Sub btnLighting5GrpOn_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "GROUP ON")

End

Public Sub btnLighting5Mood1_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD1")

End

Public Sub btnLighting5Mood2_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD2")

End

Public Sub btnLighting5Mood3_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD3")

End

Public Sub btnLighting5Mood4_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD4")

End

Public Sub btnLighting5Mood5_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD5")

End

Public Sub btnLighting5Close_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "CLOSe")

End

Public Sub btnLighting5Stop_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "STOP")

End

Public Sub btnLighting5Open_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "OPEN")

End

Public Sub btnLighting5Unlock_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "UNLOCK")

End

Public Sub btnLighting5Lock_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "LOCK")

End

Public Sub btnLighting5AllLock_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ALL LOCK")

End

Public Sub btnLighting6On_Click()

  hRFXComTRX.Lighting6(cmbLighting6Type.Text, cmbLighting6ID1.Text & cmbLighting6ID2.Text & " " & cmbLighting6Group.Text & cmbLighting6Unit.Text, "ON")

End

Public Sub btnLighting6Off_Click()

  hRFXComTRX.Lighting6(cmbLighting6Type.Text, cmbLighting6ID1.Text & cmbLighting6ID2.Text & " " & cmbLighting6Group.Text & cmbLighting6Unit.Text, "OFF")

End

Public Sub btnLighting6GroupOff_Click()

  hRFXComTRX.Lighting6(cmbLighting6Type.Text, cmbLighting6ID1.Text & cmbLighting6ID2.Text & " " & cmbLighting6Group.Text & cmbLighting6Unit.Text, "GROUP OFF")

End

Public Sub btnLighting6GroupOn_Click()

  hRFXComTRX.Lighting6(cmbLighting6Type.Text, cmbLighting6ID1.Text & cmbLighting6ID2.Text & " " & cmbLighting6Group.Text & cmbLighting6Unit.Text, "GROUP ON")

End

Public Sub btnCurtainOpen_Click()

  hRFXComTRX.Curtain(cmbCurtainType.Text, cmbCurtainHouse.Text & Format(cmbCurtainUnit.Text, "00"), "OPEN")

End

Public Sub btnCurtainClose_Click()

  hRFXComTRX.Curtain(cmbCurtainType.Text, cmbCurtainHouse.Text & Format(cmbCurtainUnit.Text, "00"), "CLOSE")

End

Public Sub btnCurtainStop_Click()

  hRFXComTRX.Curtain(cmbCurtainType.Text, cmbCurtainHouse.Text & Format(cmbCurtainUnit.Text, "00"), "STOP")

End

Public Sub btnCurtainProgram_Click()

  hRFXComTRX.Curtain(cmbCurtainType.Text, cmbCurtainHouse.Text & Format(cmbCurtainUnit.Text, "00"), "PROGRAM")

End

Public Sub btnThermostat2On_Click()

  hRFXComTRX.Thermostat2(cmbThermostat2Type.Text, cmbThermostat2Unit.Text, "ON")

End

Public Sub btnThermostat2Off_Click()

  hRFXComTRX.Thermostat2(cmbThermostat2Type.Text, cmbThermostat2Unit.Text, "OFF")

End

Public Sub btnThermostat2Program_Click()

  hRFXComTRX.Thermostat2(cmbThermostat2Type.Text, cmbThermostat2Unit.Text, "PROGRAM")

End

Public Sub cmbTRXList_Click()

  Dim aEnabledProtocols As New String[]

  Try hRFXComTRX = Plugin.GetPluginObject("RFXComTRX", $TRXInstanceList[cmbTRXList.Index]).Interface
  If Error Then
    txtTRXStatus.Text = ("Not Connected")
    txtTRXStatus.Foreground = &HFF0000
    btnTRXShowError.Visible = True
    $TRXError = "RFXComTRX Object Instance doesn't exist, please report this as a bug"
    EnableDisableTRX(0)
  Else

    If hRFXComTRX.IsRunning Then

      txtTRXStatus.Text = ("Connected")
      txtTRXStatus.Foreground = &H00FF00
      btnTRXShowError.Visible = False
      $TRXError = ""

      ' set the type in the main
      Select hRFXComTRX.GetReceiverType()
        Case recType310
          EnableDisableTRX(1)
          RadioButton310MHz.Value = True
          chkTRXX10.Enabled = True
        Case recType315
          EnableDisableTRX(1)
          RadioButton315Mhz.Value = True
          chkTRXVisonic.Enabled = True
        Case recType43392, trxType43392
          If hRFXComTRX.GetReceiverType() = recType43392 Then
            EnableDisableTRX(1)
          Else
            EnableDisableTRX(2)
          Endif

          RadioButton43392MHz.Value = True
          chkTRXAC.Enabled = True
          chkTRXAD.Enabled = True
          chkTRXAE.Enabled = True
          chkTRXARC.Enabled = True
          chkTRXATI.Enabled = True
          chkTRXBlindsT0.Enabled = True
          chkTRXBlindsT1.Enabled = True
          chkTRXFineOffset.Enabled = True
          chkTRXHEEU.Enabled = True
          chkTRXHideki.Enabled = True
          chkTRXLaCrosse.Enabled = True
          chkTRXLighting4.Enabled = True
          chkTRXMeiantech.Enabled = True
          chkTRXMertik.Enabled = True
          chkTRXOregon.Enabled = True
          chkTRXRSL.Enabled = True
          chkTRXByronSX.Enabled = True
          'chkTRXRFU6.Enabled = True
          chkTRXRubicson.Enabled = True
          chkTRXUndec.Enabled = True
          chkTRXX10.Enabled = True
        Case recType86800
          EnableDisableTRX(1)
          RadioButton868MHz.Value = True
        Case recType86800FSK
          EnableDisableTRX(1)
          RadioButton868MHzFSK.Value = True
        Case recType86830
          EnableDisableTRX(1)
          RadioButton86830MHz.Value = True
          chkTRXLaCrosse.Enabled = True
        Case recType86830FSK
          EnableDisableTRX(1)
          RadioButton86830MHzFSK.Value = True
          chkTRXHideki.Enabled = True
        Case recType86835
          EnableDisableTRX(1)
          RadioButton86835MHz.Value = True
          chkTRXFS20.Enabled = True
        Case recType86835FSK
          EnableDisableTRX(1)
          RadioButton86835MHzFSK.Value = True
          chkTRXProGuard.Enabled = True
        Case recType86895
          EnableDisableTRX(1)
          RadioButton86895MHz.Value = True
          chkTRXVisonic.Enabled = True
      End Select

      aEnabledProtocols = hRFXComTRX.GetEnabledProtocols()
      chkTRXUndec.Value = aEnabledProtocols.Exist("Undec")
      chkTRXX10.Value = aEnabledProtocols.Exist("X10")
      chkTRXARC.Value = aEnabledProtocols.Exist("ARC")
      chkTRXAC.Value = aEnabledProtocols.Exist("AC")
      chkTRXHEEU.Value = aEnabledProtocols.Exist("HomeEasyEU")
      chkTRXMeiantech.Value = aEnabledProtocols.Exist("Meiantech")
      chkTRXOregon.Value = aEnabledProtocols.Exist("Oregon")
      chkTRXATI.Value = aEnabledProtocols.Exist("ATI")
      chkTRXVisonic.Value = aEnabledProtocols.Exist("Visonic")
      chkTRXMertik.Value = aEnabledProtocols.Exist("Mertik")
      chkTRXAD.Value = aEnabledProtocols.Exist("AD")
      chkTRXHideki.Value = aEnabledProtocols.Exist("Hideki")
      chkTRXLaCrosse.Value = aEnabledProtocols.Exist("LaCrosse")
      chkTRXFS20.Value = aEnabledProtocols.Exist("FS20")
      chkTRXProGuard.Value = aEnabledProtocols.Exist("ProGuard")
      chkTRXBlindsT0.Value = aEnabledProtocols.Exist("BlindsT0")
      chkTRXBlindsT1.Value = aEnabledProtocols.Exist("BlindsT1")
      chkTRXAE.Value = aEnabledProtocols.Exist("AE")
      chkTRXRubicson.Value = aEnabledProtocols.Exist("RUBiCSON")
      chkTRXFineOffset.Value = aEnabledProtocols.Exist("FineOffset")
      chkTRXLighting4.Value = aEnabledProtocols.Exist("Lighting4")
      chkTRXRSL.Value = aEnabledProtocols.Exist("RSL")
      chkTRXByronSX.Value = aEnabledProtocols.Exist("ByronSX")
      chkTRXRFU6.Value = aEnabledProtocols.Exist("RFU6")

      txtTRXFirmwareVersion.Text = hRFXComTRX.GetFirmwareVersion()
      txtTRXHardwareVersion.Text = hRFXComTRX.GetHardwareVersion()
    Else
      EnableDisableTRX(0)
      txtTRXStatus.Text = ("Not Connected")
      txtTRXStatus.Foreground = &HFF0000
      btnTRXShowError.Visible = True
      $TRXError = hRFXComTRX.ErrorText
    Endif
  Endif

End

Public Sub cmbRXList_Click()

  Try hRFXComRX = Plugin.GetPluginObject("RFXComRX", $RXInstanceList[cmbRXList.Index]).Interface
  If Error Then
    txtRXStatus.Text = ("Not Connected")
    txtRXStatus.Foreground = &HFF0000
    btnRXShowError.Visible = True
    $RXError = "RFXComRX Object Instance doesn't exist, please report this as a bug"

    EnableDisableRX(False)
  Else
    EnableDisableRX(hRFXComRX.IsRunning)

    If hRFXComRX.IsRunning Then
      txtRXStatus.Text = ("Connected")
      txtRXStatus.Foreground = &H00FF00
      btnRXShowError.Visible = False
      $RXError = ""
    Else
      txtRXStatus.Text = ("Not Connected")
      txtRXStatus.Foreground = &HFF0000
      btnRXShowError.Visible = True
      $RXError = hRFXComRX.ErrorText
    Endif
  Endif

End

Public Sub cmbTXList_Click()

  Try hRFXComTX = Plugin.GetPluginObject("RFXComTX", $TXInstanceList[cmbTXList.Index]).Interface
  If Error Then
    txtTXStatus.Text = ("Not Connected")
    txtTXStatus.Foreground = &HFF0000
    btnTXShowError.Visible = True
    $TXError = "RFXComTX Object Instance doesn't exist, please report this as a bug"

    EnableDisableTX(False)
  Else
    EnableDisableTX(hRFXComTX.IsRunning)

    If hRFXComTX.IsRunning Then
      txtTXStatus.Text = ("Connected")
      txtTXStatus.Foreground = &H00FF00
      btnTXShowError.Visible = False
      $TXError = ""
    Else
      txtTXStatus.Text = ("Not Connected")
      txtTXStatus.Foreground = &HFF0000
      btnTXShowError.Visible = True
      $TXError = hRFXComTX.ErrorText
    Endif
  Endif

End

Public Sub btnTRXShowError_Click()

  Message.Error($TRXError)

End

Public Sub btnRXShowError_Click()

  Message.Error($RXError)  

End

Public Sub btnTXShowError_Click()

  Message.Error($TXError)  

End

Public Sub cmbSecurity1Type_Click()

  SetSecurity1Commands(cmbSecurity1Type.Index)

End

Public Sub cmbSecurity1ID1_Click()

  If cmbSecurity1Type.Index = 0 Then
    If cmbSecurity1ID2.Index <> cmbSecurity1ID1.Index Xor &HF Then
      cmbSecurity1ID2.Index = cmbSecurity1ID1.Index Xor &HF
    Endif
  Endif

End

Public Sub btnSecurity1Normal_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "NORMAL")

End

Public Sub btnSecurity1Alarm_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "ALARM")

End

Public Sub btnSecurity1Motion_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "MOTION")

End

Public Sub btnSecurity1ArmAway_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "ARM AWAY")

End

Public Sub btnSecurity1DisArm_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "DISARM")

End

Public Sub btnSecurity1NormalDelay_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "NORMAL DELAYED")

End

Public Sub btnSecurity1NoMotion_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "NO MOTION")

End

Public Sub btnSecurity1ArmAwayDelay_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "ARM AWAY DELAYED")

End

Public Sub btnSecurity1Light1On_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "LIGHT 1 ON")

End

Public Sub btnSecurity1Panic_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "PANIC")

End

Public Sub btnSecurity1ArmHome_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "ARM HOME")

End

Public Sub btnSecurity1Light1Off_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "LIGHT 1 OFF")

End

Public Sub btnSecurity1AlarmDelay_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "ALARM DELAYED")

End

Public Sub btnSecurity1EndPanic_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "END PANIC")

End

Public Sub btnSecurity1ArmHomeDelay_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "ARM HOME DELAYED")

End

Public Sub btnSecurity1Light2On_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "LIGHT 2 ON")

End

Public Sub btnSecurity1Dark_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "DARK")

End

Public Sub btnSecurity1BattLow_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "BATTERY LOW")

End

Public Sub btnSecurity1Light2Off_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "LIGHT 2 OFF")

End

Public Sub btnSecurity1Light_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "LIGHT")

End

Public Sub btnSecurity1Pair_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "PAIR")

End

Public Sub btnSecurity1NormalTamper_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "NORMAL+TAMPER")

End

Public Sub btnSecurity1NormalDelayTamper_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "NORMAL DELAYED+TAMPER")

End

Public Sub btnSecurity1AlarmTamper_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "ALARM+TAMPER")

End

Public Sub btnSecurity1AlarmDelayTamper_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "ALARM DELAYED+TAMPER")

End

Public Sub btnSecurity1MotionTamper_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "MOTION+TAMPER")

End

Public Sub btnSecurity1NoMotionTamper_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "NO MOTION+TAMPER")

End

Public Sub btnSecurity1IRbeam_Click()

  hRFXComTRX.Security1(cmbSecurity1Type.Text, cmbSecurity1ID1.Text & cmbSecurity1ID2.Text & cmbSecurity1ID3.Text, "IRBEAM")

End

Public Sub cmbLighting5Type_Click()

  SetLighting5Commands(cmbLighting5Type.Index)

End

Public Sub btnLighting5ColorPlus_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "COLOR+")

End

Public Sub btnLighting5ColorMin_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "COLOR-")

End

Public Sub btnLighting5Learn_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "LEARN")

End

Public Sub btnLighting5DimPlus_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "DIM+")

End

Public Sub btnLighting5DimMin_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "DIM-")

End

Public Sub btnLighting5Power_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "POWER")

End

Public Sub btnLighting5Light_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "LIGHT")

End

Public Sub btnLighting5Bright_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "BRIGHT")

End

Public Sub btnLighting5Dim_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "DIM")

End

Public Sub btnLighting5ModePlus_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MODE+")

End

Public Sub btnLighting5ModeMin_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MODE-")

End

Public Sub btnLighting5SpeedPlus_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "SPEED+")

End

Public Sub btnLighting5SpeedMin_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "SPEED-")

End

Public Sub btnLighting5100_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "100%")

End

Public Sub btnLighting550_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "50%")

End

Public Sub btnLighting525_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "25%")

End

Public Sub btnLighting5ColourCycle_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "COLOURCYCLE " & slLighting5Level.Value)

End

Public Sub btnLighting5ColourTone_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "COLOURTONE " & slLighting5Level.Value)

End

Public Sub btnLighting5ColourPal_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "COLOURPALETTE " & slLighting5Level.Value)

End

Public Sub btnLighting5Set_Click()

  Select Case cmbLighting5Type.Index
    Case 0 ' LightwaveRF
      hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "DIM " & slLighting5Level.Value)
    Case 5 ' RGBTRC01
      hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "COLOR " & slLighting5Level.Value)
  End Select

End

Public Sub btnLighting5GroupOff_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "GROUP OFF")

End

Public Sub btnLighting5ToggleG1_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ON")

End

Public Sub btnLighting5ToggleG2_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ON2")

End

Public Sub btnLighting5ToggleG3_Click()

  hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ON3")

End

Public Sub cmbFanType_Click()

  SetFanCommands(cmbFanType.Index)

End

Public Sub btnFanTimer_Click()

  hRFXComTRX.Fan(cmbFanType.Text, cmbFanID1.Text & cmbFanID2.Text & cmbFanID3.Text, "TIMER")

End

Public Sub btnFanLearn_Click()

  hRFXComTRX.Fan(cmbFanType.Text, cmbFanID1.Text & cmbFanID2.Text & cmbFanID3.Text, "LEARN")

End

Public Sub btnFanConfirm_Click()

  hRFXComTRX.Fan(cmbFanType.Text, cmbFanID1.Text & cmbFanID2.Text & cmbFanID3.Text, "CONFIRM")

End

Public Sub btnFanPlus_Click()

  hRFXComTRX.Fan(cmbFanType.Text, cmbFanID1.Text & cmbFanID2.Text & cmbFanID3.Text, "+")

End

Public Sub btnFanMinus_Click()

  hRFXComTRX.Fan(cmbFanType.Text, cmbFanID1.Text & cmbFanID2.Text & cmbFanID3.Text, "-")

End

Public Sub btnFanLight_Click()

  hRFXComTRX.Fan(cmbFanType.Text, cmbFanID1.Text & cmbFanID2.Text & cmbFanID3.Text, "LIGHT")

End
