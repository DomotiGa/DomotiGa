' Gambas class file

' Description:
' FToolsPLCBUSCmdr.class
' PLCBUS Commander for testing and programming modules/scenes.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public rResultInterfaces As Result
Public sCommand As String
Private hPLCBUS As Object

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' disable send button in client mode
  Try hPLCBUS = Plugin.GetPluginObject("PLCBUS", 1).Interface
  If Error Then
    hPLCBUS = Null
  Endif

End

Public Sub PLCBUSAddress() As String

  Return cmbHouseCode.Text & Format(spDeviceCode.Value, "00")

End

Public Sub btnClose_Click()

  Me.Close

End

Public Sub btnAllLightsOn_Click()

  SendCmd("ALL_LIGHTS_ON", chkAck.Value)

End

Public Sub btnAllLightsOff_Click()

  SendCmd("ALL_LIGHTS_OFF", chkAck.Value)

End

Public Sub btnAllUnitsOn_Click()

  SendCmd("ALL_UNITS_ON", chkAck.Value)

End

Public Sub btnAllUnitsOff_Click()

  SendCmd("ALL_UNITS_OFF", chkAck.Value)

End

Public Sub btnOn_Click()

  SendCmd("ON", chkAck.Value)

End

Public Sub btnOff_Click()

  SendCmd("OFF", chkAck.Value)

End

Public Sub btnDim_Click()

  SendCmd("DIM " & spRate.Value, chkAck.Value)

End

Public Sub btnBright_Click()

  SendCmd("BRIGHT " & spRate.Value, chkAck.Value)

End

Public Sub btnGetID_Click()

  SendCmd("STATUS_REQUEST", False)

End

Public Sub slDim_MouseUp()

  SendCmd("PRESETDIM " & slDim.Value & " " & spRate.Value, chkAck.Value)

End

Public Sub btnGetSignal_Click()

  SendCmd("GET_SIGNAL_STRENGTH", chkAck.Value)

End

Public Sub btnGetNoise_Click()

  SendCmd("GET_NOISE_STRENGTH", chkAck.Value)

End

Public Sub btnSceneSetup_Click()

  SendSceneCmd("SCENE_ADDR_SETUP", PLCBUSSceneCmd())

End

Public Sub btnEraseScene_Click()

  Select Message.Question(("Are you sure that you want to delete scene ") & PLCBUSSceneAddress() & "?", ("Yes"), ("No"))
    Case 1
      SendSceneCmd("SCENE_ADDR_ERASE")
  End Select

End

Public Sub btnEraseSceneAll_Click()

  Select Message.Question(("Are you sure that you want to delete all scenes?"), ("Yes"), ("No"))
    Case 1
      SendSceneCmd("ALL_SCENE_ADDR_ERASE")
  End Select

End

Public Sub PLCBUSSceneCmd() As Byte

  Select cmbSceneCmd.Index
    Case 0
      Return &H02
    Case 1
      Return &H03
  End Select

End

Public Sub PLCBUSSceneAddress() As String

  Return cmbSceneCode.Text & Format(spSceneDevice.Value, "00")

End

Private Sub SendCmd(sCmd As String, bAck As Boolean)

  If Main.bServer And If hPLCBUS Then
    hPLCBUS.PLCBUSTXCommand(PLCBUSAddress(), sCmd, bAck, 0)
  Else
    Client.PLCBUSTXCommand(PLCBUSAddress(), sCmd, bAck, 0)
  Endif

End

Private Sub SendSceneCmd(sCmd As String, Optional bData As Byte)

  If Main.bServer And If hPLCBUS Then
    hPLCBUS.PLCBUSTXCommand(PLCBUSSceneAddress(), sCmd, False, bData)
  Else
    Client.PLCBUSTXCommand(PLCBUSSceneAddress(), sCmd, False, bData)
  Endif

End
