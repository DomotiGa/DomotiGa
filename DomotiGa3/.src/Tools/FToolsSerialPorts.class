' Gambas class file

' Description:
' FToolsSerialPorts.class
' Shows which serial ports are available and which are in use.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)

  ' tweak tableview
  With tbvPorts
    .Columns.Count = 2
    .Columns[0].Title = ("Serial Device")
    .Columns[0].Width = 100
    .Columns[1].Title = ("In use by")
    .Columns[1].Width = 160
  End With

  ScanPorts()

End

Public Sub btnClose_Click()

  Me.Close

End

Public Sub ScanPorts()

  Dim sSerialPort, sGroup As String
  Dim sSerialPorts As String[]
  Dim iCount As Integer
  Dim rResult As Result
  Dim sInterfaces As String[] = ["ctx35", "irman", "sms", "gps", "temp08", "visca", "rfxcomrx", "rfxcomtx", "weeder", "dsc", "domotica", "plugwise", "openzwave", "jeelabs", "plcbus", "onkyo", "denon", "currentcost", "ledmatrix", "opentherm", "rfxcomtrx", "pioneer", "visonic", "smartmeter"]

  ' fill array with available ports
  sSerialPorts = Dir("/dev", txtSearchPattern.Text)
  sSerialPorts.Sort

  ' set no of rows to number of ports found
  tbvPorts.Rows.Count = sSerialPorts.Count

  For Each sSerialPort In sSerialPorts

    sSerialPort = "/dev" &/ sSerialPort
    tbvPorts[iCount, 0].Text = sSerialPort
    tbvPorts[iCount, 1].Text = ("(unassigned)")

    For Each sGroup In sInterfaces
      rResult = Main.hDB.Exec("SELECT * FROM " & DB.Quote("settings_" & sGroup) & " WHERE id = 1")

      If (rResult.Count >= 1) Then
        For Each rResult
          If rResult!serialport = sSerialPort And sGroup <> "rfxcomrx" And sGroup <> "rfxcomtx" And sGroup <> "onkyo" And sGroup <> "denon" Then
            sGroup = Upper$(sGroup)
            If rResult!enabled = False Then
              sGroup &= (" (disabled)")
              Continue
            Endif
            tbvPorts[iCount, 1].Text = sGroup
          Endif
          If sGroup = "rfxcomrx" Then
            If rResult!serialport = sSerialPort And rResult!type = "serial" Then
              sGroup = Upper$(sGroup)
              If rResult!enabled = False Then
                sGroup &= (" (disabled)")
                Continue
              Endif
              tbvPorts[iCount, 1].Text = sGroup
            Endif
          Endif
          If sGroup = "rfxcomtx" Then
            If rResult!serialport = sSerialPort And rResult!type = "serial" Then
              sGroup = Upper$(sGroup)
              If rResult!enabled = False Then
                sGroup &= (" (disabled)")
                Continue
              Endif
              tbvPorts[iCount, 1].Text = sGroup
            Endif
          Endif
          If sGroup = "onkyo" Then
            If rResult!serialport = sSerialPort And rResult!type = "serial" Then
              sGroup = Upper$(sGroup)
              If rResult!enabled = False Then
                sGroup &= (" (disabled)")
                Continue
              Endif
              tbvPorts[iCount, 1].Text = sGroup
            Endif
          Endif
          If sGroup = "denon" Then
            If rResult!serialport = sSerialPort And rResult!type = "serial" Then
              sGroup = Upper$(sGroup)
              If rResult!enabled = False Then
                sGroup &= (" (disabled)")
                Continue
              Endif
              tbvPorts[iCount, 1].Text = sGroup
            Endif
          Endif
          If sGroup = "pioneer" Then
            If rResult!serialport = sSerialPort And rResult!type = "serial" Then
              sGroup = Upper$(sGroup)
              If rResult!enabled = False Then
                sGroup &= (" (disabled)")
                Continue
              Endif
              tbvPorts[iCount, 1].Text = sGroup
            Endif
          Endif
        Next
      Endif
    Next
    Inc iCount
  Next

End

Public Sub btnRescan_Click()

  ScanPorts()

End

Public Sub txtSearchPattern_KeyPress()

  ScanPorts()

End
