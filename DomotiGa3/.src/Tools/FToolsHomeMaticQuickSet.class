' Gambas class file

' Description:
' FToolsCULCmdr.class
' Allows injection of a packet to test CUL module parser.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Credits:
' JvdK.

' Read file called COPYING for license details.

Private $sValue As Integer
Private $iDeviceId As Integer

Public Sub Form_Open()

  Me.Move(FMain.X + 50, FMain.Y + 70)
  LoadDevices()
  spbTemp.Hide
  lcdTemp.Hide

End

Public Sub Run() As Boolean

  Return Not Me.ShowModal()

End

Public Sub btnCancel_Click()

  Me.Close

End

Public Sub spbTemp_Change()

  $sValue = spbTemp.Value
  lcdTemp.Value = spbTemp.Value / 2

End

Public Sub btnSend_Click()

  Plugin.SendCommand("HomeMatic", 1, $iDeviceId, cmbCommand.Text & " " & Str$(lcdTemp.Value))

End

Public Sub cmbDevices_Click()

  cmbCommand.Clear
  cmbCommand.Refresh

  Try $iDeviceId = Devices.FindIdForDevice(cmbDevices.Text)
  If $iDeviceId Then
    LoadCommands($iDeviceId) ' load the supported commands
  Else
    txtModel.Text = ""
    spbTemp.Hide
    lcdTemp.Hide
  Endif

End

Public Sub LoadDevices()

  Dim rResultDevices As Result

  rResultDevices = Devices.FindDevicesForInterface(Devices.FindInterface("HomeMatic LAN Adapter"), 1)
  ' add them to the dropdown
  If Not Error Then
    If rResultDevices.Count > 0 Then
      For Each rResultDevices
        cmbDevices.Add(rResultDevices!name)
      Next
      cmbDevices.Add("Select Device", 0)
    Else
      Message(("No enabled devices found!"))
    Endif
  Endif

End

' load the allowed and supported commandset for this device, prefill with current value
Public Sub LoadCommands(iDeviceId As Integer)

  Dim rResult As Result

  rResult = Main.hDB.Exec("SELECT type, commands FROM devicetypes_homematic WHERE moduleref = &1", Devices.FindDeviceTypeForDevice(iDeviceId))
  cmbCommand.List = Split(rResult!commands)
  cmbCommand.Add("Select Command", 0)
  txtModel.text = rResult!type
  If txtModel.text = "HM_CC_TC" Then
    spbTemp.Show
    lcdTemp.Show
    spbTemp.Value = (Devices.GetCurrentValueForDevice(iDeviceId, 1) * 2) ' thermostat specific
  Endif

End
