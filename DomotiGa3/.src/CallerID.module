' Gambas module file

' Description:
' CallerID.module
' Support for CallerID related functions.

' Development Status:
' Just started.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' return name of caller if known
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function ReturnCallerID(sPhoneNo As String) As String

  Dim sName, sPhoneNoPrefix As String

  ' we expect Len(sPhoneNo) <= 4 are internal PBX extension numbers
  If Len(sPhoneNo) Then
    If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Searching contacts for number '") & sPhoneNo & "'.")
    sName = FindCallerNameContact(sPhoneNo)
    If (sName = "") And (Len(sPhoneno) > 4) Then
      sPhoneNoPrefix = Main.sCallerIDNationalPrefix & Main.sCallerIDAreaCode & sPhoneNo
      If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Searching contacts for number '") & sPhoneNoPrefix & "'.")
      sName = FindCallerNameContact(sPhoneNoPrefix)
    Endif
    If (sName = "") And (Len(sPhoneNo) > 4) Then
      If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Searching online for number '") & sPhoneNo & "'.")
      sName = FindCallerNameOnline(sPhoneNo)
    Endif
    If (sName = "") And (Len(sPhoneNo) > 4) Then
      If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Searching contacts for number '") & sPhoneNoPrefix & "'.")
      sName = FindCallerNameOnline(sPhoneNoPrefix)
    Endif
    If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Found name '") & sName & "'.")
    Return IIf(Len(sName), sName, ("Unknown"))
  Else
    If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] No number to look for! (Hidden)"))
    Return ("[Hidden Number]")
  Endif

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' look through contact tables for caller name
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function FindCallerNameContact(sPhoneNo As String) As String

  Dim rResult As Result
  Dim sName As String

  If Len(sPhoneNo) > 4 Then sPhoneNo = "%" & sPhoneNo
  rResult = Main.hDB.Exec("SELECT name, cidphone FROM contacts WHERE phoneno LIKE &1", sPhoneNo)
  If rResult.Count Then
    If rResult!cidphone Then
      sName = rResult!cidphone
    Else
      sName = rResult!name
    Endif
  Endif
  rResult = Main.hDB.Exec("SELECT name cidmobile FROM contacts WHERE mobileno LIKE &1", sPhoneNo)
  If rResult.Count Then
    If rResult!cidmobile Then
      sName = rResult!cidmobile
    Else
      sName = rResult!name
    Endif
  Endif

  Return sName

End

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' search online database for caller name
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Public Function FindCallerNameOnline(sPhoneNo As String, Optional bUpdate As Boolean) As String

  Dim hCallerID As New HttpClient
  Dim sURL, sBuffer, sName, sLine As String
  Dim aScan, aLine As String[]
  Dim rResult As Result
  Dim bCSVFound As Boolean

  sURL = "http://www.gevonden.cc/zoek2.php?sort=lastname&search=1&phonenumber=" & sPhoneNo & "&export=csv"
  If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Fetching URL '") & sURL & "'")
  hCallerID = New HttpClient As "CallerID"
  hCallerID.URL = sURL
  hCallerID.Async = False
  hCallerID.TimeOut = 3
  hCallerID.Get

  If hCallerID.Status < 0 Then
    ' site not reachable
    If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Error fething URL (") & hCallerID.Status & ")")
    Return ""
  Else
    ' success - read the data
    If Lof(hCallerID) Then sBuffer = Read #hCallerID, Lof(hCallerID)
    If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Response '") & sBuffer & "'")

    aLine = Split(sBuffer, "\n")
    For Each sLine In aLine
      ' does this line starts with a "
      If Left(sLine, 1) = Chr(34) Then
        bCSVFound = True
        Break
      Endif
    Next

    If bCSVFound Then
      ' "NUMBER";SURNAME;FIRSTNAME;ADDRESS;ZIPCODE;CITY
      aScan = Scan(sLine, "*;*;*;*;*;*")
      If aScan.Count = 6 Then
        If Len(aScan[2]) > 2 Then
          sName = aScan[2] & " " & aScan[1]
        Else
          sName = aScan[1]
        Endif
      Else
        If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] CSV line doesn't have correct format."))
        Return ""
      Endif
    Else
      If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Response didn't contain correct line."))
      Return ""
    Endif

    ' update contact info
    If bUpdate Then
      Try rResult = Main.hDB.Exec("SELECT * FROM contacts WHERE phoneno LIKE &1", sPhoneNo)
      If rResult.Count Then
        Try rResult = Main.hDB.Exec("UPDATE contacts SET name = &2, address = &3, zipcode = &4, city = &5 WHERE id = &1", rResult!id, sName, aScan[3], aScan[4], aScan[5])
      Else
        ' add new contact record to database
        Main.hDB.Begin()
        rResult = Main.hDB.Create("contacts")
        rResult!name = sName
        rResult!address = aScan[3]
        rResult!zipcode = aScan[4]
        rResult!city = aScan[5]
        rResult!phoneno = sPhoneNo
        rResult!firstname = aScan[2]
        rResult!surname = aScan[1]
        rResult!lastseen = Now()
        rResult!firstseen = Now()
        rResult!callnr = (1)
        rResult.Update()
        Main.hDB.Commit()
        Return "Added record.\n\nName:\n" & sName & "\n\n" & "Address:\n" & aScan[3] & "\n" & aScan[4] & "\n" & aScan[5] & "\n\nNumber:\n" & sPhoneNo
      Endif
      Return "Updated record.\n\nName:\n" & sName & "\n\n" & "Address:\n" & aScan[3] & "\n" & aScan[4] & "\n" & aScan[5] & "\n\nNumber:\n" & sPhoneNo
    Endif

    If Not Main.bCallerIDAutoCreateContacts Then Return sName & (" from ") & aScan[5]

    ' add new contact record to database
    Main.hDB.Begin()
    rResult = Main.hDB.Create("contacts")
    rResult!name = sName
    rResult!address = aScan[3]
    rResult!zipcode = aScan[4]
    rResult!city = aScan[5]
    rResult!phoneno = sPhoneNo
    rResult!firstname = aScan[2]
    rResult!surname = aScan[1]
    rResult!lastseen = Now()
    rResult!firstseen = Now()
    rResult!callnr = (1)
    rResult!comments = ("Auto created contact with data found online.")
    rResult.Update()
    Main.hDB.Commit()
    If Main.bCallerIDDebug Then Main.WriteDebugLog(("[CallerID] Auto created contact record for '") & sName & (" from ") & aScan[5] & "'")
    Return sName & (" from ") & aScan[5]
  Endif

Catch ' some errors
  Main.WriteLog(("[CallerID] Error: ") & ERROR.Text & " at " & ERROR.Where)

End
