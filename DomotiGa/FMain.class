' Gambas class file

' Description:
' FMain.class
' Main GUI window

' DomotiGa - an open source home automation program
' Copyright(C) 2008-2009 Ron Klinkien

' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. See the
' GNU General PUBLIC License for more details.

' You should have received a copy of the GNU General PUBLIC License
' along with this program. If not, see <http://www.gnu.org/licenses/>.

PUBLIC hToolButton AS ToolButton

PUBLIC SUB Form_Open()

  ' open splash/login screen
  FSplashScreen.ShowModal

  ME.Text = "DomotiGa " & IIf(Main.bStandalone, "Standalone ", "Client ") & Application.Version & " - Open Source Home Automation" & " - (" & Main.sSQLDatabase & ")"
  IF Main.bMainDebug THEN Main.WriteLog(("Main Debug enabled."))
  Main.GlobalVar["Tagline"] = Main.Random_Text("remarks_tags")

  RefreshMenu()
  OpenMenu(Main.sStartpage)
  Sounds.PlaySnd("click.wav")

  ' display correct menu layout depending on program mode
  IF Main.bStandalone THEN
    MenuClient.Visible = FALSE
    MenuClientSettingsGUI.Visible = FALSE
    MenuClientSettingsMySQL.Visible = FALSE
    MenuSettingsMySQL.Visible = TRUE
    MenuSettingsGUI.Visible = TRUE
  ELSE
    MenuClient.Visible = TRUE
    MenuClientSettingsMySQL.Visible = TRUE
    MenuClientSettingsGUI.Visible = TRUE
    MenuSettingsMySQL.Visible = FALSE
    MenuSettingsGUI.Visible = FALSE
  END IF

END

PUBLIC SUB RefreshMenu()

  DIM rResult, rResultMenu AS Result
  DIM iCount, iPanel AS Integer

  VBoxMenu1.Height = 0
  VBoxMenu2.Height = 0
  VBoxMenu3.Height = 0
  VBoxMenu4.Height = 0

  ' fill toolpanel with enabled menu items
  rResultMenu = Main.hDB.Exec("SELECT * FROM menu_names")
  IF rResultMenu THEN
    IF (rResultMenu.Count >= 1) THEN
      FOR EACH rResultMenu
        rResult = Main.hDB.Exec("SELECT * FROM menu WHERE menu = &1 ORDER BY position", rResultMenu!id)
        IF NOT rResult THEN
          Message.Info(("Error: table 'menu' not found!"))
          RETURN
        END IF
        tpnMain[iPanel].Text = rResultMenu!name
        FOR iCount = 0 TO rResult.Max
          IF rResult!enabled = TRUE THEN
            IF rResult!menu = 1 THEN
              hToolButton = NEW ToolButton(VBoxMenu1) AS "MenuToolButton"
              VBoxMenu1.Height = VBoxMenu1.Height + 44
            ELSE IF rResult!menu = 2 THEN
              hToolButton = NEW ToolButton(VBoxMenu2) AS "MenuToolButton"
              VBoxMenu2.Height = VBoxMenu2.Height + 44
            ELSE IF rResult!menu = 3 THEN
              hToolButton = NEW ToolButton(VBoxMenu3) AS "MenuToolButton"
              VBoxMenu3.Height = VBoxMenu3.Height + 44
            ELSE
              hToolButton = NEW ToolButton(VBoxMenu4) AS "MenuToolButton"
              VBoxMenu4.Height = VBoxMenu4.Height + 44
            END IF
            WITH hToolButton
              .Name = rResult!id
              .Text = rResult!name
              .Background = Color.TextBackground
              .Font = Font["-1"]
              .Height = 42
              .Width = 111
              .Picture = Picture["images" &/ rResult!icon]
              .Tag = rResult!item
            END WITH
          END IF
          rResult.MoveNext
        NEXT
        INC iPanel
      NEXT
    ELSE
      Message(("No menu names found!"))
    END IF
  ELSE
    Message.Info(("Error: table 'menu_names' not found!"))
  END IF

END

PUBLIC SUB OpenMenu(sStart AS String)

  SELECT CASE sStart
    CASE "FHome"
      OpenPage(FHome)
    CASE "FControl"
      OpenPage(FControl)
    CASE "FFloorplans"
      OpenPage(FFloorplans)
    CASE "FLocations"
      OpenPage(FLocations)
    CASE "FDevices"
      OpenPage(FDevices)
    CASE "FSecurity"
      OpenPage(FSecurity)
    CASE "FClimate"
      OpenPage(FClimate)
    CASE "FHVAC"
      OpenPage(FHVAC)
    CASE "FEnergy"
      OpenPage(FEnergy)
    CASE "FEmail"
      OpenPage(FEmail)
    CASE "FEvents"
      OpenPage(FEvents)
    CASE "FPhone"
      OpenPage(FPhone)
    CASE "FCaptures"
      OpenPage(FCaptures)
    CASE "FBarcodes"
      OpenPage(Fbarcodes)
    CASE "FCamera"
      OpenPage(FCamera)
    CASE "FNews"
      OpenPage(Fnews)
    CASE "FTVGuide"
      OpenPage(FTVGuide)
    CASE "FWeather"
      OpenPage(FWeather)
    CASE "FLogfiles"
      OpenPage(FLogfiles)
    CASE "FDebug"
      OpenPage(FDebug)
    CASE "FServerStats"
      OpenPage(FServerStats)
    CASE "FDSC"
      OpenPage(FDSC)
    CASE ELSE
      OpenPage(FHome)
  END SELECT

END

PUBLIC SUB UpdateStatusPanel()

  ' display correct modes
  txtMode.Text = Main.GlobalVar["House_Mode"]
  txtSunRise.Text = Main.GlobalVar["Sunrise"]
  txtSunSet.Text = Main.GlobalVar["Sunset"]
  ' update e-mail/voice counters
  Main.UpdateCounters()
  ' hide leds of disabled interfaces
  IF Main.bOneWireEnabled THEN
    FMain.tbOneWire.Visible = TRUE
    FMain.pbOneWire.Visible = TRUE
  ELSE
    FMain.tbOneWire.Visible = FALSE
    FMain.pbOneWire.Visible = FALSE
  END IF
  IF Main.bDSCEnabled THEN
    FMain.tbDSC.Visible = TRUE
    FMain.pbDSC.Visible = TRUE
    FMain.MenuToolsDSCPanel.Enabled = TRUE
  ELSE
    FMain.tbDSC.Visible = FALSE
    FMain.pbDSC.Visible = FALSE
    FMain.MenuToolsDSCPanel.Enabled = FALSE
  END IF
  IF Main.bRFXComRXEnabled OR IF Main.bRFXComTXEnabled THEN
    FMain.tbRFXCom.Visible = TRUE
    FMain.pbRFXCom.Visible = TRUE
    FMain.MenuToolsRFXComCmdr.Enabled = TRUE
  ELSE
    FMain.tbRFXCom.Visible = FALSE
    FMain.pbRFXCom.Visible = FALSE
    FMain.MenuToolsRFXComCmdr.Enabled = FALSE
  END IF
  IF Main.bCTX35Enabled
    FMain.tbX10.Visible = TRUE
    FMain.pbX10.Visible = TRUE
    FMain.MenuToolsX10Cmdr.Enabled = TRUE
  ELSE
    FMain.tbX10.Visible = FALSE
    FMain.pbX10.Visible = FALSE
    FMain.MenuToolsX10Cmdr.Enabled = FALSE
  END IF
  IF Main.bRFXComTXEnabled THEN FMain.MenuToolsX10Cmdr.Enabled = TRUE
  IF Main.bEIBEnabled
    FMain.tbEIB.Visible = TRUE
    FMain.pbEIB.Visible = TRUE
  ELSE
    FMain.tbEIB.Visible = FALSE
    FMain.pbEIB.Visible = FALSE
  END IF
  IF Main.bZWaveEnabled THEN
    FMain.tbZWave.Visible = TRUE
    FMain.pbZWave.Visible = TRUE
    FMain.MenuToolsZWaveCmdr.Enabled = TRUE
  ELSE
    FMain.tbZWave.Visible = FALSE
    FMain.pbZWave.Visible = FALSE
    FMain.MenuToolsZWaveCmdr.Enabled = FALSE
  END IF
  IF Main.bDomoticaEnabled THEN
    FMain.MenuToolsDomoCmdr.Enabled = TRUE
  ELSE
    FMain.MenuToolsDomoCmdr.Enabled = FALSE
  END IF
  ' todo
  IF NOT Main.bStandalone THEN
    FMain.MenuToolsX10Cmdr.Enabled = FALSE
    FMain.MenuToolsDSCPanel.Enabled = FALSE
    FMain.MenuToolsRFXComCmdr.Enabled = FALSE
  END IF

END

PUBLIC SUB Form_Resize()

  ' sidepanel
  IF spnMain.Hidden THEN
    spnMain.Move(1, 1, 8, ME.ClientHeight - 33)
  ELSE
    spnMain.Move(1, 1, 152, ME.ClientHeight - 33)
  END IF
  ' toolpanel
  tpnMain.Move(1, 1, 140, ME.ClientHeight - 35)
  ScrollViewMenu1.Move(0, 1, 136, ME.ClientHeight - 100)
  ScrollViewMenu2.Move(0, 1, 136, ME.ClientHeight - 100)
  ScrollViewMenu3.Move(0, 1, 136, ME.ClientHeight - 100)
  ScrollViewMenu4.Move(0, 1, 136, ME.ClientHeight - 100)
  ' status panel & bar
  pnlStatus.Move(2, ME.ClientHeight - 29, ME.ClientWidth - 4, 24)
  hbStatus.Move(4, 1, ME.ClientWidth - 12, 15)
  ' workspace
  wrkMain.Move(spnMain.Width + 2, 3, ME.ClientWidth - spnMain.Width - 4, ME.ClientHeight - 35)

END

PUBLIC SUB spnMain_Arrange()

  ' resize workspace
  wrkMain.Move(spnMain.Width + 2, 3, ME.ClientWidth - spnMain.Width - 4, ME.ClientHeight - 35)

END

PUBLIC SUB MenuToolbutton_Click()

  OpenMenu(LAST.tag)

END

' load a page onto the workspace, or give already loaded page focus.
PUBLIC SUB OpenPage(hForm AS Form)

  wrkMain.Add(hForm)
  wrkMain.ActiveWindow = hForm

END

PUBLIC SUB Form_Close()

  ' exit program
  Main.CloseAll()
  FMain.Close

END

PUBLIC SUB MenuLogout_Click()

  Main.bLogOut = TRUE
  ' show splash screen, load program
  FSplashScreen.ShowModal

END

PUBLIC SUB MenuQuit_Click()

  ' exit program
  Main.CloseAll()
  FMain.Close

END

' about menu entry
PUBLIC SUB MenuAbout_Click()

  FAbout.Show

END

PUBLIC SUB MenuSupport_Click()

  Desktop.Open("http://www.domotiga.nl")

END

PUBLIC SUB MenuDonate_Click()

  Desktop.Open("https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=NT48KZRT7F3FA&lc=US&item_name=DomotiGa%20Open%20Source%20Project&item_number=domotiga&currency_code=EUR&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted")

END

' device menu entries
PUBLIC SUB MenuDeviceModules_Click()

  FEditModulesGroups.Show

END

PUBLIC SUB MenuEditDevices_Click()

  FDeviceEditor.bAddDevice = TRUE
  FDeviceEditor.Show

END

PUBLIC SUB MenuDevicesList_Click()

  OpenPage(FDevices)

END

PUBLIC SUB MenuEditEvents_Click()

  FEventEditor.bAddEvent = TRUE
  FEventEditor.Show

END

PUBLIC SUB MenuEventsList_Click()

  OpenPage(FEvents)

END

PUBLIC SUB MenuEditTriggers_Click()

  FTriggerEditor.bAddTrigger = TRUE
  FTriggerEditor.Show()

END

PUBLIC SUB MenuEditConditions_Click()

  FConditionEditor.bAddCondition = TRUE
  FConditionEditor.Show()

END

PUBLIC SUB MenuEditActions_Click()

  FActionEditor.bAddAction = TRUE
  FActionEditor.Show()

END

' tools menu entries
PUBLIC SUB MenuToolsX10Cmdr_Click()

  FToolsX10Cmdr.Show

END

PUBLIC SUB MenuToolsSerialMonitor_Click()

  FToolsSerialMon.Show

END

PUBLIC SUB MenuToolsSerialPorts_Click()

  FToolsSerialPorts.Show

END

PUBLIC SUB MenuToolsRFXComCmdr_Click()

  FToolsRFXComCmdr.Show

END

PUBLIC SUB MenuToolsDatabaseAdmin_Click()

  FToolsDatabaseAdmin.Show

END

PUBLIC SUB MenuToolsBluetoothBrowser_Click()

  FToolsBluetoothBrowser.Show

END

PUBLIC SUB MenuToolsDSCPanel_Click()

  OpenPage(FDSC)

END

PUBLIC SUB MenuToolsDomoCmdr_Click()

  ' FToolsDomoCmdr.Show

END

PUBLIC SUB MenuToolsZWaveCmdr_Click()

  FToolsZWaveCmdr.Show

END

' setup menu entries
PUBLIC SUB MenuSettingsMySQL_Click()

  FSettingsMySQL.Show

END

PUBLIC SUB MenuSettingsGUI_Click()

  FSettingsGUI.Show

END

PUBLIC SUB MenuSettingsMain_Click()

  FSettingsMain.Show

END

PUBLIC SUB MenuSettingsAstro_Click()

  FSettingsAstro.Show

END

PUBLIC SUB MenuSettingsEmail_Click()

  FSettingsEmail.Show

END

PUBLIC SUB MenuSettingsGmail_Click()

  FSettingsGmail.Show

END

PUBLIC SUB MenuSettingsWebServer_Click()

  FSettingsWebServer.Show

END

PUBLIC SUB MenuSettingsTVGuide_Click()

  FSettingsTVGuide.Show

END

PUBLIC SUB MenuSettingsXMLRPC_Click()

  FSettingsXMLRPC.Show

END

PUBLIC SUB MenuSettingsSound_Click()

  FSettingsSound.Show

END

PUBLIC SUB MenuSettingsVoiceText_Click()

  FSettingsVoiceText.Show

END

PUBLIC SUB MenuSettingsAIBO_Click()

  FSettingsAIBO.Show

END

PUBLIC SUB MenuSettingsCTX35_Click()

  FSettingsCTX35.Show

END

PUBLIC SUB MenuSettingsOneWire_Click()

  FSettingsOneWire.Show

END

PUBLIC SUB MenuSettingsSMS_Click()

  FSettingsSMS.Show

END

PUBLIC SUB MenuSettingsDSC_Click()

  FSettingsDSC.Show

END

PUBLIC SUB MenuSettingsGPS_Click()

  FSettingsGPS.Show

END

PUBLIC SUB MenuSettingsHeyu_Click()

  FSettingsHeyu.Show

END

PUBLIC SUB MenuSettingsRFXComRX_Click()

  FSettingsRFXComRX.Show

END

PUBLIC SUB MenuSettingsRFXComTX_Click()

  FSettingsRFXComTX.Show

END

PUBLIC SUB MenuSettingsUPS_Click()

  FSettingsUPS.Show

END

PUBLIC SUB MenuSettingsHDDTemp_Click()

  FSettingsHDDTemp.Show

END

PUBLIC SUB MenuSettingsCamVisca_Click()

  FSettingsCamVisca.Show

END

PUBLIC SUB MenuSettingsVideoServer_Click()

  FSettingsVideoServer.Show

END

PUBLIC SUB MenuSettingsBwiredMap_Click()

  FSettingsBwiredMap.Show

END

PUBLIC SUB MenuSettingsRRDTool_Click()

  FSettingsRRDTool.Show

END

PUBLIC SUB MenuSettingsAsterisk_Click()

  FSettingsAsterisk.Show

END

PUBLIC SUB MenuSettingsBluetooth_Click()

  FSettingsBluetooth.Show

END

PUBLIC SUB MenuSettingsWeeder_Click()

  FSettingsWeeder.Show

END

PUBLIC SUB MenuSettingsZWave_Click()

  FSettingsZWave.Show

END

PUBLIC SUB MenuSettingsServerStats_Click()

  FSettingsServerStats.Show

END

PUBLIC SUB MenuSettingsEIB_Click()

  FSettingsEIB.Show

END

PUBLIC SUB MenuSettingsIRMan_Click()

  FSettingsIRMan.Show

END

PUBLIC SUB MenuSettingsPlugwise_Click()

  FSettingsPlugwise.Show

END

PUBLIC SUB MenuSettingsFritzBox_Click()

  FSettingsFritzBox.Show()

END

PUBLIC SUB MenuSettingsDomotica_Click()

  FSettingsDomotica.Show()

END

PUBLIC SUB MenuSettingsDigitemp_Click()

  FSettingsDigitemp.Show()

END

PUBLIC SUB MenuSettingsTwitter_Click()

  FSettingsTwitter.Show

END

' edit menu entries
PUBLIC SUB MenuEditUsers_Click()

  FEditUsers.Show

END

PUBLIC SUB MenuEditContacts_Click()

  FEditContacts.Show

END

PUBLIC SUB MenuEditNewsWeather_Click()

  FEditNewsWeather.Show

END

PUBLIC SUB MenuEditNotify_Click()

  FEditNotify.Show

END

PUBLIC SUB MenuEditMenus_Click()

  FEditMenus.Show

END

PUBLIC SUB MenuClientSettingsMySQL_Click()

  FSettingsMySQL.Show

END

PUBLIC SUB MenuClientSettingsGUI_Click()

  FSettingsGUI.Show

END

PUBLIC SUB MenuSettingsCameras_Click()

  ' FSettingsCameras.Show

END

PUBLIC SUB MinValue(oObject AS Object, iMinValue AS Integer) AS Boolean

  IF oObject.Value < iMinValue THEN
    Balloon(("Minimal value is ") & iMinValue, oObject)
    RETURN FALSE
  ELSE
    RETURN TRUE
  END IF

END

PUBLIC SUB MenuSettingsOww_Click()

  FSettingsOww.Show

END

PUBLIC SUB MenuSettingsLIRC_Click()

  FSettingsLIRC.Show

END

PUBLIC SUB MenuSettingsPachube_Click()

  FSettingsPachube.Show

END
