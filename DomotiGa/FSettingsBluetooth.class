' Gambas class file

' Description:
' FSettingsBluetooth.class
' Settings form for Bluetooth Proximity Monitoring.

' Development Status:
' Just started to build this one.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)

  LoadSettings()
  btnSave.Enabled = FALSE

  IF Main.bBluetoothEnabled = FALSE THEN
    txtThreshold.Enabled = FALSE
    txtPollTime.Enabled = FALSE
    txtDevice.Enabled = FALSE
    btnBrowser.Enabled = FALSE
    chkDebug.Enabled = FALSE
  END IF

END

PUBLIC SUB btnCancel_Click()

  ME.Close

END

PUBLIC SUB btnDefaults_Click()

  DIM rResult AS Result

  rResult = Main.GetSettingTable("bluetooth", TRUE) ' get defaults
  IF rResult.Count THEN
    chkEnabled.Value = rResult!enabled
    txtThreshold.Text = rResult!threshold
    txtPollTime.Text = rResult!polltime
    txtDevice.Text = rResult!device
    chkDebug.Value = rResult!debug
  END IF
  btnSave.Enabled = TRUE

END

PUBLIC SUB btnBrowser_Click()

  FToolsBluetoothBrowser.Show()

END

PUBLIC SUB btnSave_Click()

  DIM rResult AS Result

  ' save new bluetooth settings
  rResult = Main.hDB.Exec("UPDATE settings_bluetooth SET device = &1, debug = &2, threshold = &3, polltime = &4, enabled = &5 WHERE id = 1", txtDevice.Text, chkDebug.Value, txtThreshold.Text, txtPollTime.Text, chkEnabled.Value)
  LoadSettings()
  IF Main.bServer THEN
    Main.Restart_Bluetooth()
  ELSE
    XMLClient.ModuleRestart("Bluetooth")
  END IF
  ME.Close

END

PUBLIC SUB chkEnabled_Click()

  txtDevice.Enabled = chkEnabled.Value
  txtThreshold.Enabled = chkEnabled.Value
  txtPollTime.Enabled = chkEnabled.Value
  btnBrowser.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value
  btnSave.Enabled = TRUE

END

PUBLIC SUB txtDevice_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB txtThreshold_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB txtPollTime_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB LoadSettings()

  DIM rResult AS Result

  rResult = Main.GetSettingTable("bluetooth") ' reload settings
  IF rResult.Count THEN
    Main.bBluetoothEnabled = rResult!enabled
    Main.sBluetoothDevice = rResult!device
    Main.iBluetoothPollTime = rResult!polltime
    Main.iBluetoothThreshold = rResult!threshold
    Main.bBluetoothDebug = rResult!debug
  END IF
  txtDevice.Text = Main.sBlueToothDevice
  txtThreshold.Text = Main.iBluetoothThreshold
  txtPollTime.Text = Main.iBluetoothPollTime
  chkDebug.Value = Main.bBluetoothDebug
  chkEnabled.Value = Main.bBluetoothEnabled

END

PUBLIC SUB chkDebug_Click()

  btnSave.Enabled = TRUE

END
