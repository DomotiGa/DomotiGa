' Gambas class file

' Description:
' FSplashScreen.class

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC tStartup AS Timer
PRIVATE bAuthOk AS Boolean

PUBLIC SUB _new()

  tStartup = NEW Timer AS "tStartup"
  tStartup.Delay = 100
  tStartup.Enabled = TRUE

END

PUBLIC SUB Form_Open()

  lblVersion.Text = "version " & Main.sProgramVersion
  ME.Height = 180
  Panel1.Height = 165
  prbStatus.Y = 120
  lblStatus.Y = 135
  txtCopyright.Text = "Copyright (C) 2008-" & Year(Now) & " Ron Klinkien"

END

PUBLIC SUB tStartup_Timer()

  tStartup.Enabled = FALSE
  IF Main.bLogout THEN
    Login()
  ELSE
    StartProgram()
  END IF

END

PRIVATE SUB StartProgram()

  SetProgressValue(0)

  lblStatus.Text = ("Checking directory structure ...")
  SetProgressValue(20)
  WAIT
  Main.Setup_BroadcastAddrs()
  Main.Setup_Logfiles()
  Main.DisplayProgramInfo()
  Main.CreateDirectoryTree()

  lblStatus.Text = ("Loading configuration ...")
  SetProgressValue(40)
  lblStatus.Text = ("Connecting to database ...")
  WAIT
  IF NOT Main.ConnectDatabase() THEN
    Message.Error(("Couldn't open the database (called '") & Main.sSQLDatabase & ("')\nCheck '") & Main.sSettings & ("' or create & load a database."))
    QUIT
  END IF

  SetProgressValue(60)
  lblStatus.Text = ("Loading modules ...")
  WAIT
  Main.Setup()

  SetProgressValue(80, ("Starting main program ..."))

  ' update house status
  IF NOT Main.GlobalVar["House_Mode"] THEN Main.SetGlobalVar("House_Mode", "normal")
  IF Len(Main.GlobalVar["Mute"]) < 1 THEN Main.SetGlobalVar("Mute", FALSE)
  Main.ChangeHouseMode(Main.GlobalVar["House_Mode"])
  Main.ChangeMuteMode(Main.GlobalVar["Mute"])

  IF Main.GlobalVar["EmailCount"] THEN Main.iNewMails = Main.GlobalVar["EmailCount"]
  IF Main.GlobalVar["CallCount"] THEN Main.iNewCalls = Main.GlobalVar["CallCount"]
  IF Main.GlobalVar["VoiceMailCount"] THEN Main.iNewVoicemails = Main.GlobalVar["VoiceMailCount"]

  Main.WriteLog(("Entering main program loop."))
  Main.bProgramStartup = TRUE
  SetProgressValue(100, ("Entering main program loop ..."))
  WAIT
  Main.Check_for_Action()
  Main.SetupTimers() ' start timers

  IF Main.bAuthEnabled THEN
    Login()
  ELSE
    bAuthOk = TRUE
    ME.Close
  END IF

END

PUBLIC SUB Login()

  ME.Height = 260
  Panel1.Height = 246
  lblStatus.Y = 215
  Label1.Visible = TRUE
  Label2.Visible = TRUE
  txtUser.Visible = TRUE
  txtPassword.Visible = TRUE
  btnLogin.Visible = TRUE
  prbStatus.Visible = FALSE
  btnLogin.Enabled = TRUE
  lblStatus.Text = ("Please authenticate yourself.")

  IF Main.GlobalVar["Last_User"] THEN
    txtUser.Text = Main.GlobalVar["Last_User"]
    txtPassword.SetFocus()
  END IF

END

PUBLIC SUB SetProgressValue(iValue AS Integer, OPTIONAL sStatus AS String)

  IF iValue > 100 THEN iValue = 100
  IF iValue < 0 THEN iValue = 0

  prbStatus.Value = iValue / 100
  IF sStatus THEN lblStatus.Text = sStatus

END

PUBLIC SUB btnLogin_Click()

  Enter()

END

PRIVATE SUB Enter()

  IF NOT txtUser.Text THEN
    lblStatus.Text = ("Please specify a Username.")
  ELSE
    IF CheckAuth() THEN
      bAuthOk = TRUE
      ME.Close
    ELSE
      lblStatus.Text = ("Sorry wrong Username and/or Password!")
    END IF
  END IF

END

PRIVATE SUB CheckAuth() AS Boolean

  DIM rResult AS Result

  TRY rResult = Main.hDB.Exec("SELECT * FROM users WHERE username = &1", txtUser.Text)
  IF rResult.Count THEN
    IF rResult!password = txtPassword.Text THEN
      Main.GlobalVar["Last_User"] = txtUser.Text
      Main.sActiveUser = txtUser.Text
      Main.sActiveUserID = rResult!id
      IF rResult!admin THEN
        Main.WriteLog(("Logged in as '") & txtUser.Text & ("' (Administrator)."))
        Main.bUserisAdmin = TRUE  ' hide non admin menu's
        FMain.MenuEdit.Visible = TRUE
        FMain.MenuDevices.Visible = TRUE
        FMain.MenuSetup.Visible = TRUE
        FMain.MenuTools.Visible = TRUE
      ELSE
        Main.WriteLog(("Logged in as '") & txtUser.Text & ("' (User)."))
        Main.bUserisAdmin = FALSE
        FMain.MenuEdit.Visible = FALSE
        FMain.MenuDevices.Visible = FALSE
        FMain.MenuSetup.Visible = FALSE
        FMain.MenuTools.Visible = FALSE
      END IF
      FMain.pbUser.Visible = TRUE
      FMain.txtUser.Text = LCase$(txtUser.Text)
      rResult = Main.hDB.Exec("UPDATE users SET lastlogin = &1 WHERE username = &2", Format(Now(), "yyyy-mm-dd hh:nn:ss"), txtUser.Text)
      FMain.MenuLogout.Visible = TRUE
      RETURN TRUE
    END IF
  END IF
  RETURN FALSE

END

PUBLIC SUB Form_Close()

  IF bAuthOk = FALSE THEN STOP EVENT

END
