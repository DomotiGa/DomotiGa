' Gambas class file

' Description:
' FToolsRFXComSimulate.class
' Allows injection of a packet to test RFXCom module parser.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2009 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)

  IF NOT Main.bRFXComRXEnabled THEN
    DisableRX()
    Main.Setup_DummyRFXCom()
  ELSE
    chkDebug.Value = Main.hRFXComRX.RFXComDebug
  END IF
  IF NOT Main.bRFXComTXEnabled THEN
    DisableTX()
  ELSE
    chkDebugTX.Value = Main.hRFXComTX.RFXComDebug
  END IF

END

PUBLIC SUB btnClose_Click()

  ME.Close

END

PUBLIC SUB btnInject_Click()

  IF Main.hRFXComRX THEN
    Main.hRFXComRX.bSimulate = TRUE
    IF txtPacketRX.Text THEN Main.hRFXComRX.Simulate(txtPacketRX.Text)
  END IF

END

PUBLIC SUB btnVersion_Click()

  Main.hRFXComRX.GetVersion()

END

PUBLIC SUB btnEnableAll_Click()

  Main.hRFXComRX.DisableProtocol("ALL")

END

PUBLIC SUB btnOregon_Click()

  Main.hRFXComRX.DisableProtocol("OREGON")

END

PUBLIC SUB btnX10_Click()

  Main.hRFXComRX.DisableProtocol("X10")

END

PUBLIC SUB btnARC_Click()

  Main.hRFXComRX.DisableProtocol("ARC")

END

PUBLIC SUB btnKoppla_Click()

  Main.hRFXComRX.DisableProtocol("KOPPLA")

END

PUBLIC SUB btnATI_Click()

  Main.hRFXComRX.DisableProtocol("ATI")

END

PUBLIC SUB btnVisonic_Click()

  Main.hRFXComRX.DisableProtocol("VISONIC")

END

PUBLIC SUB btnSomfy_Click()

  Main.hRFXComRX.DisableProtocol("SOMFY")

END

PUBLIC SUB btnHEUK_Click()

  Main.hRFXComRX.DisableProtocol("HEUK")

END

PUBLIC SUB btnHEEU_Click()

  Main.hRFXComRX.DisableProtocol("HEEU")

END

PUBLIC SUB chkDebug_Click()

  Main.hRFXComRX.RFXComDebug = chkDebug.Value

END

PUBLIC SUB DisableRX()

  btnSomfy.Enabled = FALSE
  btnVisonic.Enabled = FALSE
  btnATI.Enabled = FALSE
  btnKoppla.Enabled = FALSE
  btnARC.Enabled = FALSE
  btnX10.Enabled = FALSE
  btnOregon.Enabled = FALSE
  btnHEUK.Enabled = FALSE
  btnHEEU.Enabled = FALSE
  btnVersion.Enabled = FALSE
  btnEnableAll.Enabled = FALSE

END

PUBLIC SUB DisableTX()

  btnVersionTX.Enabled = FALSE
  btnEnableARCTX.Enabled = FALSE
  btnEnableHarrisonTX.Enabled = FALSE
  btnDisableX10TX.Enabled = FALSE
  btnX10On.Enabled = FALSE
  btnX10Off.Enabled = FALSE
  btnX10Dim.Enabled = FALSE
  btnX10Bright.Enabled = FALSE
  btnX10LightsOff.Enabled = FALSE
  btnX10LightsOn.Enabled = FALSE
  chkDebugTX.Enabled = FALSE
  spX10Device.Enabled = FALSE
  cmbX10Unit.Enabled = FALSE

END

' transmitter code below this line

PUBLIC SUB chkDebugTX_Click()

  Main.hRFXComTX.RFXComDebug = chkDebug.Value

END

PUBLIC SUB btnVersionTX_Click()

  Main.hRFXComTX.GetVersion()

END

PUBLIC SUB btnEnableARCTX_Click()

  Main.hRFXComTX.EnableARCTX()

END

PUBLIC SUB btnEnableHarrisonTX_Click()

  Main.hRFXComTX.EnableHarrisonTX()

END

PUBLIC SUB btnDisableX10TX_Click()

  Main.hRFXComTX.DisableX10TX()

END

PUBLIC SUB btnX10On_Click()

  Main.hRFXComTX.X10SwitchOn(Main.hRFXComTX.GetUnit(spX10Device.Text, cmbX10Unit.Text), Main.hRFXComTX.GetDevice(spX10Device.Text))

END

PUBLIC SUB btnX10Off_Click()

  Main.hRFXComTX.X10SwitchOff(Main.hRFXComTX.GetUnit(spX10Device.Text, cmbX10Unit.Text), Main.hRFXComTX.GetDevice(spX10Device.Text))

END

PUBLIC SUB btnX10Dim_Click()

  Main.hRFXComTX.X10Dim(Main.hRFXComTX.GetUnit(spX10Device.Text, cmbX10Unit.Text), Main.hRFXComTX.GetDevice(spX10Device.Text))

END

PUBLIC SUB btnX10Bright_Click()

  Main.hRFXComTX.X10Bright(Main.hRFXComTX.GetUnit(spX10Device.Text, cmbX10Unit.Text), Main.hRFXComTX.GetDevice(spX10Device.Text))

END

PUBLIC SUB btnX10LightsOn_Click()

  Main.hRFXComTX.X10AllLightsOn(Main.hRFXComTX.GetUnit(spX10Device.Text, cmbX10Unit.Text), Main.hRFXComTX.GetDevice(spX10Device.Text))

END

PUBLIC SUB btnX10LightsOff_Click()

  Main.hRFXComTX.X10AllLightsOff(Main.hRFXComTX.GetUnit(spX10Device.Text, cmbX10Unit.Text), Main.hRFXComTX.GetDevice(spX10Device.Text))

END

