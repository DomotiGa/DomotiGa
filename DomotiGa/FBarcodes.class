' Gambas class file

' Description:
' FBarcodes.class
' Support for barcode scanning, and stock inventory.
' I use a Manhattan SD313E SmartPro Barcode Scanner which functions as a USB-HID.

' Development Status:
' Working.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008 Ron Klinkien

' Read file called LICENSE for license details.

PRIVATE iMode AS Integer = 0
PUBLIC tTimer AS NEW Timer
PUBLIC tMessage AS NEW Timer

PUBLIC SUB Form_Open()

  txtBarcode.SetFocus
  tTimer = NEW Timer AS "tClear"
  tTimer.Delay = 1000 ' 1 second
  tTimer.Stop

  tMessage = NEW Timer AS "tMessage"
  tMessage.Delay = 3000 ' 3 seconds
  tMessage.Stop

  WITH DataBrowser1.GridView
    .Columns[0].Text = ("EAN Barcode")
    .Columns[0].Width = 120
    .Columns[1].Text = ("Product")
    .Columns[1].Width = 320
    .Columns[2].Text = ("Qty")
    .Columns[2].Width = 40
    .Columns[3].Text = ("Price")
    .Columns[3].Width = 60
    .Columns[4].Text = ("Target Qty")
    .Columns[4].Width = 80
  END WITH

  txtPrice.Text = ("Price ") & Main.sCurrency
  ToggleMode(iMode)
  txtRecords.Text = DataBrowser1.GridView.Rows.Count & (" product(s) in database")
  txtStatus.Text = ("Waiting for your scan ...")

END

PUBLIC SUB tClear_Timer()

  txtBarcode.Text = NULL
  tTimer.Stop

END

PUBLIC SUB tMessage_Timer()

  txtStatus.Text = ("Waiting for your scan ...")
  tMessage.Stop

END

PUBLIC SUB Form_GotFocus()

  txtBarcode.SetFocus

END

PUBLIC SUB btnClear_Click()

  txtBarcode.Text = NULL

END

PUBLIC SUB txtBarcode_Change()

  DIM iCount, iQuantity AS Integer
  DIM rResult AS Result
  DIM sName AS String
  DIM bFound AS Boolean

  IF Len(txtBarcode.Text) = 13 THEN 
    FOR iCount = 0 TO DataBrowser1.GridView.Rows.Count - 1        
      IF DataBrowser1.GridView[iCount, 0].Text = txtBarcode.Text THEN 
        bFound = TRUE
        DataBrowser1.GridView.MoveTo(iCount, 0)
        IF iMode = 1 THEN ' substract
          TRY rResult = Main.hDB.Exec("SELECT quantity,name FROM stock WHERE ean = &1", txtBarcode.Text)
          sName = rResult!name
          IF rResult!quantity > 0 THEN 
            iQuantity = rResult!quantity - 1
            rResult = Main.hDB.Exec("UPDATE stock SET quantity = &1 WHERE ean = &2", iQuantity, txtBarcode.Text)
            txtStatus.Text = "Removed 1 '" & sName & "'."
            DataSource1.Refresh()
            DataBrowser1.GridView.MoveTo(iCount, 0)
          ELSE
            txtStatus.Text = ("You don't have any '") & sName & ("' in Stock!")
          END IF
        ELSE IF iMode = 2 THEN ' add
          TRY rResult = Main.hDB.Exec("SELECT quantity,name FROM stock WHERE ean = &1", txtBarcode.Text)
          iQuantity = rResult!quantity + 1
          sName = rResult!name 
          rResult = Main.hDB.Exec("UPDATE stock SET quantity = &1 WHERE ean = &2", iQuantity, txtBarcode.Text)
          txtStatus.Text = ("Added 1 '") & sName & "'."
          DataSource1.Refresh()
          DataBrowser1.GridView.MoveTo(iCount, 0)
        ELSE IF iMode = 0 THEN ' find
          TRY rResult = Main.hDB.Exec("SELECT quantity,name FROM stock WHERE ean = &1", txtBarcode.Text)
          sName = rResult!name 
          txtStatus.Text = ("Product '") & sName & ("' found and selected.")
        END IF
        tTimer.Start
      END IF
    NEXT
    IF NOT bFound THEN 
      txtStatus.Text = ("Couldn't find Product in Database, enter a Description.")
      DataControl1.Value = txtBarcode.Text
      DataControl2.Value = NULL
      DataControl3.Value = 1
      DataControl4.Value = NULL
      DataControl5.Value = NULL
      DataControl2.SetFocus()
    END IF
  ELSE IF Len(txtBarcode.Text) = 2 THEN
    SELECT CASE txtBarcode.Text
      CASE "C0" ' find command mode
        ToggleMode(0)
      CASE "C1" ' substract command mode
        ToggleMode(1)
      CASE "C2" ' add  command mode
        ToggleMode(2)
      CASE "C3" ' shopping list requested
        GenerateList("Shop")
        txtStatus.Text = ("Shopping list requested.")
      CASE "C4" ' stock list requested
        GenerateList("Stock")
        txtStatus.Text = ("Stock list requested.")
      CASE ELSE 
        txtStatus.Text = ("This Command is invalid ") & txtBarcode.Text
        tMessage.Start
        tTimer.Start
    END SELECT
  ELSE IF Len(txtBarcode.Text) = 10 OR Len(txtBarcode.Text) = 12 THEN
    txtStatus.Text = ("ISBN Barcodes not implemented yet ") & txtBarcode.Text
    tMessage.Start
    tTimer.Start
  ELSE IF Len(txtBarcode.Text) > 0 THEN
    txtStatus.Text = ("This Barcode is invalid ") & txtBarcode.Text
    tMessage.Start
    tTimer.Start
  END IF
  txtRecords.Text = DataBrowser1.GridView.Rows.Count & (" product(s) in database")

END

PUBLIC SUB btnFind_Click()

  ToggleMode(0)

END

PUBLIC SUB btnAdd_Click()

  ToggleMode(2)

END

PUBLIC SUB btnSubstract_Click()

   ToggleMode(1)

END

PRIVATE SUB ToggleMode(iNo AS Integer)

  iMode = iNo

  SELECT CASE iMode
    CASE 0
      btnFind.Enabled = FALSE
      btnSubstract.Enabled = TRUE
      btnAdd.Enabled = TRUE
      txtStatus.Text = ("Find product mode activated.")
    CASE 1
      btnFind.Enabled = TRUE
      btnSubstract.Enabled = FALSE
      btnAdd.Enabled = TRUE
      txtStatus.Text = ("Substract product mode activated.")
    CASE 2
      btnFind.Enabled = TRUE
      btnSubstract.Enabled = TRUE
      btnAdd.Enabled = FALSE
      txtStatus.Text = ("Add product mode activated.")
  END SELECT
  tMessage.Start

END

PUBLIC SUB btnShoppingList_Click()

  GenerateList("Shop")

END

PUBLIC SUB btnStockList_Click()

  GenerateList("Stock")

END

PUBLIC SUB GenerateList(sType AS String)

  DIM sList, sName, sPrice, sPriceOne AS String
  DIM iQty AS Integer
  DIM rResult AS Result
  DIM fTotal, fPrice AS Float
  DIM sListname AS String

  IF sType = "Shop" THEN
    sList = "\n\n**       Your Shopping List for " & Format(Now(), "ddd dd-mmm-yyyy") & "       **\n"
    TRY rResult = Main.hDB.Exec("SELECT * FROM stock WHERE quantity < target")
  ELSE 
    sList = "\n\n**         Your Stock List for " & Format(Now(), "ddd dd-mmm-yyyy") & "        **\n"
    TRY rResult = Main.hDB.Exec("SELECT * FROM stock")
  END IF
  sList &= String$(56, "-") & "\n"
  IF rResult THEN
    IF rResult.Count THEN
      FOR EACH rResult
        sPrice = NULL
        sPriceOne = NULL
        IF sType = "Shop" THEN
          iQty = rResult!target - rResult!quantity
        ELSE
          iQty = rResult!quantity
        END IF
        fPrice = rResult!price * iQty
        fTotal = fTotal + fPrice
        IF rResult!price THEN
          sPriceOne = Main.sCurrency & Main.SpaceAlign(Format(rResult!price, "###.00"), 6)
          sPrice = Main.sCurrency & Main.SpaceAlign(Format(fPrice, "###.00"), 6)
        END IF
        sList &= Main.SpaceAlign(Format(iQty, "##"), 2) & "x " & Main.SpaceAlignLeft(Left(rResult!name, 32), 32)
        IF sPriceOne THEN
          sList &= " a " & sPriceOne & "   " & sPrice & "\n"
        ELSE
          sList &= "\n"
        END IF
      NEXT
      sList &= "                                                 -------\n"
      sList &= "Total :                                          " & Main.sCurrency & Main.SpaceAlign(Format(fTotal, "###.00"), 6)
    ELSE
      IF sType = "Shop" THEN
        sList &= "\nNothing to buy, everything in stock!"
      ELSE
        sList &= "\nNothing in stock!"
      END IF
    END IF
  END IF

  IF Main.bMainDebug THEN Main.WriteDebugLog(sList)

  ' sent e-mail with shopping list
  IF sType = "Shop" THEN
    Mail.SendMail(Application.Name & ": Your Shopping List", sList, Main.sEmailToAddress)
  ELSE
    Mail.SendMail(Application.Name & ": Your Stock List", sList, Main.sEmailToAddress)
  END IF
  txtStatus.Text = ("List is e-mailed to you ...")
  tMessage.Start

END
