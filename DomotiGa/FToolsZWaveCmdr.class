' Gambas class file

' Description:
' FToolsZWaveCmdr.class
' Test some basic Z-Wave functionality.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright(C) 2009 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC iSelectedNode AS Integer

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)

  IF NOT Main.bZWaveEnabled OR IF NOT Main.hZWave THEN
    Message.Info("Z-Wave interface is not enabled!")
    ME.Close
  ELSE
    txtHomeID.Text = Main.hZWave.sHomeID
    txtControllerID.Text = Main.hZWave.sControllerID
    txtChipType.Text = Main.hZWave.sControllerChipType
    txtChipRev.Text = Main.hZWave.sControllerChipRev
    txtZWaveAPIVersion.Text = Main.hZWave.sZWaveAPIVersion
    txtZWaveZDKVersion.Text = Main.hZWave.sZWaveZDKVersion
    txtControllerType.text = Main.hZWave.sControllerType

    FillNodeTable()
    btnNodeOn.Enabled = FALSE
    btnNodeOff.Enabled = FALSE
    slDim.Enabled = FALSE
  END IF

END

PUBLIC SUB FillNodeTable()

  DIM rResult AS Result
  DIM iRows, iCount AS Integer

  rResult = Main.hDB.Exec("SELECT * FROM zwave_devices")

  IF NOT rResult THEN
    Message.Info("Error: table 'zwave_devices' not found!")
    RETURN
  END IF
  iRows = rResult.Count
  IF iRows = 0 THEN tbvNodes.Enabled = FALSE
  WITH tbvNodes
    .Columns.Count = 5
    .Rows.Count = iRows
    .Columns[0].Title = "Node"
    .Columns[0].Width = 45
    .Columns[1].Title = ("Basic Type")
    .Columns[1].Width = 125
    .Columns[2].Title = ("Generic Type")
    .Columns[2].Width = 125
    .Columns[3].Title = ("Value")
    .Columns[3].Width = 50
    .Columns[4].Title = ("Status")
    .Columns[4].Width = 70
  END WITH

  FOR iCount = 0 TO rResult.Max
    tbvNodes[iCount, 0].Text = rResult!nodeid
    tbvNodes[iCount, 1].Text = Main.hZWave.ExpandbasicType(rResult!typebasic)
    tbvNodes[iCount, 2].Text = Main.hZWave.ExpandGenericType(rResult!typegeneric)
    tbvNodes[iCount, 3].Text = rResult!value
    tbvNodes[iCount, 4].Text = IIf(rResult!sleeping, "Sleeping", "Listening")
    rResult.MoveNext
  NEXT

END

PUBLIC SUB tbvNodes_Click()

  EnableControls(tbvNodes.Row)

END

PUBLIC SUB EnableControls(iRow AS Integer)

  iSelectedNode = tbvNodes[iRow, 0].Text

  SELECT tbvNodes[iRow, 2].Text
    CASE "Multilevel Switch"
      slDim.Enabled = TRUE
      btnNodeOff.Enabled = TRUE
      btnNodeOn.Enabled = TRUE
    CASE "Binary Switch"
      slDim.Enabled = FALSE
      btnNodeOff.Enabled = TRUE
      btnNodeOn.Enabled = TRUE
    DEFAULT
      btnNodeOn.Enabled = FALSE
      btnNodeOff.Enabled = FALSE
      slDim.Enabled = FALSE
  END SELECT

END

PUBLIC SUB btnClose_Click()

  ME.Close

END

PUBLIC SUB btnNodeOn_Click()

  Main.hZWave.ChangeSwitch(iSelectedNode, Main.hZWave.BASICON)

END

PUBLIC SUB btnNodeOff_Click()

  Main.hZWave.ChangeSwitch(iSelectedNode, Main.hZWave.BASICOFF)

END

PUBLIC SUB slDim_Change()

  Main.hZWave.ChangeSwitchLevel(iSelectedNode, slDim.Value)

END
