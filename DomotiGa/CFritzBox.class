' Gambas class file

' Description:
' FritzBox.class
' Provide support for Fritz!Box call monitoring. (via call log port)

' Development Status:
' Just started to build this one.
' Incoming call detection and Voicebox status implemented.
' Tested with Fritz!Box 7170 Annex A running Firmware 58.x.57

' DomotiGa - an open source home automation program.
' Copyright(C) 2008 Ron Klinkien

' Read file called COPYING for license details.

PROPERTY TCPHost AS String
PROPERTY FritzBoxDebug AS Boolean

PRIVATE sTCPHost AS String
PRIVATE bFritzBoxDebug AS Boolean

PUBLIC hFritzBox AS NEW Socket

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' connect to the host:port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Connect() AS Boolean

  ' try to close the connection
  TRY hFritzBox.Close

  ' get a new one
  hFritzBox = NEW Socket AS "FritzBox"
  hFritzBox.Connect(sTCPHost, 1012)

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog("Fritz!Box Error: " & ERROR.Text)
  RETURN FALSE

END

PUBLIC SUB FritzBox_Ready()

  Main.WriteLog("Fritz!Box TCP socket connected.")

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' disconnect from the host
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Disconnect() AS Boolean

  ' try to close the connection
  TRY hFritzBox.Close
  Main.WriteLog("Fritz!Box TCP socket port close.")

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog("Fritz!Box Error: " & ERROR.Text)
  RETURN FALSE

END

PUBLIC SUB FritzBox_Error()

  ' handle error
  SELECT CASE hFritzBox.Status
    CASE Net.CannotCreateSocket
      Main.WriteLog("Fritz!Box: The system does not allow to create a socket.")
    CASE Net.HostNotFound
      Main.WriteLog("Fritz!Box: Host not found.")
    CASE Net.ConnectionRefused
      Main.WriteLog("Fritz!Box: Unable to connect. Connection refused.")
    CASE Net.CannotRead
      Main.WriteLog("Fritz!Box: Error reading data.")
    CASE Net.CannotWrite
      Main.WriteLog("Fritz!Box: Error writing data.")
  END SELECT

END

PUBLIC SUB FritzBox_Read()

  DIM sData AS String

  IF hFritzBox.Status = Net.Connected THEN
    LINE INPUT #hFritzBox, sData
    IF Main.bFritzBoxDebug THEN Main.WriteDebugLog("[Fritz!Box] " & sData)
  END IF

END

' implement properties
PRIVATE FUNCTION TCPHost_Read() AS String

  RETURN sTCPHost

END

PRIVATE SUB TCPHost_Write(Value AS String)

  sTCPHost = Value

END

PRIVATE FUNCTION FritzBoxDebug_Read() AS Boolean

  RETURN bFritzBoxDebug

END

PRIVATE SUB FritzBoxDebug_Write(Value AS Boolean)

  bFritzBoxDebug = Value

END

