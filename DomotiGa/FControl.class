' Gambas class file

' Description:
' FControl.class
' Device control page.

' Development Status:
' Not implemented fully.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC hDim AS Slider

PUBLIC hVPanelDim AS VPanel
PUBLIC hVPanelSwitch AS VPanel

PUBLIC SUB Form_Open()

  RefreshPage()

END

PUBLIC SUB Form_Resize()

  HPanel.Move(10, 40, ME.ClientWidth - 20, ME.ClientHeight - 60)
  hVPanelSwitch.Move(35, 42, 140, ME.ClientHeight - 60)
  hVPanelDim.Move(203, 42, 140, ME.ClientHeight - 60)

END

PUBLIC SUB ReloadPage()

  DIM oObject AS Object

  ' delete previous buttons first
  FOR EACH oObject IN HPanel.Children
    oObject.Delete()
  NEXT
  RefreshPage()

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' create dynamic buttons for switchable and dimable devices only
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB RefreshPage()

  DIM rDevice AS Result
  DIM sValue, sValue2, sIcon, sType AS String
  DIM hButton AS Button
  DIM iBrightness AS Integer
  DIM oIcon AS Object

  hVPanelSwitch = NEW VPanel(HPanel)
  WITH hVPanelSwitch
    .X = 35
    .Y = 45
    .Width = 140
    .Height = ME.ClientHeight - 20
    .Padding = 5
    .Spacing = 5
  END WITH
  hVPanelDim = NEW VPanel(HPanel)
  WITH hVPanelDim
    .X = 203
    .Y = 42
    .Width = 140
    .Height = ME.ClientHeight - 20
    .Padding = 5
    .Spacing = 5
  END WITH
  TRY rDevice = Main.hDB.Exec("SELECT onicon, officon, dimicon, address, switchable, dimable, id, value, value2, name FROM devices WHERE enabled is TRUE")
  IF NOT ERROR THEN
    IF (rDevice.Count > 0) THEN
      FOR EACH rDevice
        IF rDevice!dimable THEN
          sValue = UCase(rDevice!value)
          ' sValue2 = rDevice!value2
          sType = Devices.FindTypeForDevice(rDevice!id)
          ' SELECT sType
          '   CASE "KNX/EIB" ' KNX/EIB Dimmers store dimming level in value2
          '     IF sValue = "ON" AND IF CInt(sValue2) > 0 AND IF CInt(sValue2) < 100 THEN
          '       hButton = NEW Button(hVPanelDim) AS "SwitchButton_Off"
          '       iBrightness = Val(sValue2)
          '       TRY oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!dimicon]
          '     ELSE IF sValue = "ON" THEN
          '       hButton = NEW Button(hVPanelDim) AS "SwitchButton_Off"
          '       iBrightness = Val(sValue2)
          '       TRY oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!onicon]
          '     ELSE
          '       hButton = NEW Button(hVPanelDim) AS "SwitchButton_On"
          '       TRY oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!officon]
          '     END IF
          '   DEFAULT
              IF sValue = "ON" OR sValue = "OPEN" OR sValue = "MOTION" OR sValue = "UP" OR sValue = "AWAKE" THEN
                hButton = NEW Button(hVPanelDim) AS "SwitchButton_Off"
                TRY oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!onicon]
                iBrightness = 100
              ELSE IF InStr(sValue, "DIM ") THEN
                hButton = NEW Button(hVPanelDim) AS "SwitchButton_Off"
                iBrightness = Val(Replace(sValue, "DIM ", ""))
                TRY oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!dimicon]
              ELSE
                hButton = NEW Button(hVPanelDim) AS "SwitchButton_On"
                TRY oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!officon]
                iBrightness = 0
              END IF
            ' END SELECT
          WITH hButton
            .Text = rDevice!name
            .Height = 35
            .Width = 130
            .Tag = rDevice!name
            .Picture = oIcon
            .Font = Font["Sans Serif, 7, Normal"]
          END WITH

          SELECT sType
            CASE "AC", "Z-Wave", "PLCBUS", "FS20", "KNX/EIB"
              hDim = NEW Slider(hVPanelDim) AS "DimSlider"
              WITH hDim
              .Tracking = FALSE
              .MaxValue = 100
              .MinValue = 0
              .PageStep = 10
              .Step = 10
              .Height = 20
              .Width = 130
              .Mark = TRUE
              .Tag = rDevice!name
              .Value = iBrightness
              END WITH
            ' CASE "KNX/EIB"
            '   hDim = NEW Slider(hVPanelDim) AS "DimSlider"
            '   WITH hDim
            '   .Tracking = FALSE
            '   .MaxValue = 100
            '   .MinValue = 0
            '   .PageStep = 10
            '   .Step = 10
            '   .Height = 20
            '   .Width = 130
            '   .Mark = TRUE
            '   .Tag = rDevice!name
            '   .Value = rDevice!value2
            '   END WITH
            DEFAULT
              hButton = NEW Button(hVPanelDim) AS "MinusButton"
              WITH hButton
                .Text = "-"
                .Height = 15
                .Width = 15
                .Tag = rDevice!name
              END WITH
              hButton = NEW Button(hVPanelDim) AS "PlusButton"
              WITH hButton
                .Text = "+"
                .Height = 15
                .Width = 15
                .Tag = rDevice!name
              END WITH
          END SELECT
        END IF

        IF rDevice!switchable THEN
          sValue = UCase(rDevice!value)
          IF UCase$(rDevice!value) = "ON" OR UCase$(rDevice!value) = "OPEN" OR UCase$(rDevice!value) = "MOTION" THEN
            hButton = NEW Button(hVPanelSwitch) AS "SwitchButton_Off"
            TRY oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!onicon]
          ELSE
            hButton = NEW Button(hVPanelSwitch) AS "SwitchButton_On"
            TRY oIcon = Picture[Main.sBaseDir &/ "icons/" & rDevice!officon]
          END IF
          WITH hButton
            .Text = rDevice!name
            .Height = 35
            .Width = 130
            .Tag = rDevice!name
            .Picture = oIcon
            IF Len(rDevice!name) > 12 THEN .Font = Font["Sans Serif, 7, Normal"]
          END WITH
        END IF
      NEXT
    END IF
  ELSE
    Main.WriteLog(("Error ") & Error.Text & (" while fetching devices!"))
  END IF

END

PUBLIC SUB DimSlider_MouseUp()

  IF Main.bServer THEN
    Devices.SetDevice(LAST.tag, "Dim " & LAST.Value)
  ELSE
    XMLClient.DeviceSetDevice(LAST.tag, "Dim " & LAST.Value)
  END IF

END

PUBLIC SUB SwitchButton_Off_Click()

  IF Main.bServer THEN
    Devices.SetDevice(LAST.tag, "Off")
  ELSE
    XMLClient.DeviceSetDevice(LAST.tag, "Off")
  END IF
  ReloadPage()

END

PUBLIC SUB SwitchButton_On_Click()

  IF Main.bServer THEN
    Devices.SetDevice(LAST.tag, "On")
  ELSE
    XMLClient.DeviceSetDevice(LAST.tag, "On")
  END IF
  ReloadPage()

END

PUBLIC SUB MinusButton_MouseDown()

  IF Main.bServer THEN
    Devices.SetDevice(LAST.tag, "Dim")
  ELSE
    XMLClient.DeviceSetDevice(LAST.tag, "Dim")
  END IF
  ReloadPage()

END

PUBLIC SUB PlusButton_MouseDown()

  IF Main.bServer THEN
    Devices.SetDevice(LAST.tag, "Bright")
  ELSE
    XMLClient.DeviceSetDevice(LAST.tag, "Bright")
  END IF
  ReloadPage()

END

PUBLIC SUB MinusButton_MouseUp()

  IF Main.bServer THEN
    Devices.SetDevice(LAST.tag, "Stop")
  ELSE
    XMLClient.DeviceSetDevice(LAST.tag, "Stop")
  END IF
  ReloadPage()

END

PUBLIC SUB PlusButton_MouseUp()

  IF Main.bServer THEN
    Devices.SetDevice(LAST.tag, "Stop")
  ELSE
    XMLClient.DeviceSetDevice(LAST.tag, "Stop")
  END IF
  ReloadPage()

END

PUBLIC SUB btnRefresh_Click()

  ReloadPage()

END
