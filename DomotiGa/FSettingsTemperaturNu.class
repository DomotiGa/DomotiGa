' Gambas class file

' Description:
' FSettingsTemperaturNu.class
' Settings form for TemperaturNu temperature upload.

' Development Status:
' Development just started.

' Links:
' http://www.temperatur.nu

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien
' This module is written by and Copyright(C) 2010 Daniel Lindmark

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' initialize buttons and fill in current values
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)

  chkEnabled.Value = Main.bTemperaturNuEnabled
  txtCity.Text = Main.sTemperaturNuCity
  txtId.Text = Main.sTemperaturNuId
  chkDebug.Value = Main.bTemperaturNuDebug
  txtPushTime.Text = Main.iTemperaturNuPushTime

  IF Main.bTemperaturNuEnabled = FALSE THEN 
    txtCity.Enabled = FALSE
    txtId.Enabled = FALSE
    chkDebug.Enabled = FALSE
    btnUpload.Enabled = FALSE
    txtPushTime.Enabled = FALSE
    cmbSensor.Enabled = FALSE
    cmbValue.Enabled = FALSE
    txtValue.Enabled = FALSE
  END IF

  FillTemperatureDevices()
  FillValue()

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' fill combobox with available devices
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB FillTemperatureDevices()

  DIM rResult, rDevice AS Result
  DIM iCount, iDevice AS Integer

  rResult = Main.hDB.Exec("SELECT * FROM devices WHERE enabled is true AND groups LIKE '%Temperature%'")

  IF NOT rResult THEN
    Message.Info(("Error: table 'devices' not found!"))
    RETURN
  END IF

  cmbValue.Add("", 0)
  cmbValue.Add("Value", 1)
  cmbValue.Add("Value2", 2)
  cmbValue.Add("Value3", 3)
  cmbValue.Add("Value4", 4)

  FOR iCount = 0 TO rResult.Max
    cmbSensor.Add(rResult!name)
    rResult.MoveNext
  NEXT

  TRY rDevice = Main.hDB.Exec("SELECT name FROM devices WHERE id = &1", Main.iTemperaturNuDeviceId)
  cmbSensor.Add("", 0)
  IF rDevice.Count THEN
    cmbSensor.Text = Devices.FindNameForDevice(Main.iTemperaturNuDeviceId)
    cmbValue.Index = Main.sTemperaturNuDeviceValue
  ENDIF

END

PUBLIC SUB GetDeviceId(sName AS String) AS Integer

  DIM rDevice AS Result

  TRY rDevice = Main.hDB.Exec("SELECT id FROM devices WHERE name = &1", sName)
  IF rDevice.Count THEN
    RETURN rDevice!id
  END IF

END

PUBLIC SUB FillValue()

  SELECT cmbValue.Index
    CASE 1
      txtValue.Text = Devices.GetCurrentValueForDevice(GetDeviceId(cmbSensor.Text))
    CASE 2
      txtValue.Text = Devices.GetCurrentValue2ForDevice(GetDeviceId(cmbSensor.Text))
    CASE 3
      txtValue.Text = Devices.GetCurrentValue3ForDevice(GetDeviceId(cmbSensor.Text))
    CASE 4
      txtValue.Text = Devices.GetCurrentValue4ForDevice(GetDeviceId(cmbSensor.Text))
  END SELECT

END

PUBLIC SUB btnCancel_Click()

  ME.Close

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' load defaults from database
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB btnDefaults_Click()

  DIM rResult AS Result

  rResult = Main.GetSettingTable("temperaturnu", TRUE) ' get defaults
  IF rResult.Count THEN
    chkEnabled.Value = rResult!enabled
    txtCity.Text = rResult!city
    txtId.Text = rResult!apikey
    chkDebug.Value = rResult!debug
    txtPushTime.Text = rResult!pushtime
  END IF
  btnSave.Enabled = TRUE

END

PUBLIC SUB chkEnabled_Click()

  txtCity.Enabled = chkEnabled.Value
  txtId.Enabled = chkEnabled.Value
  chkDebug.Enabled = chkEnabled.Value
  btnUpload.Enabled = chkEnabled.Value
  txtPushTime.Enabled = chkEnabled.Value
  cmbSensor.Enabled = chkEnabled.Value
  cmbValue.Enabled = chkEnabled.Value
  txtValue.Enabled = chkEnabled.Value
  btnSave.Enabled = TRUE

END

PUBLIC SUB txtCity_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB txtId_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB txtPushTime_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbSensor_Click()

  btnSave.Enabled = TRUE
  FillValue()

END

PUBLIC SUB cmbValue_Click()

  btnSave.Enabled = TRUE
  FillValue()

END

PUBLIC SUB chkDebug_Click()

  btnSave.Enabled = TRUE

END

PRIVATE SUB ValidInput() AS Boolean

  IF NOT txtCity.Text THEN
    Balloon(("Please enter a city name!"), txtCity)
    RETURN FALSE
  END IF
  IF NOT txtId.Text THEN
    Balloon(("Please enter an id!"), txtId)
    RETURN FALSE
  END IF
  IF NOT cmbSensor.Text THEN
    Balloon(("Please select a device!"), cmbSensor)
    RETURN FALSE
  END IF
  IF NOT cmbValue.Text THEN
    Balloon(("Please select a value field!"), cmbValue)
    RETURN FALSE
  END IF
  RETURN TRUE

END

PUBLIC SUB btnSave_Click()

  DIM rResult AS Result

  IF NOT ValidInput() THEN RETURN

  ' save new Temperatur.nu settings
  rResult = Main.hDB.Exec("UPDATE settings_temperaturnu SET debug = &1, city = &2, pushtime = &3, enabled = &4, apikey = &5, deviceid = &6, devicevalue = &7 WHERE id = 1", chkDebug.Value, txtCity.Text, txtPushTime.Text, chkEnabled.Value, txtId.Text, GetDeviceId(cmbSensor.Text), cmbValue.Index)
  rResult = Main.GetSettingTable("temperaturnu") ' reload settings
  IF rResult.Count THEN
    Main.bTemperaturNuEnabled = rResult!enabled
    Main.sTemperaturNuCity = rResult!city
    Main.sTemperaturNuId = rResult!apikey
    Main.bTemperaturNuDebug = rResult!debug
    Main.iTemperaturNuPushTime = rResult!pushtime
    Main.iTemperaturNuDeviceId = rResult!deviceid
    Main.sTemperaturNuDeviceValue = rResult!devicevalue
  END IF
  IF Main.bServer THEN
    Main.Restart_TemperaturNu()
  ELSE
    XMLClient.ModuleRestart("TemperaturNu")
  END IF
  ME.Close

END

PUBLIC SUB btnUpload_Click()

  TemperaturNu.UploadTemperaturNuData()

END

PUBLIC SUB btnWeb_Click()

  Desktop.Open("http://www.temperatur.nu/")

END
