' Gambas class file

' Description:
' FToolsRFXComCmdr.class
' Allows injection of a packet to test RFXCom module parser.
' Provides functions like the RFXCom tools.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2012 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)

  IF Main.hRFXComRX = NULL THEN
    DisableRX()
  ELSE
    chkDebug.Value = Main.hRFXComRX.RFXComDebug
  ENDIF

  IF Main.hRFXComTX = NULL THEN
    DisableTX()
  ELSE
    chkDebugTX.Value = Main.hRFXComTX.RFXComDebug
  ENDIF

  ' fill combo's with values
  FMain.FillCombo(cmbACDevice1, "4")
  FMain.FillCombo(cmbACDevice2, "FF")
  FMain.FillCombo(cmbACDevice3, "FF")
  FMain.FillCombo(cmbACDevice4, "FF")
  FMain.FillCombo(cmbACUnit, "16")
  FMain.FillCombo(cmbARCDevice, "16")
  FMain.FillCombo(cmbLighting1Unit, "16")

  SetLighting1Commands(cmbLighting1Type.Index)

  FMain.FillCombo(cmbLighting2ID2, "FF")
  FMain.FillCombo(cmbLighting2ID3, "FF")
  FMain.FillCombo(cmbLighting2ID4, "FF")
  FMain.FillCombo(cmbLighting2Unit, "16")

  FMain.FillCombo(cmbLighting5ID1, "FF")
  FMain.FillCombo(cmbLighting5ID2, "FF")
  FMain.FillCombo(cmbLighting5ID3, "FF")
  FMain.FillCombo(cmbLighting5Unit, "16")

END

PRIVATE SUB SetLighting1Commands(iMode AS Integer)

  SELECT iMode
    CASE 0, 5 ' X10, EWM200
      btnLighting1AllOn.Enabled = TRUE
      btnLighting1AllOff.Enabled = TRUE
      btnLighting1Chime.Enabled = FALSE
    CASE 1 ' ARC
      btnLighting1AllOn.Enabled = TRUE
      btnLighting1AllOff.Enabled = TRUE
      btnLighting1Chime.Enabled = TRUE
    CASE 3, 4, 6 ' ELRO AB400, Waveman, Impuls
      btnLighting1AllOn.Enabled = FALSE
      btnLighting1AllOff.Enabled = FALSE
      btnLighting1Chime.Enabled = FALSE
  END SELECT

END

PUBLIC SUB btnClose_Click()

  ME.Close

END

PUBLIC SUB btnInject_Click()

  Main.hRFXComRX.bSimulate = TRUE
  IF txtPacketRX.Text THEN Main.hRFXComRX.Simulate(txtPacketRX.Text)

END

PUBLIC SUB btnVersion_Click()

  Main.hRFXComRX.GetVersion()

END

PUBLIC SUB btnEnableAll_Click()

  Main.hRFXComRX.ProtocolSetup("ALL")

END

PUBLIC SUB btnOregon_Click()

  Main.hRFXComRX.ProtocolSetup("OREGON")

END

PUBLIC SUB btnX10_Click()

  Main.hRFXComRX.ProtocolSetup("X10")

END

PUBLIC SUB btnARC_Click()

  Main.hRFXComRX.ProtocolSetup("ARC")

END

PUBLIC SUB btnKoppla_Click()

  Main.hRFXComRX.ProtocolSetup("KOPPLA")

END

PUBLIC SUB btnATI_Click()

  Main.hRFXComRX.ProtocolSetup("ATI")

END

PUBLIC SUB btnVisonic_Click()

  Main.hRFXComRX.ProtocolSetup("VISONIC")

END

PUBLIC SUB btnSomfy_Click()

  Main.hRFXComRX.ProtocolSetup("SOMFY")

END

PUBLIC SUB btnHEUK_Click()

  Main.hRFXComRX.ProtocolSetup("HEUK")

END

PUBLIC SUB btnHEEU_Click()

  Main.hRFXComRX.ProtocolSetup("HEEU")

END

PUBLIC SUB chkDebug_Click()

  Main.hRFXComRX.RFXComDebug = chkDebug.Value

END

PUBLIC SUB DisableRX()

  btnSomfy.Enabled = FALSE
  btnVisonic.Enabled = FALSE
  btnATI.Enabled = FALSE
  btnKoppla.Enabled = FALSE
  btnARC.Enabled = FALSE
  btnX10.Enabled = FALSE
  btnOregon.Enabled = FALSE
  btnHEUK.Enabled = FALSE
  btnHEEU.Enabled = FALSE
  btnVersion.Enabled = FALSE
  btnEnableAll.Enabled = FALSE
  btnInject.Enabled = FALSE
  chkDebug.Enabled = FALSE

END

PUBLIC SUB DisableTX()

  btnVersionTX.Enabled = FALSE
  btnEnableARCTX.Enabled = FALSE
  btnEnableHarrisonTX.Enabled = FALSE
  btnDisableX10TX.Enabled = FALSE
  chkDebugTX.Enabled = FALSE
  btnEnableKopplaTX.Enabled = FALSE
  slDim.Enabled = FALSE

  ' ARC / X10
  btnARCOn.Enabled = FALSE
  btnARCOff.Enabled = FALSE
  btnARCDim.Enabled = FALSE
  btnARCBright.Enabled = FALSE
  btnARCLightsOff.Enabled = FALSE
  btnARCLightsOn.Enabled = FALSE
  cmbARCHouse.Enabled = FALSE
  cmbARCDevice.Enabled = FALSE

  ' AC / HE UK
  cmbACDevice1.Enabled = FALSE
  cmbACDevice2.Enabled = FALSE
  cmbACDevice3.Enabled = FALSE
  cmbACDevice4.Enabled = FALSE
  cmbACUnit.Enabled = FALSE
  btnACOff.Enabled = FALSE
  btnACOn.Enabled = FALSE
  chkHEEU.Enabled = FALSE
  tbtnACGroup.Enabled = FALSE

END

' transmitter code below this line
PUBLIC SUB chkDebugTX_Click()

  Main.hRFXComTX.RFXComDebug = chkDebug.Value

END

PUBLIC SUB btnVersionTX_Click()

  Main.hRFXComTX.GetVersion()

END

PUBLIC SUB btnEnableARCTX_Click()

  Main.hRFXComTX.EnableARCTX()

END

PUBLIC SUB btnEnableHarrisonTX_Click()

  Main.hRFXComTX.EnableHarrisonTX()

END

PUBLIC SUB btnEnableKopplaTX_Click()

  Main.hRFXComTX.EnableKopplaTX()

END

PUBLIC SUB btnDisableX10TX_Click()

  Main.hRFXComTX.DisableX10TX()

END

PUBLIC SUB ControlTX(sAddress AS String, sCmd AS String)

  Main.hRFXComTX.X10(sAddress, sCmd)

END

' ARC
PUBLIC SUB btnARCOn_Click()

  ControlTX(cmbARCHouse.Text & cmbARCDevice.Text, "On")

END

PUBLIC SUB btnARCOff_Click()

  ControlTX(cmbARCHouse.Text & cmbARCDevice.Text, "Off")

END

PUBLIC SUB btnARCDim_Click()

  ControlTX(cmbARCHouse.Text & cmbARCDevice.Text, "Dim")

END

PUBLIC SUB btnARCBright_Click()

  ControlTX(cmbARCHouse.Text & cmbARCDevice.Text, "Bright")

END

PUBLIC SUB btnARCLightsOn_Click()

  ControlTX(cmbARCHouse.Text & cmbARCDevice.Text, "All_Lights_On")

END

PUBLIC SUB btnARCLightsOff_Click()

  ControlTX(cmbARCHouse.Text & cmbARCDevice.Text, "All_Lights_Off")

END

' AC / HEEU
PUBLIC SUB btnACOn_Click()

  Main.hRFXComTX.AC(cmbACDevice1.Index & cmbACDevice2.Text & cmbACDevice3.Text & cmbACDevice4.Text & " " & cmbACUnit.Text, "On", chkHEEU.Value, tbtnACGroup.Value)

END

PUBLIC SUB btnACOff_Click()

  Main.hRFXComTX.AC(cmbACDevice1.Index & cmbACDevice2.Text & cmbACDevice3.Text & cmbACDevice4.Text & " " & cmbACUnit.Text, "Off", chkHEEU.Value, tbtnACGroup.Value)

END

PUBLIC SUB slDim_Change()

  Main.hRFXComTX.AC(cmbACDevice1.Index & cmbACDevice2.Text & cmbACDevice3.Text & cmbACDevice4.Text & " " & cmbACUnit.Text, "Dim " & slDim.Value, chkHEEU.Value, tbtnACGroup.Value)

END

PUBLIC SUB cmbLighting1Type_Click()

  SetLighting1Commands(cmbLighting1Type.Index)

END

' TRX lighting1
PUBLIC SUB btnLighting1On_Click()

  Main.hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "ON", chkLighting1Group.Value)

END

PUBLIC SUB btnLighting1Off_Click()

  Main.hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "OFF", chkLighting1Group.Value)

END

PUBLIC SUB btnLighting1Chime_Click()

  Main.hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "CHIME", chkLighting1Group.Value)

END

PUBLIC SUB btnLighting1AllOn_Click()

  Main.hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "ALL ON", chkLighting1Group.Value)

END

PUBLIC SUB btnLighting1AllOff_Click()

  Main.hRFXComTRX.Lighting1(cmbLighting1Type.Text, cmbLighting1House.Text & Format(cmbLighting1Unit.Text, "00"), "ALL OFF", chkLighting1Group.Value)

END

PUBLIC SUB btnLighting2On_Click()

  Main.hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "ON", chkLighting2Group.Value)

END

PUBLIC SUB btnLighting2Off_Click()

  Main.hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "OFF", chkLighting2Group.Value)

END

PUBLIC SUB btnLighting2AllOn_Click()

  Main.hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "ALL ON", chkLighting2Group.Value)

END

PUBLIC SUB btnLighting2AllOff_Click()

  Main.hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "ALL OFF", chkLighting2Group.Value)

END

PUBLIC SUB slLighting2Dim_Change()

  Main.hRFXComTRX.Lighting2(cmbLighting2Type.Text, cmbLighting2ID1.Text & cmbLighting2ID2.Text & cmbLighting2ID3.Text & cmbLighting2ID4.Text & " " & cmbLighting2Unit.Text, "DIM " & slLighting2Dim.Value, chkLighting2Group.Value)

END

PUBLIC SUB btnTRXDisableX10_Click()

  Main.hRFXComTRX.ProtocolSetup("X10")

END

PUBLIC SUB btnTRXDisableARC_Click()

  Main.hRFXComTRX.ProtocolSetup("ARC")

END

PUBLIC SUB btnTRXDisableAC_Click()

  Main.hRFXComTRX.ProtocolSetup("AC")

END

PUBLIC SUB btnTRXDisableHEEU_Click()

  Main.hRFXComTRX.ProtocolSetup("HEEU")

END

PUBLIC SUB btnTRXDisableKoppla_Click()

  Main.hRFXComTRX.ProtocolSetup("KOPPLA")

END

PUBLIC SUB btnTRXDisableLaCrosse_Click()

  Main.hRFXComTRX.ProtocolSetup("LACROSSE")

END

PUBLIC SUB btnTRXDisableAD_Click()

  Main.hRFXComTRX.ProtocolSetup("AD")

END

PUBLIC SUB btnTRXDisableMertik_Click()

  Main.hRFXComTRX.ProtocolSetup("MERTIK")

END

PUBLIC SUB btnTRXDisableATI_Click()

  Main.hRFXComTRX.ProtocolSetup("ATI")

END

PUBLIC SUB btnTRXDisableOregon_Click()

  Main.hRFXComTRX.ProtocolSetup("OREGON")

END

PUBLIC SUB btnTRXDisableHideki_Click()

  Main.hRFXComTRX.ProtocolSetup("HIDEKI")

END

PUBLIC SUB btnTRXDisableFS20_Click()

  Main.hRFXComTRX.ProtocolSetup("FS20")

END

PUBLIC SUB btnTRXDisableProGuard_Click()

  Main.hRFXComTRX.ProtocolSetup("PROGUARD")

END

PUBLIC SUB btnTRXDisableVisonic_Click()

  Main.hRFXComTRX.ProtocolSetup("VISONIC")

END

PUBLIC SUB btnTRXDisableNovatys_Click()

  Main.hRFXComTRX.ProtocolSetup("NOVATYS")

END

PUBLIC SUB btnTRXEnableAll_Click()

  Main.hRFXComTRX.ProtocolSetup("ALL")

END

PUBLIC SUB btnTRXSave_Click()

  Main.hRFXComTRX.ProtocolSetup("SAVE")

END

PUBLIC SUB btnTRXReset_Click()

  Main.hRFXComTRX.ProtocolSetup("RESET")

END

PUBLIC SUB btnTRXGetStatus_Click()

  Main.hRFXComTRX.ProtocolSetup("STATUS")

END

PUBLIC SUB btnInjectTRX_Click()

  Main.hRFXComTRX.Simulate(txtPacketTRX.Text)

END

PUBLIC SUB btnLighting5On_Click()

  Main.hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ON")

END

PUBLIC SUB btnLighting5Off_Click()

  Main.hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "OFF")

END

PUBLIC SUB btnLighting5AllOff_Click()

  Main.hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ALL OFF")

END

PUBLIC SUB btnLighting5Mood1_Click()

  Main.hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD1")

END

PUBLIC SUB btnLighting5Mood2_Click()

  Main.hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD2")

END

PUBLIC SUB btnLighting5Mood3_Click()

  Main.hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "MOOD3")

END

PUBLIC SUB btnLighting5Unlock_Click()

  Main.hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "UNLOCK")

END

PUBLIC SUB btnLighting5Lock_Click()

  Main.hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "LOCK")

END

PUBLIC SUB btnLighting5AllLock_Click()

  Main.hRFXComTRX.Lighting5(cmbLighting5Type.Text, cmbLighting5ID1.Text & cmbLighting5ID2.Text & cmbLighting5ID3.Text & " " & cmbLighting5Unit.Text, "ALL LOCK")

END
