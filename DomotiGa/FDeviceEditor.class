' Gambas class file

' Description:
' FDeviceEditor.class
' Support for creating and edit all device parameters.

' Development Status:
' Finished and working, maybe needs better error checking.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC rResult AS Result
PUBLIC rResultType AS Result
PUBLIC rResultInterface AS Result
PUBLIC rResultInterfaces AS Result
PUBLIC rResultLocations AS Result
PUBLIC rResultLocation AS Result
PUBLIC rResultGroups AS Result
PUBLIC rResultDeviceTypes AS Result
PUBLIC rResultFloorplan AS Result
PUBLIC rResultUsers AS Result
PUBLIC rResultUser AS Result
PUBLIC bAddDevice AS Boolean

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)
  LoadDevice()

END

PUBLIC SUB LoadDevice()

  ' fill combo with available modules/devicetypes
  TRY rResultDeviceTypes = Main.hDB.Exec("SELECT * FROM devicetypes")
  IF rResultDeviceTypes THEN
    IF (rResultDeviceTypes.Count >= 1) THEN
      FOR EACH rResultDeviceTypes
        cmbModule.Add(rResultDeviceTypes!name)
      NEXT
    ELSE
      Message("No devicetypes found!")
    END IF
  ELSE
    Message("No devicetypes database table found!")
  END IF

  ' fill combo with available interfaces
  TRY rResultInterfaces = Main.hDB.Exec("SELECT * FROM interfaces")
  IF rResultInterfaces THEN
    IF (rResultInterfaces.Count >= 1) THEN
      FOR EACH rResultInterfaces
        cmbInterface.Add(rResultInterfaces!name)
      NEXT
    ELSE
      Message("No interfaces found!")
    END IF
  ELSE
    Message("No interfaces database table found!")
  END IF

  ' put groups in selected or available groups list
  rResultGroups = Main.hDB.Exec("SELECT * FROM groups")
  IF rResultGroups THEN
    IF (rResultGroups.Count >= 1) THEN
      FOR EACH rResultGroups
        lvGroupAvail.Add(rResultGroups!name, rResultGroups!name)
      NEXT
    ELSE
      Message("No groups found!")
    END IF
  ELSE
    Message("No groups database table found!")
  END IF

  ' fill combo with available locations
  rResultLocations = Main.hDB.Exec("SELECT * FROM locations")
  IF rResultLocations THEN
    IF (rResultLocations.Count >= 1) THEN
      FOR EACH rResultLocations
        cmbLocation.Add(rResultLocations!name)
      NEXT
    ELSE
      Message("No locations found!")
    END IF
  ELSE
    Message("No locations database table found!")
  END IF

  ' fill combo with available floorplans
  rResultFloorplan = Main.hDB.Exec("SELECT * FROM floors")
  IF rResultFloorplan THEN
    IF (rResultFloorplan.Count >= 1) THEN
      FOR EACH rResultFloorplan
        cmbFloorplan.Add(rResultFloorplan!name)
      NEXT
    ELSE
      Message("No floorplans found!")
    END IF
  ELSE
    Message("No floorplans database table found!")
  END IF

  ' fill combo with available users
  rResultUsers = Main.hDB.Exec("SELECT * FROM users")
  cmbUser.Add("")
  IF rResultUsers THEN
    IF (rResultUsers.Count >= 1) THEN
      FOR EACH rResultUsers
        cmbUser.Add(rResultUsers!fullname)
      NEXT
    ELSE
      Message("No users found!")
    END IF
  ELSE
    Message("No users database table found!")
  END IF

  IF NOT bAddDevice THEN
    ' get selected device values
    rResult = Main.hDB.Exec("SELECT * FROM devices WHERE id = &1", FDevices.tbvDevices[FDevices.iCurRow, 0].Text)
    IF rResult.Count >= 1 THEN
      tbName.Text = rResult!name
      TRY rResultType = Main.hDB.Exec("SELECT * FROM devicetypes WHERE id = &1", rResult!module)
      IF rResultType.Count THEN
        cmbModule.Text = rResultType!name
        tbDeviceType.Text = rResultType!type
        tbDeviceDescr.Text = rResultType!description
        FillAddressFields(rResultType!type)
        SelectAddressFields(rResultType!type)
      END IF
      ' load device picture if available
      LoadDeviceImage()
      ' select interface
      TRY rResultInterface = Main.hDB.Exec("SELECT * FROM interfaces WHERE id = &1", rResult!interface)
      IF rResultInterface.Count THEN cmbInterface.Text = rResultInterface!name

      ' select location
      rResultLocation = Main.hDB.Exec("SELECT * FROM locations WHERE id = &1", rResult!location)
      IF rResultLocation.Count THEN
        TRY cmbLocation.Text = rResultLocation!name
      ELSE
        cmbLocation.Text = "Not Defined"
      END IF

      ' select user
      IF rResult!user THEN
        rResultUsers = Main.hDB.Exec("SELECT * FROM users WHERE id = &1", rResult!user)
        IF rResultUsers.Count THEN
          TRY cmbUser.Text = rResultUsers!fullname
        END IF
      END IF

      ' put groups in selected or available groups list
      rResultGroups = Main.hDB.Exec("SELECT * FROM groups")
      IF (rResultGroups.Count >= 1) THEN 
        FOR EACH rResultGroups
          IF InStr("|" & rResult!groups & "|", "|" & rResultGroups!name & "|") THEN
            lvGroupActive.Add(rResultGroups!name, rResultGroups!name)
            lvGroupAvail.Remove(rResultGroups!name)
          END IF
        NEXT
      ELSE
        Message("No groups found!")
      END IF

      ' rest of fields
      cmbLabel.Text = rResult!label
      cmbLabel2.Text = rResult!label2
      cmbLabel3.Text = rResult!label3
      cmbLabel4.Text = rResult!label4
      tbValue.Text = rResult!value
      tbValue2.Text = rResult!value2
      tbValue3.Text = rResult!value3
      tbValue4.Text = rResult!value4
      tbOnIcon.Text = rResult!onicon
      tbOffIcon.Text = rResult!officon
      tbLastSeen.Text = rResult!lastseen
      tbFirstSeen.Text = rResult!firstseen

      TRY chkEnabled.Value = rResult!enabled
      TRY chkHide.Value = rResult!hide
      TRY chkLog.Value = rResult!log
      TRY chkSwitchable.Value = rResult!switchable
      TRY chkDimable.Value = rResult!dimable

      tbComments.Text = rResult!comments
      tbBatt.Text = rResult!batterystatus
      ' floorplan values
      tbX.Text = rResult!x
      tbY.Text = rResult!y

      ' select floorplan
      rResultFloorplan = Main.hDB.Exec("SELECT * FROM floors WHERE floor = &1", rResult!floorplan)
      IF rResultFloorplan.Count THEN
        cmbFloorplan.Text = rResultFloorplan!name
      ELSE
        cmbFloorplan.Text = "Not Defined"
      END IF

      ' rrdtool graph stuff
      TRY chkGraph.Value = rResult!graph
      tbValueDS.Text = rResult!valuerrddsname
      tbValue2DS.Text = rResult!value2rrddsname
      tbValue3DS.Text = rResult!value3rrddsname
      tbValue4DS.Text = rResult!value4rrddsname
      cmbValueType.Text = rResult!valuerrdtype
      cmbValue2Type.Text = rResult!value2rrdtype
      cmbValue3Type.Text = rResult!value3rrdtype
      cmbValue4Type.Text = rResult!value4rrdtype
    ELSE
      Message("Couldn't load device record!")
      ME.Close
    END IF
  END IF

END

PUBLIC SUB RefreshDeviceType()

  rResultType = Main.hDB.Exec("SELECT * FROM devicetypes WHERE name = &1", cmbModule.Text)
  tbDeviceType.Text = rResultType!type
  tbDeviceDescr.Text = rResultType!description

  ' enable correct address fields
  SelectAddressFields(rResultType!type)

  SELECT tbDeviceType.Text
    CASE "Plugwise"
      cmbInterface.Text = "Plugwise Stick"
    CASE "HDDTemp"
      cmbInterface.Text = "HDDTemp Socket"
    CASE "AIBO"
      cmbInterface.Text = "AIBO Socket"
    CASE "UPS"
      cmbInterface.Text = "UPS Socket"
    CASE "RFXCom"
      cmbInterface.Text = "RFXCom Receiver"
    CASE "Bluetooth"
      cmbInterface.Text = "Bluetooth Dongle"
  END SELECT

END

PUBLIC SUB GetDeviceType() AS Integer

  rResultType = Main.hDB.Exec("SELECT id FROM devicetypes WHERE name = &1", cmbModule.Text)
  RETURN rResultType!id

END

PUBLIC SUB GetInterface() AS Integer

  rResultInterface = Main.hDB.Exec("SELECT id FROM interfaces WHERE name = &1", cmbInterface.Text)
  RETURN rResultInterface!id

END

PUBLIC SUB GetUser() AS Integer

  IF cmbUser.Text THEN
    TRY rResultUser = Main.hDB.Exec("SELECT id FROM users WHERE fullname = &1", cmbUser.Text)
    RETURN rResultUser!id
  ELSE
    RETURN 0
  END IF

END

PUBLIC SUB GetLocation() AS Integer

  rResultLocation = Main.hDB.Exec("SELECT id FROM locations WHERE name = &1", cmbLocation.Text)
  RETURN rResultLocation!id

END

PUBLIC SUB SelectAddressFields(sType AS String)

  IF sType = "X10" OR sType = "A10" OR sType = "KAKU" THEN
    cmbHouseCode.Enabled = TRUE
    spDeviceCode.Enabled = TRUE
    tbOtherAddress.Enabled = FALSE
    cmbUser.Enabled = FALSE
  ELSE
    cmbHouseCode.Enabled = FALSE
    spDeviceCode.Enabled = FALSE
    tbOtherAddress.Enabled = TRUE
    cmbUser.Enabled = FALSE
  END IF

  SELECT CASE sType
    CASE "AIBO"
      cmbUser.Enabled = TRUE
      lblOther.Text = ("IP Address")
    CASE "1-Wire"
      cmbUser.Enabled = TRUE
      lblOther.Text = ("1-Wire ID")
    CASE "Bluetooth"
      cmbUser.Enabled = TRUE
      lblOther.Text = ("MAC Address")
    CASE "HDDTemp"
      cmbUser.Enabled = TRUE
      lblOther.Text = ("Device Name")
    CASE "Plugwise"
      lblOther.Text = ("MAC Address")
    CASE "Oregon"
      lblOther.Text = ("Address")
    CASE "RFXCom"
      lblOther.Text = ("Address")
  END SELECT

END

PUBLIC SUB FillAddressFields(sType AS String)

  IF sType = "X10" OR sType = "A10" OR sType = "KAKU" THEN
    ' fill address fields
    IF rResult!address THEN
      cmbHouseCode.Text = Left$(rResult!address, 1)
      spDeviceCode.Value = Right$(rResult!address, 1)
    END IF
  ELSE
    IF rResult!address THEN
      tbOtherAddress.Text = rResult!address
    END IF
  END IF

END

PUBLIC SUB GetAddress() AS String

  IF cmbHouseCode.Enabled = TRUE THEN 
    RETURN cmbHouseCode.Text & Format$(spDeviceCode.Value, "0#")
  ELSE 
    RETURN tbOtherAddress.Text
  END IF

END

PUBLIC SUB tbName_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbInterface_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbHouseCode_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB spDeviceCode_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbOtherAddress_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbLocation_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbLabel_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbLabel2_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbLabel3_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbLabel4_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbValue_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB btnCancel_Click()

  bAddDevice = FALSE
  ME.Close

END

PUBLIC SUB cmbModule_Click()

  RefreshDeviceType()
  btnSave.Enabled = TRUE
  LoadDeviceImage()

END

PRIVATE SUB LoadDeviceImage()

  DIM sImage AS String

  sImage = Main.sBaseDir &/ "icons/devices" &/ LCase(Replace(cmbModule.Text, " ", "-") & ".jpg")
  TRY pbDevice.Picture = Picture.Load(sImage)

END

PUBLIC SUB GetGroups() AS String

  DIM iCount AS Integer
  DIM sGroups AS String = "|"

  lvGroupActive.MoveFirst

  FOR iCount = 1 TO lvGroupActive.Count
    sGroups = sGroups & lvGroupActive.Item.Text & "|"
    lvGroupActive.MoveNext
  NEXT

  RETURN sGroups

END

PUBLIC SUB lvGroupAvail_Click()

  btnSave.Enabled = TRUE
  lvGroupActive.Add(lvGroupAvail.Item.Key, lvGroupAvail.Item.Key) 
  lvGroupAvail.Remove(lvGroupAvail.Item.Key)

END

PUBLIC SUB lvGroupActive_Click()

  btnSave.Enabled = TRUE
  lvGroupAvail.Add(lvGroupActive.Item.Key, lvGroupActive.Item.Key) 
  lvGroupActive.Remove(lvGroupActive.Item.Key)

END

PUBLIC SUB btnDeleteDevice_Click()

  SELECT Message.Question("Are you sure that you want to delete this device?", "Yes", "No")
    CASE 1
      Main.hDB.Exec("DELETE FROM devices WHERE id = &1", rResult!id)
      ME.Close
      FDevices.GetDeviceList()
  END SELECT

END

PRIVATE SUB DeviceNameExist(sName AS String) AS Boolean

  DIM rResultDevice AS Result

  rResultDevice = Main.hDB.Exec("SELECT id FROM devices WHERE name = &1", sName)
  IF rResultDevice THEN
    IF rResultDevice.Count THEN
      RETURN TRUE
    END IF
  END IF
  RETURN FALSE

END

PUBLIC SUB btnNewDevice_Click()

  IF NOT tbName.Text THEN
    Balloon("Please enter a name for this device!", tbName)
    RETURN
  END IF
  IF DeviceNameExist(tbName.Text) THEN 
    Balloon("Please enter a unique name for this device!", tbName)
    RETURN
  END IF

  Main.hDB.Begin()
  rResult = Main.hDB.Create("devices")
  rResult!name = tbName.Text
  rResult!module = GetDeviceType()
  rResult!interface = GetInterface()
  rResult!address = GetAddress()
  rResult!location = GetLocation()
  IF cmbUser.Text THEN rResult!user = GetUser()
  rResult!groups = GetGroups()
  rResult!label = cmbLabel.Text
  rResult!label2 = cmbLabel2.Text
  rResult!label3 = cmbLabel3.Text
  rResult!label4 = cmbLabel4.Text
  rResult!value = tbValue.Text
  rResult!value2 = tbValue2.Text
  rResult!value3 = tbValue3.Text
  rResult!value4 = tbValue4.Text
  rResult!onicon = tbOnIcon.Text
  rResult!officon = tbOffIcon.Text
  rResult!batterystatus = tbBatt.Text
  rResult!comments = tbComments.Text
  rResult!enabled = chkEnabled.Value
  rResult!hide = chkHide.Value
  rResult!log = chkLog.Value
  rResult!switchable = chkSwitchable.Value
  rResult!dimable = chkDimable.Value
  rResult!graph = chkGraph.Value
  rResult!valuerrddsname = tbValueDS.Text
  rResult!value2rrddsname = tbValue2DS.Text
  rResult!value3rrddsname = tbValue3DS.Text
  rResult!value4rrddsname = tbValue4DS.Text
  rResult!valuerrdtype = cmbValueType.Text
  rResult!value2rrdtype = cmbValue2Type.Text
  rResult!value3rrdtype = cmbValue3Type.Text
  rResult!value4rrdtype = cmbValue4Type.Text
  IF tbX.Text THEN rResult!x = tbX.Text
  IF tbY.Text THEN rResult!y = tbY.Text
  rResult!floorplan = GetFloorplan()
  rResult.Update()
  Main.hDB.Commit()
  FDevices.GetDeviceList()
  bAddDevice = FALSE

  ME.Close

END

PUBLIC SUB btnSave_Click()

  DIM rResultUpdate AS Result
  DIM sSql AS String
  DIM iLocation AS Integer
  DIM sAddress AS String
  DIM iInterface AS Integer
  DIM iDeviceType AS Integer
  DIM iFloorplan AS Integer
  DIM sGroups AS String
  DIM iUser AS Integer

  IF bAddDevice THEN
    btnNewDevice_Click()
    RETURN
  END IF

  iDeviceType = GetDeviceType()
  iInterface = GetInterface()
  sAddress = GetAddress()
  iLocation = GetLocation()
  sGroups = GetGroups()
  iFloorplan = GetFloorplan()
  iUser = GetUser()

  ' save new device settings
  sSql = "UPDATE devices SET name = &1, module = &2, interface = &3, address = &4, location = &5,"
  sSql &= "user = &6, label = &7, label2 = &8, label3 = &9, value = &10, officon = &11, onicon = &12,"
  sSql &= "batterystatus = &13, comments = &14, enabled = &15, groups = &16, value2 = &17, value3 = &18,"
  sSql &= "hide = &19, switchable = &20, dimable = &21, log = &22, graph = &23, valuerrddsname = &24,"
  sSql &= "value2rrddsname = &25, value3rrddsname = &26, valuerrdtype = &27, x = &28, y = &29, floorplan = &30,"
  sSql &= "value2rrdtype = &31, value3rrdtype = &32, value4 = &33, label4 = &34, value3rrddsname = &35, valuerrdtype = &36 WHERE id = &37"
  rResultUpdate = Main.hDB.Exec(sSql, tbName.Text, rResultType!id, iInterface, sAddress, iLocation, iUser, cmbLabel.Text, cmbLabel2.Text, cmbLabel3.Text, tbValue.Text, tbOffIcon.Text, tbOnIcon.Text, tbBatt.Text, tbComments.Text, chkEnabled.Value, sGroups, tbValue2.Text, tbValue3.Text, chkHide.Value, chkSwitchable.Value, chkDimable.Value, chkLog.Value, chkGraph.Value, tbValueDS.Text, tbValue2DS.Text, tbValue3DS.Text, cmbValueType.Text, tbX.Text, tbY.Text, iFloorplan, cmbValue2Type.Text, cmbValue3Type.Text, tbValue4.Text, cmbLabel4.Text, tbValue4DS.Text, cmbValue4Type.Text, rResult!id)

  FDevices.GetDeviceList()
  RRDTool.CreateRRDs()
  bAddDevice = FALSE
  ME.Close

END

PUBLIC SUB tbValue2_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbValue3_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbValue4_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbBatt_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB chkEnabled_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB chkHide_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB chkLog_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbComments_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB spDeviceCode_Change()

  btnSave.Enabled = TRUE

END

PUBLIC SUB chkGraph_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbValueDS_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbValueType_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbValue2DS_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbValue2Type_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB tbValue4DS_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbValue4Type_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB chkDimable_Click()

  chkSwitchable.Value = FALSE
  btnSave.Enabled = TRUE

END

PUBLIC SUB chkSwitchable_Click()

  chkDimable.Value = FALSE
  btnSave.Enabled = TRUE

END

PUBLIC SUB btnBattReplaced_Click()

  tbComments.Text &= " Battery replaced at " & Format(Now(), "yyyy-mm-dd hh:nn:ss ")
  tbBatt.Text = NULL
  btnSave.Enabled = TRUE

END

PUBLIC SUB btnIconOn_Click()

  tbOnIcon.Text = FSelectImage.Run(Main.sBaseDir &/ "icons" &/ tbOnIcon.Text, "icons")
  btnSave.Enabled = TRUE

END

PUBLIC SUB btnIconOff_Click()

  tbOffIcon.Text = FSelectImage.Run(Main.sBaseDir &/ "icons" &/ tbOffIcon.Text, "icons")
  btnSave.Enabled = TRUE

END

PUBLIC SUB btnEditor_Click()

  ' only start editor if location/floorplan is chosen
  IF cmbFloorplan.Text THEN
    FFloorplanEditor.Show()
  ELSE
    Message("Select a floorplan first!")
  END IF

END

PUBLIC SUB GetFloorplan() AS Integer

  rResultFloorplan = Main.hDB.Exec("SELECT floor FROM floors WHERE name = &1", cmbFloorplan.Text)
  RETURN rResultFloorplan!floor

END

PUBLIC SUB cmbFloorplan_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbLabel_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbLabel2_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbUser_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB btnDeleteRRD_Click()

  RRDTool.DeleteRRD(rResult!name)

END
