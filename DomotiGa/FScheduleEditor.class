' Gambas class file

' Description:
' FScenarioEditor.class
' Support for creating and editing of all thermostat constants.

' Development Status:
' Works for 99%.

' DomotiGa - an open source home automation program.
' Copyright(C) 2011 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC rResultScenarii AS Result
PUBLIC rResultHeatings AS Result
PUBLIC bAddSchedule AS Boolean
PUBLIC TimeValue AS String[] = ["00:00", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00", "03:30", "04:00", "04:30", "05:00", "05:30", "06:00", "06:30", "07:00", "07:30", "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30"]
PUBLIC nbCol AS Integer = 48
PRIVATE rResult AS Result
PRIVATE nbRow AS Integer = 7
PRIVATE currentColor AS Integer = &H00FFFFFF&
PRIVATE currentId AS Integer = 0

PUBLIC SUB Form_Open()

  IF bAddSchedule THEN ME.Text = ("Create Schedule")
  ME.Move(FMain.X + 50, FMain.Y + 70)

  GetScenarii()
  GetHeatings()
  GetContants()
  LoadSchedule()

  IF bAddSchedule THEN Select_Table(TRUE)

END

PUBLIC SUB LoadSchedule()

  DIM i AS Integer
  DIM rResultDetail AS Result

  WITH tvPlanning
    .Font.Size = "9"
    .Columns.Count = nbCol + 1
    FOR i = 0 TO nbCol
      .Columns[i].Title = " "
      IF (i MOD 2 = 0) THEN
        .Columns[i].Width = 11
      ELSE 
        .Columns[i].Width = 10
      ENDIF
    NEXT
    .Rows.Count = nbRow
    .Rows[0].Title = "Sun."
    .Rows[1].Title = "Mon."
    .Rows[2].Title = "Tue."
    .Rows[3].Title = "Wed."
    .Rows[4].Title = "Thu."
    .Rows[5].Title = "Fri."
    .Rows[6].Title = "Sat."
  END WITH

  IF NOT bAddSchedule THEN
    ' get selected event values
    TRY rResult = Main.hDB.Exec("SELECT * FROM thermostat_schedule WHERE scenario = &1 and heating=&2", FThermostat.txtCurTherm, FThermostat.txtCurThermAux)
    IF NOT ERROR THEN
      IF rResult.Count >= 1 THEN
        cmbScenario.Text = GetScenarioName(rResult!scenario)
        cmbHeating.Text = GetHeatingName(rResult!heating)
        txtDescription.Text = rResult!description
      ELSE
        Message(("Couldn't load schedule record!"))
        ME.Close
      ENDIF
    ENDIF
    rResultDetail = Main.hDB.Exec("SELECT * FROM thermostat_schedule_entry WHERE scenario = &1 and heating=&2 ORDER BY day, time", FThermostat.txtCurTherm, FThermostat.txtCurThermAux)
    i = 0
    IF rResultDetail THEN
      IF rResultDetail.Count THEN
        FOR EACH rResultDetail
          tvPlanning[rResultDetail!day - 1, i].Text = rResultDetail!constant
          tvPlanning[rResultDetail!day - 1, i].Background = GetConstantColor(rResultDetail!constant)
          IF i = nbCol - 1 THEN
            i = 0
          ELSE
            INC i
          ENDIF
        NEXT
      ENDIF
    ELSE
      Message.Info(("Error: couldn't find thermostat_schedule_entry table!"))
    ENDIF
  ENDIF

END

PUBLIC SUB GetConstantColor(iId AS Integer) AS Integer

  DIM rResultCst AS Result

  rResultCst = Main.hDB.Exec("SELECT color FROM thermostat_constant WHERE id = &1", iId)
  TRY RETURN rResultCst!color

END

PUBLIC SUB GetScenarioName(iId AS Integer) AS String

  DIM rResultScen AS Result

  rResultScen = Main.hDB.Exec("SELECT name FROM thermostat_scenarii WHERE id = &1", iId)
  TRY RETURN rResultScen!name

END

PUBLIC SUB GetHeatingName(iId AS Integer) AS String

  DIM rResultHeat AS Result

  rResultHeat = Main.hDB.Exec("SELECT name FROM thermostat_heating WHERE id = &1", iId)
  TRY RETURN rResultHeat!name

END

PUBLIC SUB ConstantToogleButton_Click()

  currentColor = LAST.Background
  currentId = LAST.Tag
  txtConstant.Text = LAST.ToolTip & "(" & LAST.text & ")"

END

PUBLIC SUB btnCancel_Click()

  bAddSchedule = FALSE
  ME.Close

END

PUBLIC SUB btnDelete_Click()

  SELECT Message.Question(("Are you sure that you want to delete this schedule ?"), ("Yes"), ("No"))
    CASE 1
      Main.hDB.Exec("DELETE FROM thermostat_schedule WHERE scenario = &1 and heating=&2", rResult!scenario, rResult!heating)
      Main.hDB.Exec("DELETE FROM thermostat_schedule_entry WHERE scenario = &1 and heating=&2", rResult!scenario, rResult!heating)
      ME.Close
      FThermostat.GetThermList()
  END SELECT

END

PUBLIC SUB btnNew_Click()

  bAddSchedule = TRUE
  btnSave_Click()

END

PUBLIC SUB btnSave_Click()

  DIM iRow, iCol, iRet AS Integer
  DIM rResultUpdate AS Result
  DIM sSql AS String

  IF NOT cmbScenario.Text THEN
    Balloon(("Please select a scenario for this schedule !"), cmbScenario)
    RETURN
  ENDIF
  IF NOT cmbHeating.Text THEN
    Balloon(("Please select a heating for this schedule !"), cmbHeating)
    RETURN
  ENDIF
  IF bAddSchedule THEN
    ' create new scenario row
    sSql = "INSERT INTO thermostat_schedule SET  scenario = &1, heating = &2, description=&3"
    rResultUpdate = Main.hDB.Exec(sSql, GetScenarioId(cmbScenario.Text), GetHeatingId(cmbHeating.Text), txtDescription.Text)
  ELSE
    ' update new event details
    sSql = "UPDATE thermostat_schedule SET scenario = &1, heating = &2, description=&3 WHERE scenario = &4 and heating=&5"
    rResultUpdate = Main.hDB.Exec(sSql, GetScenarioId(cmbScenario.Text), GetHeatingId(cmbHeating.Text), txtDescription.Text, rResult!scenario, rResult!heating)
    ' remove entries
    sSql = "DELETE FROM  thermostat_schedule_entry WHERE scenario = &1 and heating=&2"
    rResultUpdate = Main.hDB.Exec(sSql, rResult!scenario, rResult!heating)
  ENDIF
  ' add new entries
  sSql = "INSERT INTO thermostat_schedule_entry SET scenario = &1, heating=&2, day=&3, time=&4, constant=&5"
    WITH tvPlanning
      FOR iCol = 0 TO nbCol - 1
        FOR iRow = 0 TO nbRow - 1
          rResultUpdate = Main.hDB.Exec(sSql, GetScenarioId(cmbScenario.Text), GetHeatingId(cmbHeating.Text), iRow + 1, TimeValue[iCol], tvPlanning[iRow, iCol].Text)
        NEXT
      NEXT
      .Rows.Count = nbRow
      .Rows[0].Title = "Mon."
      .Rows[1].Title = "Tue."
      .Rows[2].Title = "Wed."
      .Rows[3].Title = "Thu."
      .Rows[4].Title = "Fri."
      .Rows[5].Title = "Sat."
      .Rows[6].Title = "Sun."
  END WITH
  FThermostat.GetThermList()
  bAddSchedule = FALSE
  ME.Close

END

PUBLIC SUB GetHeatingId(sName AS String) AS Integer

  DIM rResultHeatName AS result

  rResultHeatName = Main.hDB.Exec("SELECT id FROM thermostat_heating WHERE name = &1", sName)
  IF rResultHeatName THEN
    IF rResultHeatName.Count >= 1 THEN
      RETURN rResultHeatName!id
    ENDIF
  ENDIF
  RETURN 0

END

PUBLIC SUB GetScenarioId(sName AS String) AS Integer

  DIM rResultScenName AS result

  rResultScenName = Main.hDB.Exec("SELECT id FROM thermostat_scenarii WHERE name = &1", sName)
  IF rResultScenName THEN
    IF rResultScenName.Count >= 1 THEN
      RETURN rResultScenName!id
    ENDIF
  ENDIF
  RETURN 0

END

PRIVATE SUB ScheduleExist(sScenario AS String, sDevice AS String) AS Boolean

  Message("todo")

END

PUBLIC SUB tvPlanning_ColumnClick(Column AS Integer)

  Select_Column(Column, TRUE)

END

PUBLIC SUB tvPlanning_RowClick(Row AS Integer)

 Select_Row(Row, TRUE)

END

PUBLIC SUB btnHour_Click()

  Select_Hour(LAST.Tag)

END

PUBLIC SUB Select_Hour(iHour AS Integer)

  Select_Column(ihour * 2, TRUE)
  Select_Column(ihour * 2 + 1, TRUE)

END

PUBLIC SUB Select_Table(bSelected AS Boolean)

  DIM iRow AS Integer

  FOR iRow = 0 TO nbRow - 1
    Select_Row(iRow, bSelected)
  NEXT

END

PUBLIC SUB Select_Column(Column AS Integer, bSelected AS Boolean)

  DIM iRow AS Integer

  FOR iRow = 0 TO nbRow - 1
    Select_Cell(iRow, Column, bSelected)
  NEXT

END

PUBLIC SUB Select_Row(Row AS Integer, bSelected AS Boolean)

  DIM iCol AS Integer

  FOR iCol = 0 TO nbCol - 1
    Select_Cell(Row, iCol, bSelected)
  NEXT

END

PUBLIC SUB Select_Cell(Row AS Integer, Column AS Integer, bSelected AS Boolean)

  IF bSelected THEN
    tvPlanning[Row, Column].Background = currentColor
    tvPlanning[Row, Column].Text = currentId
  ENDIF

  btnSave.Enabled = TRUE

END

PUBLIC SUB tvPlanning_MouseUp()

  DIM iRow, iCol AS Integer

  IF Mouse.X <= 49 AND Mouse.Y <= 22 THEN 
    Select_Table(TRUE)
  ENDIF

  IF Mouse.X > 49 AND Mouse.Y > 22 THEN 
    iCol = Fix((Mouse.X - 49) / 10.5)
    iCol = Min(iCol, nbCol - 1)
    iRow = (Mouse.Y - 22) \ 20
    iRow = Min(iRow, nbRow - 1)
    Select_Table(FALSE)
    Select_Cell(iRow, iCol, TRUE)
  ENDIF

END

PUBLIC SUB GetScenarii()

  ' fill combos with available triggers
  TRY rResultScenarii = Main.hDB.Exec("SELECT * FROM thermostat_scenarii")
  cmbScenario.Clear
  cmbScenario.Add("")
  IF rResultScenarii THEN
    IF (rResultScenarii.Count >= 1) THEN
      FOR EACH rResultScenarii
        cmbScenario.Add(rResultScenarii!name)
      NEXT
    ENDIF
  ELSE
    Message(("No thermostat_scenarii database table found!"))
  ENDIF

END

PUBLIC SUB GetHeatings()

  cmbHeating.Clear
  cmbHeating.Add("")
  rResultHeatings = Main.hDB.Exec("SELECT * FROM thermostat_heating ORDER BY name")
  IF rResultHeatings THEN
    IF rResultHeatings.Count THEN
      FOR EACH rResultHeatings
        cmbHeating.Add(rResultHeatings!name)
      NEXT
    ENDIF
  ELSE
    Message.Info(("Error: couldn't find thermostat_heating table!"))
    RETURN
  ENDIF

END

PUBLIC SUB GetContants()

  DIM hBtn AS ToggleButton
  DIM rConstant AS Result
  DIM icount AS Integer

  TRY rConstant = Main.hDB.Exec("SELECT * FROM thermostat_constant order by value desc")
  IF NOT ERROR THEN
    FOR iCount = 0 TO rConstant.Count - 1
      hBtn = NEW ToggleButton(hbxConstant) AS "ConstantToogleButton"
      WITH hBtn
        .Name = rConstant!id
        .Text = rConstant!value
        .ToolTip = rConstant!name
        .Background = rConstant!color
        .Height = 42
        .Width = 77
        .Radio = TRUE
        .Tag = rConstant!id
        currentColor = .Background
        currentId = .Tag
        txtConstant.Text = .ToolTip & "(" & .text & ")"
      END WITH
      rConstant.MoveNext
    NEXT
  ELSE
    Message(("Couldn't load constants!"))
    ME.Close
  ENDIF

END

PUBLIC SUB cmbScenario_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB cmbHeating_Click()

  btnSave.Enabled = TRUE

END

PUBLIC SUB txtDescription_KeyPress()

  btnSave.Enabled = TRUE

END

PUBLIC SUB ConstantToogleButton_DblClick()

  FThermostat.txtCurTherm = LAST.Name
  FConstantEditor.Show()

END
