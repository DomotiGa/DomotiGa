' Gambas class file

' Description:
' FSystemStats.class
' Display all server related rrdtool graphs.

' Development Status:
' Working.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

PRIVATE tRefresh AS NEW Timer
PRIVATE bAutoRefresh AS Boolean
PRIVATE iMode AS Integer = 0

PUBLIC SUB Form_Open()

  DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs)
  Main.DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs, TRUE)

  ' create refresh timer
  tRefresh = NEW Timer AS "tRefresh"
  tRefresh.Delay = 30000 ' 30 seconds
  btnOverview.Enabled = FALSE

END

PUBLIC SUB Form_Resize()

  svGraphs.Move(4, 30, ME.ClientWidth - 8, ME.ClientHeight - 31)
  vpnlGraphs.Move(5, 31, ME.ClientWidth - 10, ME.ClientHeight - 33)

END

PUBLIC SUB Form_Close()

  tRefresh.Stop

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' refresh contents
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB tRefresh_Timer()

  DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs)
  IF NOT iMode THEN Main.DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs, TRUE)

END

PUBLIC SUB btnOverview_Click()

  iMode = 0
  btnOverview.Enabled = FALSE
  btnGraphsDay.Enabled = TRUE
  btnGraphsWeek.Enabled = TRUE
  btnGraphsMonth.Enabled = TRUE
  btnGraphsYear.Enabled = TRUE
  DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs)
  Main.DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs, TRUE)

END

PUBLIC SUB btnGraphsDay_Click()

  iMode = 1
  btnOverview.Enabled = TRUE
  btnGraphsDay.Enabled = FALSE
  btnGraphsWeek.Enabled = TRUE
  btnGraphsMonth.Enabled = TRUE
  btnGraphsYear.Enabled = TRUE
  DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs)
  Main.DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs, TRUE)

END

PUBLIC SUB btnGraphsWeek_Click()

  iMode = 2
  btnOverview.Enabled = TRUE
  btnGraphsDay.Enabled = TRUE
  btnGraphsWeek.Enabled = FALSE
  btnGraphsMonth.Enabled = TRUE
  btnGraphsYear.Enabled = TRUE
  DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs)
  Main.DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs, TRUE)

END

PUBLIC SUB btnGraphsMonth_Click()

  iMode = 3
  btnOverview.Enabled = TRUE
  btnGraphsDay.Enabled = TRUE
  btnGraphsWeek.Enabled = TRUE
  btnGraphsMonth.Enabled = FALSE
  btnGraphsYear.Enabled = TRUE
  DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs)
  Main.DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs, TRUE)

END

PUBLIC SUB btnGraphsYear_Click()

  iMode = 4
  btnOverview.Enabled = TRUE
  btnGraphsDay.Enabled = TRUE
  btnGraphsWeek.Enabled = TRUE
  btnGraphsMonth.Enabled = TRUE
  btnGraphsYear.Enabled = FALSE
  DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs)
  Main.DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs, TRUE)

END

PUBLIC SUB btnRefresh_Click()

  DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs)
  IF NOT iMode THEN Main.DisplayGraphs(iMode, "Server", FServerStats.vpnlGraphs, TRUE)

END

PUBLIC SUB tbtnRefresh_Click()

  IF tbtnRefresh.Value = TRUE THEN
    tRefresh.Start
    bAutoRefresh = TRUE
    btnRefresh.Enabled = FALSE
  ELSE
    tRefresh.Stop
    bAutoRefresh = FALSE
    btnRefresh.Enabled = TRUE
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' display graph images
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB DisplayGraphs(iMode AS Integer, sGroup AS String, oPanel AS Object)

  DIM pGraph AS Picture
  DIM sGraphs AS String[]
  DIM sList, sGraph, sType, sName AS String
  DIM hPictureBox AS PictureBox
  DIM oObject AS Object
  DIM iHeight AS Integer

  SELECT CASE iMode
    CASE 0
      sType = "1h"
      sName = ("Hour")
    CASE 1
      sType = "1d"
      sName = ("Day")
    CASE 2
      sType = "1w"
      sName = ("Week")
    CASE 3
      sType = "1m"
      sName = ("Month")
    CASE 4
      sType = "1y"
      sName = ("Year")
  END SELECT

  ServerStats.CreateGraphs(sType)

  ' delete previous graphs first
  FOR EACH oObject IN oPanel.Children
    oObject.Delete()
  NEXT

  Main.DisplayHeader(sGroup & (" Performance - Last") & " " & sName, oPanel)
  sList = ServerStats.Graphs()
  sGraphs = Split(sList, "|")
  FOR EACH sGraph IN sGraphs
    IF sGraph THEN
      sGraph &= "-" & sType & ".png"
      TRY pGraph = Picture.Load(sGraph)
      IF pGraph THEN
        hPictureBox = NEW PictureBox(oPanel) AS "Graph"
        WITH hPictureBox
          .Picture = pGraph
          .Height = 200
          .Width = 528
          .Tag = sGraph
        END WITH
      END IF
    END IF
  NEXT
  iHeight = 0
  ' calculated needed scrollview height
  FOR EACH oObject IN oPanel.Children
    iHeight += oObject.Height
  NEXT
  oPanel.Height = iHeight

END
