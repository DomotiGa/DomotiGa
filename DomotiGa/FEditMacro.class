' Gambas class file

' Description:
' FEditMacro.class
' Macro editor for events.

' Development Status:
' Working.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2012 Ron Klinkien

' Read file called COPYING for license details.

PRIVATE rResult AS Result
PRIVATE cMacro AS NEW Collection
PRIVATE iKey AS Integer
PUBLIC tMessage AS NEW Timer

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)
  FillMacro()

  tMessage = NEW Timer AS "tMessage"
  tMessage.Delay = 3000 ' 3 seconds
  tMessage.Stop

END

PUBLIC SUB Run() AS Boolean

  RETURN NOT ME.ShowModal()

END

PUBLIC SUB FillMacro()

  DIM iCount AS Integer

  rResult = Main.hDB.Exec("SELECT * FROM macros")
  IF NOT rResult THEN
    lvMacro.Add("ERROR", "Error: table 'macro' not found!")
    RETURN
  ENDIF
  iKey = 0
  FOR iCount = 0 TO rResult.Max
    lvMacro.Add(iKey, rResult!name)
    cMacro.Add(rResult!formula, iKey)
    rResult.MoveNext
    INC iKey
  NEXT

END

PUBLIC SUB btnOK_Click()

  DIM rResult AS Result
  DIM tableMacros AS Table
  DIM iIndex AS Integer
  DIM aVariant AS Variant

  ' delete complete history
  TRY Main.hDB.Tables.Remove("macros")
  ' recreate empty one
  tableMacros = Main.hDB.Tables.Add("macros")
  tableMacros.Fields.Add("id", db.Serial)
  tableMacros.Fields.Add("name", db.String, 64)
  tableMacros.Fields.Add("formula", db.String, 0)
  tableMacros.PrimaryKey = ["id"]
  tableMacros.Update()

  FOR iIndex = 0 TO iKey
    IF cMacro.Exist(iIndex) THEN 
      Main.hDB.Begin()
      rResult = Main.hDB.Create("macros")
      rResult!name = lvMacro[iIndex].Text
      rResult!formula = cMacro[iIndex]
      rResult.Update()
      Main.hDB.Commit()
    ENDIF
  NEXT

  ME.Close(TRUE)

END

PUBLIC SUB btnCancel_Click()

  ME.Close

END

PUBLIC SUB lvMacro_Click()

  taMacro.Text = cMacro[lvMacro.Current.key]

END

PUBLIC SUB btEdit_Click()

  IF lvMacro.Count = 0 THEN RETURN
  taMacro.Text = FActionScriptEditor.Run(cMacro[lvMacro.Current.key])
  cMacro[lvMacro.Current.key] = taMacro.Text

END

PUBLIC SUB lvMacro_Activate()

  btEdit_Click()

END

PUBLIC SUB lvMacro_Rename()

  lvMacro.Item.Rename()

END

PUBLIC SUB btAdd_Click()

  lvMacro.Add(iKey, "Macro")
  cMacro.Add("", iKey)
  lvMacro.MoveTo(iKey)
  INC iKey 
  taMacro.Clear()
  lvMacro_Rename()

END

EVENT Rename()

PUBLIC SUB taMacro_DblClick()

  btEdit_Click()

END

PUBLIC SUB btDelete_Click()

  IF lvMacro.Count = 0 THEN RETURN
  cMacro.Remove(lvMacro.Current.key)
  lvMacro.Current.Delete()
  taMacro.Text = ""

END

PUBLIC SUB btEval_Click()

  DIM sToEval AS String

  ' if a part of the formula is selected, we only elvaluate this part
  IF taMacro.Selection.Length = 0 THEN
    sToEval = taMacro.Text
  ELSE
    sToEval = taMacro.Selection.Text
  ENDIF

  tbEval.Text = Events.EvalFormula(sToEval)
  tMessage.Start

END

PUBLIC SUB tMessage_Timer()

  tbEval.Text = ""
  tMessage.Stop

END
