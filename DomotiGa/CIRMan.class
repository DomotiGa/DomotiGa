' Gambas class file

' Description:
' CIRMan.class
' Use UIR or IRMan Infrared receiver to control devices.

' Development Status:
' Not working yet.

' Links:
' http://www.raphnet.net/divers/documentation/irman_protocol.txt

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

PROPERTY Port AS String
PROPERTY IRManDebug AS Boolean

PRIVATE sPort AS String
PRIVATE bIRManDebug AS Boolean

PUBLIC hIRMan AS NEW SerialPort

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' open serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Connect() AS Boolean

  ' try to close the port
  TRY hIRMan.Close

  ' get a new one
  hIRMan = NEW Serialport AS "IRMan"

  WITH hIRMan
    .PortName = sPort
    .Speed = 9600
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .Open()
  END WITH

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog(("IRMan Error: ") & ERROR.Text)
  RETURN FALSE

END

PUBLIC FUNCTION Run() AS Boolean

  ' init device
  hIRMan.RTS = TRUE
  hIRMan.DTR = TRUE
  TRY PRINT #hIRMan, "I"
  WAIT 0.5
  TRY PRINT #hIRMan, "R"

CATCH
  IF Main.bIRManDebug THEN Main.WriteDebugLog(("[IRMan] Error initializing receiver!"))

END

PUBLIC SUB IRMan_Read()

  DIM sData AS String

  ' read the 6 unique bytes
  TRY READ #hIRMan, sData, 6
  IF NOT ERROR THEN
    ParseLine(sData)
    sData = NULL
  ENDIF

END

PUBLIC SUB ParseLine(sData AS String)

  DIM iCnt AS Integer
  DIM sButton AS String
  DIM sRemote AS String = "irman"

  FOR iCnt = 1 TO Len(sData)
    sButton &= Hex(Asc(Mid$(sData, iCnt, 1)), 2)
  NEXT
  IF Main.bIRManDebug THEN Main.WriteDebugLog(("[UIR/IRMan] Remote: ") & sRemote & (" Button: ") & sButton)
  Events.CheckIRRemoteEvents("irman", sButton)

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' close port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Disconnect() AS Boolean

  ' try to close the connection
  TRY hIRMan.Close
  Main.WriteLog(("IRMan serial port close."))

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog(("IRMan Error: ") & ERROR.Text)
  RETURN FALSE

END

' implement properties
FUNCTION Port_Read() AS String

  RETURN sPort

END

SUB Port_Write(Value AS String)

  sPort = Value

END

PRIVATE FUNCTION IRManDebug_Read() AS Boolean

  RETURN bIRManDebug

END

PRIVATE SUB IRManDebug_Write(Value AS Boolean)

  bIRManDebug = Value

END

