' Gambas class file
' Gambas module file

' Description:
' CIRMan.class
' Use IRMan Infrared receiver to control devices.

' Development Status:
' Writing is working, maybe better error checking is needed.

' Links:
' http://www.raphnet.net/divers/documentation/irman_protocol.txt

' DomotiGa - an open source home automation program.
' Copyright(C) 2008 Ron Klinkien

' Read file called LICENSE for license details.

PROPERTY Port AS String
PROPERTY IRManDebug AS Boolean

PRIVATE sPort AS String
PRIVATE bIRManDebug AS Boolean

PUBLIC hIRMan AS NEW SerialPort
' PUBLIC tIRMan AS NEW Timer

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' open serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Connect() AS Boolean

  ' try to close the port
  TRY hIRMan.Close

  ' get a new one
  hIRMan = NEW Serialport AS "IRMan"

  WITH hIRMan
    .PortName = sPort
    .Speed = 9600
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .Open()
  END WITH

  ' ' start poll timer for IRMan status LED
  ' tIRMan = NEW Timer AS "tIRManLED"
  ' tIRMan.Delay = 250
  ' tIRMan.Enabled = FALSE

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog("IRMan Error: " & ERROR.Text)
  RETURN FALSE

END

PUBLIC FUNCTION Run() AS Boolean

  ' init device
  hIRMan.RTS = TRUE
  hIRMan.DTR = TRUE
  PRINT #hIRMan, "I"
  WAIT 0.5
  PRINT #hIRMan, "R"

END

PUBLIC SUB IRMan_Read()

  DIM sData AS Byte

  READ #hIRMan, sData
  ProcessReceivedChar(sData)

END

PRIVATE SUB ProcessReceivedChar(sComChar AS Byte)

 IF Main.bIRManDebug THEN Main.WriteDebugLog("[IRMan] Received " & sComChar, TRUE)
  
END

PUBLIC SUB ParseLine(sStr AS String)

  ' FMain.pbIRMan.Picture = Main.pLedOn
  ' tIRMan.Enabled = TRUE

  IF Main.bIRManDebug THEN Main.WriteDebugLog("[IRMan] Received " & sStr)

END

' PUBLIC SUB tIRManLED_Timer()
' 
'   FMain.pbIRMan.Picture = Main.pLedOff
'   tIRMan.Enabled = FALSE
' 
' END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' close port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Disconnect() AS Boolean

  ' try to close the connection
  TRY hIRMan.Close
  Main.WriteLog("IRMan serial port close.")

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog("IRMan Error: " & ERROR.Text)
  RETURN FALSE

END

' implement properties
FUNCTION Port_Read() AS String

  RETURN sPort

END

SUB Port_Write(Value AS String)

  sPort = Value

END

PRIVATE FUNCTION IRManDebug_Read() AS Boolean

  RETURN bIRManDebug

END

PRIVATE SUB IRManDebug_Write(Value AS Boolean)

  bIRManDebug = Value

END

