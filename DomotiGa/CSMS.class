' Gambas class file

' Description:
' CSMS.class
' Support for falcom A2D SMS modem for outgoing SMS text messages

' Development Status:
' Modem init works, sending sms text messages not fully tested yet.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008 Ron Klinkien

' Read file called COPYING for license details.

PROPERTY Port AS String
PROPERTY Baud AS String
PROPERTY PIN AS String
PROPERTY ServiceCentre AS String
PROPERTY Contact AS String
PROPERTY SMSDebug AS Boolean

PRIVATE sPort AS String
PRIVATE sBaud AS String
PRIVATE sPIN AS String
PRIVATE sServiceCentre AS String
PRIVATE sContact AS String
PRIVATE bSMSDebug AS Boolean

PUBLIC hSMS AS NEW SerialPort

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' open serial port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Connect() AS Boolean

  ' try to close the port
  TRY hSMS.Close

  ' get a new one
  hSMS = NEW Serialport AS "SMS"
  WITH hSMS
    .PortName = sPort
    .Speed = sBaud
    .Parity = 0
    .DataBits = 8
    .StopBits = 1
    .FlowControl = 0
    .Open()
  END WITH

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog("SMS Error: " & ERROR.Text)
  RETURN FALSE

END

PUBLIC SUB InitModem() AS Boolean

  DIM sCmd, sResult AS String

  ' a few possible commands strings 
  ' sCmd = "AT+CGMI" ' get manufacturer info
  ' sCmd = "AT+CPIN=0000" ' enter PIN
  ' sCmd = "AT+CPIN?" ' ask PIN status
  ' sCmd = "AT+CREG?" ' network status
  ' sCmd = "AT+COPS=?" ' show network(s)
  ' sCmd = "AT+CSQ" ' show network field strength
  ' sCmd = "AT+CGSN" ' show IMEI number

  ' ask PIN status
  sCmd = "AT+CPIN?" ' ask PIN status
  IF bSMSDebug THEN Main.WriteDebugLog("[SMS] Ask PIN status " & sCmd)
  sResult = SendCmd(sCmd, 1)

  IF sResult <> "+CPIN: READY" THEN
    ' enter PIN
    sCmd = "AT+CPIN=" & sPIN
    IF bSMSDebug THEN Main.WriteDebugLog("[SMS] Send PIN " & sCmd)
    SendCmd(sCmd, 1)
    sCmd = "AT+CPIN?" ' ask PIN status
    IF bSMSDebug THEN Main.WriteDebugLog("[SMS] Ask PIN status " & sCmd)
    SendCmd(sCmd, 1)
  ELSE
    ' set service centre
    sCmd = "AT+CSCA=" & sServiceCentre 
    IF bSMSDebug THEN Main.WriteDebugLog("[SMS] Set ServiceCentre " & sCmd)
    sResult = SendCmd(sCmd, 1)
    IF InStr(sResult, "OK") THEN
      RETURN TRUE
    ELSE
      RETURN FALSE
    END IF
  END IF
  RETURN FALSE

END

PUBLIC SUB SendSMS(sText AS String, sTo AS String) AS Boolean

  DIM sCmd, sResult AS String

  ' send message
  sCmd = "AT+CMGS=" & sTo & Chr$(13)
  IF bSMSDebug THEN Main.WriteDebugLog("[SMS] SendSMS " & sCmd)
  sResult = SendCmd(sCmd, 0)
  IF InStr(sResult, "OK") THEN
    sCmd &= Chr$(27) ' send test msg
    SendCmd(sCmd, 0)
    RETURN TRUE
  ELSE
    RETURN FALSE
  END IF

END

PUBLIC SUB ReadSMS() AS String

  DIM sCmd, sResult AS String

  sCmd = "AT+CMGL" ' read messages
  IF bSMSDebug THEN Main.WriteDebugLog("[SMS] ReadSMS " & sCmd)
  sResult = SendCmd(sCmd, 1)

  RETURN sResult

END

PUBLIC SUB SendCmd(sCmd AS String, bEnd AS Boolean) AS String

  DIM sBuf AS String

  IF hSMS.Status <> Net.Active THEN RETURN

  IF bEnd THEN
    PRINT #hSMS, sCmd; Chr$(13); Chr$(10);
  ELSE
    PRINT #hSMS, sCmd;
  END IF

  WAIT 0.6

  TRY READ #hSMS, sBuf, Lof(hSMS)
  sBuf = Replace$(sBuf, Chr$(13) & Chr$(10), "") ' strip CR/LF's

  IF bSMSDebug THEN Main.WriteDebugLog("[SMS] SendCMD " & sCmd)
  RETURN sBuf

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' close port
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION Disconnect() AS Boolean

  ' try to close the connection
  TRY hSMS.Close
  Main.WriteLog("SMS serial port close.")

  ' all ok
  RETURN TRUE

CATCH ' some errors
  Main.WriteLog("SMS Error: " & ERROR.Text)
  RETURN FALSE

END

' implement the properties
PRIVATE FUNCTION Port_Read() AS String

  RETURN sPort

END

PRIVATE SUB Port_Write(sValue AS String)

  sPort = sValue

END

PRIVATE FUNCTION Baud_Read() AS String

  RETURN sBaud

END

PRIVATE SUB Baud_Write(sValue AS String)

  sBaud = sValue

END

PRIVATE FUNCTION PIN_Read() AS String

  RETURN sPIN

END

PRIVATE SUB PIN_Write(sValue AS String)

  sPIN = sValue

END

PRIVATE FUNCTION Contact_Read() AS String

  RETURN sContact

END

PRIVATE SUB Contact_Write(sValue AS String)

  sContact = sValue

END

PRIVATE FUNCTION ServiceCentre_Read() AS String

  RETURN sServiceCentre

END

PRIVATE SUB ServiceCentre_Write(sValue AS String)

  sServiceCentre = sValue

END

PRIVATE FUNCTION SMSDebug_Read() AS Boolean

  RETURN bSMSDebug

END

PRIVATE SUB SMSDebug_Write(sValue AS Boolean)

  bSMSDebug = sValue

END
