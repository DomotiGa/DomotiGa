' Gambas module file

' Description:
' Sounds.module
' Play sound files on events.

' Development Status:
' Working.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

PRIVATE sDefaultSoundDirectory AS String

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' just a function to list available sounds
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB LoadSounds()

  DIM sSound AS String
  DIM sSoundFiles AS String[]

  sDefaultSoundDirectory = Main.sBaseDir &/ "sounds"

  ' fill array with available sounds
  sSoundFiles = Dir(sDefaultSoundDirectory, "*.wav")
  sSoundFiles.Insert(Dir(sDefaultSoundDirectory, "*.mp3"))
  sSoundFiles.Insert(Dir(sDefaultSoundDirectory, "*.ogg"))

  IF Main.bSoundDebug THEN
    FOR EACH sSound IN sSoundFiles
      Main.WriteDebugLog("[Sound] Found " & sSound)
    NEXT
  ENDIF
  Main.WriteLog(sSoundFiles.Count & If(sSoundFiles.Count <> 1, " soundfiles", " soundfile") & " found.")

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' play sound with selected volume
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB PlaySnd(sFile AS String, OPTIONAL iVol AS Integer)

  DIM iVolume AS Float
  DIM sSnd AS String

  ' sound not enabled, return
  IF NOT Main.bSoundEnabled THEN RETURN

  sSnd = sDefaultSoundDirectory &/ sFile

  IF ivol THEN ' custom volume
    iVolume = iVol
  ELSE ' default volume
    iVolume = Main.iSoundVolume
  ENDIF

  IF Exist(sSnd) THEN
    IF NOT ERROR THEN
      SHELL "amixer -q sset Master playback " & iVolume & "%" WAIT
      IF NOT Main.GlobalVar["Mute"] THEN
        SHELL "aplay -q " & sSnd WAIT
        IF ERROR THEN
          Main.WriteDebugLog(("[Sound] Error playing soundfile ") & sSnd)
        ELSE
          Main.WriteLog("Playing sound " & sFile & ".")
          IF Main.bSoundDebug THEN Main.WriteDebugLog(("[Sound] Playing sound ") & sSnd & (" at volume ") & iVolume)
        ENDIF
      ELSE
        Main.WriteLog(("[Muted] Playing sound ") & sFile & ".")
      ENDIF
    ELSE
      Main.WriteDebugLog("[Sound] " & ERROR.text & " " & sSnd)
    ENDIF
  ELSE
    Main.WriteDebugLog(("[Sound] The soundfile ") & sSnd & (" doesn't exist!"))
  ENDIF

END
