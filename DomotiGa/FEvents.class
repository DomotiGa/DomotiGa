' Gambas class file

' Description:
' FEvents.class
' Future event management functions.

' Development Status:
' Not started yet, things to build are:
' Store events, triggers and actions inside the database.
' Display overview of these items on this page.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC iCurRow AS Integer
PRIVATE tRefresh AS NEW Timer
PRIVATE bAutoRefresh AS Boolean
PRIVATE bExpand AS Boolean
PRIVATE bFontBig AS Boolean

PUBLIC SUB Form_Open()

  GetEventList()

  ' create refresh timer
  tRefresh = NEW Timer AS "tRefresh"
  tRefresh.Delay = 3000 ' 3 seconds

END

PUBLIC SUB tbvEvents_ColumnClick(Column AS Integer)

  Main.SortTableView(FEvents.tbvEvents, Column, TRUE)

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' refresh tableview contents
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB tRefresh_Timer()

  GetEventList()

END

PUBLIC SUB Form_Close()

  tRefresh.Stop

END

PUBLIC SUB Form_LostFocus()

  tRefresh.Stop

END

PUBLIC SUB Form_GotFocus()

  IF bAutoRefresh THEN tRefresh.Enabled = TRUE

END

PUBLIC SUB GetEventList()

  DIM iRows, iCount AS Integer
  DIM rResult AS Result

  INC Application.Busy

  rResult = Main.hDB.Exec("SELECT * FROM events")

  IF NOT rResult THEN
    Message.Info("Error: table 'events' not found!")
    RETURN
  END IF
  iRows = rResult.Count

  WITH tbvEvents
    IF bFontBig THEN
      .Font.Size = "10"
    ELSE
      .Font.Size = "8"
    END IF
    .Columns.Count = IIf(bExpand, 7, 4)
    .Rows.Count = iRows
    .Columns[0].Title = "Id"
    .Columns[0].Width = 20
    .Columns[1].Title = ("Name")
    .Columns[1].Width = 200
    .Columns[2].Title = ("Description")
    .Columns[2].Width = 360
    .Columns[3].Title = ("Last Run")
    IF bExpand THEN
      .Columns[4].Title = ("Enabled")
      .Columns[4].Width = 55
      .Columns[5].Title = ("Log")
      .Columns[5].Width = 40
      .Columns[6].Title = ("First Run")
      .Columns[6].Width = 125
    END IF
  END WITH

  FOR iCount = 0 TO iRows - 1
    tbvEvents[iCount, 0].Text = rResult!id
    tbvEvents[iCount, 1].Text = rResult!name
    tbvEvents[iCount, 2].Text = rResult!comments
    IF rResult!lastrun THEN tbvEvents[iCount, 3].Text = Replace$(Str$(Format(rResult!lastrun, "yyyy-mm-dd hh:nn:ss")), Format(Date(), "yyyy-mm-dd") & " ", "")
    IF bExpand THEN
      tbvEvents[iCount, 4].Text = Main.DisplayBool(rResult!enabled)
      tbvEvents[iCount, 5].Text = Main.DisplayBool(rResult!log)
      IF rResult!firstrun THEN tbvEvents[iCount, 6].Text = Replace$(Str$(Format(rResult!firstrun, "yyyy-mm-dd hh:nn:ss")), Format(Date(), "yyyy-mm-dd") & " ", "")
    END IF
    rResult.MoveNext
  NEXT

FINALLY
  DEC Application.Busy

END

PUBLIC SUB Form_Resize()

  tbvEvents.Move(4, 30, ME.ClientWidth - 8, ME.ClientHeight - 31)

END

PRIVATE SUB GetTriggerName(iId AS Integer) AS String

  DIM rResultTrig AS Result

  rResultTrig = Main.hDB.Exec("SELECT name FROM triggers WHERE id = &1", iId)
  RETURN rResultTrig!name

END

PUBLIC SUB tbvEvents_DblClick()

  ' open event editor window
  iCurRow = tbvEvents.Row
  IF Main.bUserisAdmin OR NOT Main.bAuthEnabled THEN
    FEventEditor.Show()
  ELSE
    Message("Sorry, editing events is not enabled for users.\nLogin as an admin.")
  END IF

END

PUBLIC SUB tbtnRefresh_Click()

  IF tbtnRefresh.Value = TRUE THEN
    tRefresh.Start
    bAutoRefresh = TRUE
    btnRefresh.Enabled = FALSE
  ELSE
    tRefresh.Stop
    bAutoRefresh = FALSE
    btnRefresh.Enabled = TRUE
  END IF

END

PUBLIC SUB btnRefresh_Click()

  GetEventList()

END

PUBLIC SUB tbtnExpand_Click()

  IF tbtnExpand.Value = TRUE THEN
    bExpand = TRUE
    tbtnExpand.Text = ("Shrink")
  ELSE
    bExpand = FALSE
    tbtnExpand.Text = ("Expand")
  END IF

  GetEventList()

END

PUBLIC SUB tbtnFont_Click()

  IF tbtnFont.Value = TRUE THEN
    bFontBig = TRUE
    tbtnFont.Text = "Font -"
  ELSE
    bFontBig = FALSE
    tbtnFont.Text = "Font +"
  END IF

  GetEventList()

END
