' Gambas class file

' Description:
' FCameraControl.class
' Support for VISCA camera control, see CVISCA.class for more.

' Development Status:
' GUI design and code finished, needs better error checking.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008 Ron Klinkien

' Read file called COPYING for license details.

PUBLIC bPowerState AS Boolean = TRUE
PUBLIC bBacklight AS Boolean = FALSE

PRIVATE hWebcam AS VideoDevice
PUBLIC tVideo AS NEW Timer
PRIVATE Fps AS Date
PRIVATE nFps AS Integer

PUBLIC SUB Form_Open()

  DIM oObject AS Object

  IF Main.hVISCA THEN
    rbPresetRecall.Value = TRUE
    rbPresetSet.Value = FALSE
    rbPresetReset.Value = FALSE
    IF Main.bVISCAEnabled THEN Main.hVISCA.AddressSet()
    spAddress.Value = Main.iVISCACameraAddress
    cmbVideoDevice.Text = Main.sVISCAVideoDevice

    ' start timer for video capture
    tVideo = NEW Timer AS "tVideo"
    tVideo.Delay = 10
  ELSE
    ' no connection to camera, or disabled so disable control buttons
    FOR EACH oOBject IN ME.Children
      oObject.Enabled = FALSE
    NEXT
    frameStream.Enabled = TRUE
    FOR EACH oOBject IN frameStream.Children
      oObject.Enabled = TRUE
    NEXT
    frameDevice.Enabled = TRUE
    FOR EACH oOBject IN frameDevice.Children
      oObject.Enabled = TRUE
    NEXT
  END IF

END

PUBLIC SUB btnClose_Click()

  tVideo.Stop
  hWebCam = NULL

  ME.Close

END

PUBLIC SUB btnBL_Click()

  IF bBackLight THEN
    Main.hVISCA.Backlight("Off")
    btnBL.Text = "On"
    bBackLight = FALSE
  ELSE 
    Main.hVISCA.Backlight("On")
    btnBL.Text = "Off"
    bBackLight = TRUE
  END IF

END

PUBLIC SUB btnWBAuto_Click()

  Main.hVISCA.WhiteBalance("Auto")

END

PUBLIC SUB btnWBIndoor_Click()

  Main.hVISCA.WhiteBalance("Indoor")

END

PUBLIC SUB btnWBOutdoor_Click()

  Main.hVISCA.WhiteBalance("Outdoor")

END

PUBLIC SUB btnWBOnePush_Click()

  Main.hVISCA.WhiteBalance("OnePush")

END

PUBLIC SUB btnWBTrigger_Click()

  Main.hVISCA.WhiteBalance("Trigger")

END

PUBLIC SUB btnAEAuto_Click()

  Main.hVISCA.AutoExposure("Auto")
  btnAEAuto.Enabled = FALSE
  btnAEShutter.Enabled = TRUE
  btnAEBright.Enabled = TRUE
  btnAEManual.Enabled = TRUE
  btnAEIris.Enabled = TRUE
  btnAEGain.Enabled = TRUE
  btnMin.Enabled = FALSE
  btnPlus.Enabled = FALSE
  btnReset.Enabled = FALSE

END

PUBLIC SUB btnAEManual_Click()

  Main.hVISCA.AutoExposure("Manual")
  btnAEManual.Enabled = FALSE
  btnMin.Enabled = TRUE
  btnPlus.Enabled = TRUE
  btnReset.Enabled = TRUE
  btnAEShutter.Enabled = TRUE
  btnAEBright.Enabled = TRUE
  btnAEIris.Enabled = TRUE
  btnAEGain.Enabled = TRUE

END

PUBLIC SUB btnAEShutter_Click()

  Main.hVISCA.AutoExposure("Shutter")
  btnAEShutter.Enabled = FALSE
  btnMin.Enabled = TRUE
  btnPlus.Enabled = TRUE
  btnReset.Enabled = TRUE
  btnAEManual.Enabled = FALSE
  btnAEBright.Enabled = TRUE
  btnAEIris.Enabled = TRUE
  btnAEGain.Enabled = TRUE

END

PUBLIC SUB btnAEIris_Click()

  Main.hVISCA.AutoExposure("Iris")
  btnAEIris.Enabled = FALSE
  btnMin.Enabled = TRUE
  btnPlus.Enabled = TRUE
  btnReset.Enabled = TRUE
  btnAEManual.Enabled = FALSE
  btnAEShutter.Enabled = TRUE
  btnAEBright.Enabled = TRUE
  btnAEGain.Enabled = TRUE

END

PUBLIC SUB btnAEBright_Click()

  Main.hVISCA.AutoExposure("Bright")
  btnAEBright.Enabled = FALSE
  btnMin.Enabled = TRUE
  btnPlus.Enabled = TRUE
  btnReset.Enabled = TRUE
  btnAEManual.Enabled = FALSE
  btnAEShutter.Enabled = TRUE
  btnAEIris.Enabled = TRUE
  btnAEGain.Enabled = TRUE

END

PUBLIC SUB btnAEGain_Click()

  btnAEGain.Enabled = FALSE
  btnMin.Enabled = TRUE
  btnPlus.Enabled = TRUE
  btnReset.Enabled = TRUE
  btnAEManual.Enabled = FALSE
  btnAEShutter.Enabled = TRUE
  btnAEIris.Enabled = TRUE
  btnAEBright.Enabled = TRUE

END

PUBLIC SUB btnPower_Click()

  IF bPowerState THEN
    Main.hVISCA.Power("Off")
    btnPower.Text = "On"
    bPowerState = FALSE
  ELSE 
    Main.hVISCA.Power("On")
    btnPower.Text = "Off"
    bPowerState = TRUE
  END IF

END

PUBLIC SUB btnUp_MouseDown()

  Main.hVISCA.Direction("Up")

END

PUBLIC SUB btnDown_MouseDown()

  Main.hVISCA.Direction("Down")

END

PUBLIC SUB btnRight_MouseDown()

  Main.hVISCA.Direction("Right")

END

PUBLIC SUB btnLeft_MouseDown()

  Main.hVISCA.Direction("Left")

END

PUBLIC SUB btnHome_MouseDown()

  Main.hVISCA.Home()

END

PUBLIC SUB btnUpLeft_MouseDown()

  Main.hVISCA.Direction("UpLeft")

END

PUBLIC SUB btnUpRight_MouseDown()

  Main.hVISCA.Direction("UpRight")

END

PUBLIC SUB btnDownRight_MouseDown()

  Main.hVISCA.Direction("DownRight")

END

PUBLIC SUB btnDownLeft_MouseDown()

  Main.hVISCA.Direction("DownLeft")

END

PUBLIC SUB rbPresetRecall_Click()

  rbPresetRecall.Value = TRUE
  rbPresetSet.Value = FALSE
  rbPresetReset.Value = FALSE

END

PUBLIC SUB rbPresetSet_Click()

  rbPresetRecall.Value = FALSE
  rbPresetSet.Value = TRUE
  rbPresetReset.Value = FALSE

END

PUBLIC SUB rbPresetReset_Click()

  rbPresetRecall.Value = FALSE
  rbPresetSet.Value = FALSE
  rbPresetReset.Value = TRUE

END

PUBLIC SUB btnPreset1_Click()

  Main.hVISCA.Memory("0")

END

PUBLIC SUB btnPreset2_Click()

  Main.hVISCA.Memory("1")

END

PUBLIC SUB btnPreset3_Click()

  Main.hVISCA.Memory("2")

END

PUBLIC SUB btnPreset4_Click()

  Main.hVISCA.Memory("3")

END

PUBLIC SUB btnPreset5_Click()

  Main.hVISCA.Memory("4")

END

PUBLIC SUB btnPreset6_Click()

  Main.hVISCA.Memory("5")

END

PUBLIC SUB btnUp_MouseUp()

  Main.hVISCA.Direction("Stop")

END

PUBLIC SUB btnDown_MouseUp()

  Main.hVISCA.Direction("Stop")

END

PUBLIC SUB btnLeft_MouseUp()

  Main.hVISCA.Direction("Stop")

END

PUBLIC SUB btnRight_MouseUp()

  Main.hVISCA.Direction("Stop")

END

PUBLIC SUB btnUpLeft_MouseUp()

  Main.hVISCA.Direction("Stop")

END

PUBLIC SUB btnUpRight_MouseUp()

  Main.hVISCA.Direction("Stop")

END

PUBLIC SUB btnDownLeft_MouseUp()

  Main.hVISCA.Direction("Stop")

END

PUBLIC SUB btnDownRight_MouseUp()

  Main.hVISCA.Direction("Stop")

END

PUBLIC SUB btnPlus_Click()

  DIM sMode AS String

  IF btnAEShutter.Enabled = FALSE THEN 
    sMode = "Shutter"
  ELSE IF btnAEIris.Enabled = FALSE THEN 
    sMode = "Iris"
  ELSE IF btnAEBright.Enabled = FALSE THEN 
    sMode = "Bright"
  ELSE IF btnAEGain.Enabled = FALSE THEN 
    sMode = "Gain"
  END IF
  Main.hVISCA.ManualExposure(sMode, "+")

END

PUBLIC SUB btnMin_Click()

  DIM sMode AS String

  IF btnAEShutter.Enabled = FALSE THEN 
    sMode = "Shutter"
  ELSE IF btnAEIris.Enabled = FALSE THEN 
    sMode = "Iris"
  ELSE IF btnAEBright.Enabled = FALSE THEN 
    sMode = "Bright"
  ELSE IF btnAEGain.Enabled = FALSE THEN 
    sMode = "Gain"
  END IF
  Main.hVISCA.ManualExposure(sMode, "-")

END

PUBLIC SUB btnReset_Click()

  DIM sMode AS String

  IF btnAEShutter.Enabled = FALSE THEN 
    sMode = "Shutter"
  ELSE IF btnAEIris.Enabled = FALSE THEN 
    sMode = "Iris"
  ELSE IF btnAEBright.Enabled = FALSE THEN 
    sMode = "Bright"
  ELSE IF btnAEGain.Enabled = FALSE THEN 
    sMode = "Gain"
  END IF
  Main.hVISCA.ManualExposure(sMode, "Reset")

END

PUBLIC SUB btnFocusAuto_Click()

  btnFocusAuto.Enabled = FALSE
  btnFocusManual.Enabled = TRUE
  btnFocusNear.Enabled = FALSE
  btnFocusFar.Enabled = FALSE
  Main.hVISCA.Focus("Auto")

END

PUBLIC SUB btnFocusManual_Click()

  btnFocusManual.Enabled = FALSE
  btnFocusAuto.Enabled = TRUE
  btnFocusNear.Enabled = TRUE
  btnFocusFar.Enabled = TRUE
  Main.hVISCA.Focus("Manual")

END

PUBLIC SUB btnFocusNear_Click()

  btnFocusNear.Enabled = FALSE
  btnFocusManual.Enabled = FALSE
  btnFocusAuto.Enabled = TRUE
  btnFocusFar.Enabled = TRUE
  Main.hVISCA.Focus("Near")

END

PUBLIC SUB btnFocusFar_Click()

  btnFocusFar.Enabled = FALSE
  btnFocusManual.Enabled = FALSE
  btnFocusNear.Enabled = TRUE
  btnFocusAuto.Enabled = TRUE
  Main.hVISCA.Focus("Far")

END

PUBLIC SUB btnTele_Click()

  Main.hVISCA.Zoom("Tele")

END

PUBLIC SUB btnWide_Click()

  Main.hVISCA.Zoom("Wide")

END

PUBLIC SUB btnTele_MouseUp()

  Main.hVISCA.Zoom("Stop")

END

PUBLIC SUB btnWide_MouseUp()

  Main.hVISCA.Zoom("Stop")

END

PUBLIC SUB spAddress_Change()

  Main.hVISCA.ChangeAddress()

END

PUBLIC SUB btnOpen_Click()

  IF hWebCam THEN
    hWebCam = NULL
    tVideo.Stop
    btnOpen.Text = "Open"
    RETURN
  END IF
  btnOpen.Text = "Close"

  TRY hWebCam = NEW VideoDevice(cmbVideoDevice.Text)
  IF ERROR THEN
    Message.Error(("Unable to open video device!"))
    btnOpen.Text = "Open"
    RETURN
  ELSE
    IF Main.bVISCADebug THEN
      Main.WriteDebugLog("Device Bus: " & hWebCam.Features.Bus)
      Main.WriteDebugLog("Device Driver: " & hWebCam.Features.Driver & " Version: " & hWebCam.Features.Version)
      Main.WriteDebugLog("Device Name: " & hWebCam.Features.Name)
      Main.WriteDebugLog("Max.Resolution: " & hWebCam.Features.MaxWidth & "x" & hWebCam.Features.MaxHeight)
      Main.WriteDebugLog("Min. Resolution: " & hWebCam.Features.MinWidth & "x" & hWebCam.Features.MinHeight)
    END IF
  END IF

  ' hWebCam.Source = hWebCam.TV + hWebCam.PAL
  ' hardcoded part for my Sony D31 camera connected to the s-video port
  hWebCam.Source = hWebcam.SVideo ' + hWebCam.NTSC

  'hWebCam.Resize(320, 240)
  hWebCam.Resize(356, 288)
  WAIT 0.001
  tVideo.Start
  ME.Caption = hWebCam.Features.Name

END

PUBLIC SUB tVideo_Timer()

  DIM T1 AS Date
  DIM sBuf AS String

  tVideo.Stop

  TRY pbVideoOutput.Picture = hWebCam.Picture
  IF NOT ERROR THEN
    nFps = nFps + 1
    T1 = Now() - Fps
    IF Second(T1) >= 1 THEN
      ME.Caption = hWebCam.Features.Name & " (" & nFps & " fps)"
      Fps = Now()
      nFps = 0
    END IF
  END IF
  tVideo.Start

END
