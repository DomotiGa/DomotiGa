' Gambas class file

' Description:
' FToolsSerialPorts.class
' Shows which serial ports are available and which are in use.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' Read file called COPYING for license details.

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)

  ' tweak tableview
  WITH tbvPorts
    .Columns.Count = 2
    .Columns[0].Title = ("Serial Device")
    .Columns[0].Width = 100
    .Columns[1].Title = ("In use by")
    .Columns[1].Width = 160
  END WITH

  ScanPorts()

END

PUBLIC SUB btnClose_Click()

  ME.Close

END

PUBLIC SUB ScanPorts()

  DIM sSerialPort, sGroup AS String
  DIM sSerialPorts AS String[]
  DIM iCount AS Integer
  DIM rResult AS Result
  DIM sInterfaces AS String[] = ["ctx35", "irman", "sms", "gps", "temp08", "visca", "rfxcomrx", "rfxcomtx", "weeder", "dsc", "domotica", "plugwise", "zwave", "jeelabs", "plcbus", "onkyo", "denon", "currentcost", "ledmatrix", "opentherm", "rfxcomtrx", "pioneer"]

  ' fill array with available ports
  sSerialPorts = Dir("/dev", txtSearchPattern.Text)
  sSerialPorts.Sort

  ' set no of rows to number of ports found
  tbvPorts.Rows.Count = sSerialPorts.Count

  FOR EACH sSerialPort IN sSerialPorts

    sSerialPort = "/dev" &/ sSerialPort
    tbvPorts[iCount, 0].Text = sSerialPort
    tbvPorts[iCount, 1].Text = ("(unassigned)")

    FOR EACH sGroup IN sInterfaces
      rResult = Main.hDB.Exec("SELECT * FROM " & DB.Quote("settings_" & sGroup) & " WHERE id = 1")

      IF (rResult.Count >= 1) THEN
        FOR EACH rResult
          IF rResult!serialport = sSerialPort AND sGroup <> "rfxcomrx" AND sGroup <> "rfxcomtx" AND sGroup <> "onkyo" AND sGroup <> "denon" THEN
            sGroup = Upper$(sGroup)
            IF rResult!enabled = FALSE THEN
              sGroup &= (" (disabled)")
              CONTINUE
            END IF
            tbvPorts[iCount, 1].Text = sGroup
          END IF
          IF sGroup = "rfxcomrx" THEN
            IF rResult!serialport = sSerialPort AND rResult!type = "serial" THEN
              sGroup = Upper$(sGroup)
              IF rResult!enabled = FALSE THEN
                sGroup &= (" (disabled)")
                CONTINUE
              END IF
              tbvPorts[iCount, 1].Text = sGroup
            END IF
          END IF
          IF sGroup = "rfxcomtx" THEN
            IF rResult!serialport = sSerialPort AND rResult!type = "serial" THEN
              sGroup = Upper$(sGroup)
              IF rResult!enabled = FALSE THEN
                sGroup &= (" (disabled)")
                CONTINUE
              END IF
              tbvPorts[iCount, 1].Text = sGroup
            END IF
          END IF
          IF sGroup = "onkyo" THEN
            IF rResult!serialport = sSerialPort AND rResult!type = "serial" THEN
              sGroup = Upper$(sGroup)
              IF rResult!enabled = FALSE THEN
                sGroup &= (" (disabled)")
                CONTINUE
              END IF
              tbvPorts[iCount, 1].Text = sGroup
            END IF
          END IF
          IF sGroup = "denon" THEN
            IF rResult!serialport = sSerialPort AND rResult!type = "serial" THEN
              sGroup = Upper$(sGroup)
              IF rResult!enabled = FALSE THEN
                sGroup &= (" (disabled)")
                CONTINUE
              END IF
              tbvPorts[iCount, 1].Text = sGroup
            END IF
          END IF
          IF sGroup = "pioneer" THEN
            IF rResult!serialport = sSerialPort AND rResult!type = "serial" THEN
              sGroup = Upper$(sGroup)
              IF rResult!enabled = FALSE THEN
                sGroup &= (" (disabled)")
                CONTINUE
              END IF
              tbvPorts[iCount, 1].Text = sGroup
            END IF
          END IF
        NEXT
      END IF
    NEXT
    INC iCount
  NEXT

END

PUBLIC SUB btnRescan_Click()

  ScanPorts()

END

PUBLIC SUB txtSearchPattern_KeyPress()

  ScanPorts()

END
