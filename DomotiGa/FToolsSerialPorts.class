' Gambas class file

' Description:
' FToolsSerialPorts.class
' Shows which serial ports are available and which are in use.

' Development Status:
' Works.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008 Ron Klinkien

' Read file called LICENSE for license details.

PUBLIC SUB Form_Open()

  ME.Move(FMain.X + 50, FMain.Y + 70)

  ' tweak tableview
  WITH tbvPorts
    .Columns.Count = 2
    .Columns[0].Title = ("Serial Device")
    .Columns[0].Width = 100
    .Columns[1].Title = ("In use by")
    .Columns[1].Width = 160
  END WITH

  ScanPorts()

END

PUBLIC SUB btnClose_Click()

  ME.Close

END

PUBLIC SUB ScanPorts()

  DIM sSerialPort AS String
  DIM sSerialPorts AS String[]
  DIM iCount AS Integer
  DIM rResult AS Result
  DIM sGroup AS String
  DIM sInterfaces AS String[] = ["ctx35", "irman", "sms", "gps", "onewire", "visca", "rfxcom", "weeder"]

  ' fill array with available ports
  sSerialPorts = Dir("/dev", txtSearchPattern.Text)
  sSerialPorts.Sort

  ' set no of rows to number of ports found
  tbvPorts.Rows.Count = sSerialPorts.Count

  FOR EACH sSerialPort IN sSerialPorts

    sSerialPort = "/dev" &/ sSerialPort
    tbvPorts[iCount, 0].Text = sSerialPort
    tbvPorts[iCount, 1].Text = ("(unassigned)")

    FOR EACH sGroup IN sInterfaces
      rResult = Main.hDB.Exec("SELECT * FROM " & DB.Quote("settings_" & sGroup) & " WHERE id = 1")

      IF (rResult.Count >= 1) THEN
        FOR EACH rResult

          IF rResult!serialport = sSerialPort AND sGroup <> "rfxcom" THEN
            sGroup = Upper$(sGroup)
            IF rResult!enabled = FALSE THEN
              sGroup &= (" (disabled)")
              CONTINUE
            END IF
            tbvPorts[iCount, 1].Text = sGroup
          END IF
          IF sGroup = "rfxcom" THEN
            IF rResult!serialport = sSerialPort AND rResult!type = "serial" THEN
              sGroup = Upper$(sGroup)
              IF rResult!enabled = FALSE THEN
                sGroup &= (" (disabled)")
                CONTINUE
              END IF
              tbvPorts[iCount, 1].Text = sGroup
            END IF
          END IF
        NEXT
      END IF
    NEXT
    INC iCount
  NEXT
END

PUBLIC SUB btnRescan_Click()

  ScanPorts()

END

PUBLIC SUB txtSearchPattern_KeyPress()

  ScanPorts()

END
