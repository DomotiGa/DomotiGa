' Gambas class file

' Description:
' FWeather.class
' Form for showing weather info.

' Development Status:
' Imported from Kris's own project, needs testing.

' DomotiGa - an open source home automation program.
' Copyright (C) Ron Klinkien, The Netherlands.

' This module is written by Kris Wauters on February, 13th - 2010
' For more info or help, mailto: kris@digitalplayground.be

' Read file called COPYING for license details.

PRIVATE StrCity AS NEW String[]
PRIVATE StrCountry AS NEW String[]
PRIVATE StrCityCode AS NEW String[]

PUBLIC SUB Form_Open()

  IF Main.bWeatherBugEnabled THEN
    PopulateButtons()
    TxtCityCode.Text = Main.sWeatherBugCityCode
    TxtCity.Text = Main.sWeatherBugCity
    StrCity.Add(Main.sWeatherBugCity)
    StrCountry.Add(Main.sWeatherBugCountryName)
    StrCityCode.Add(Main.sWeatherBugCityCode)
    CmbCities.add(StrCity[0] & " [" & StrCountry[0] & "]")
    CmbCities_Click
  ELSE
    CmbCities.Enabled = FALSE
    TxtCity.Enabled = FALSE
    BtnSearch.Enabled = FALSE
    BtnView.Enabled = FALSE
  END IF

END

PUBLIC SUB Form_Resize()

  ScrollView1.Move(0, 0, ME.ClientWidth - 18, ME.ClientHeight - 65)
  TabStrip1.Move(3, 32, ME.ClientWidth - 5, ME.ClientHeight - 32)

END

PUBLIC SUB PopulateButtons()

  DIM rFeed AS Result
  DIM hButton AS Button

  ' populate feeds toolbutton
  TRY rFeed = Main.hDB.Exec("SELECT * FROM weatherfeeds WHERE enabled is TRUE")
  IF rFeed.Count THEN
    FOR EACH rFeed
    IF NOT rFeed!name OR rFeed!enabled = FALSE THEN CONTINUE
    hButton = NEW Button(vbFeeds) AS "FeedButton"
     WITH hButton
      .Text = rFeed!name
      .Height = 28
      .Width = 84
      .Tag = rFeed!id
    END WITH
    NEXT
  END IF

END

PUBLIC SUB FeedButton_Click()

  DIM iFeed AS Integer = LAST.tag
  DIM oObject AS Object

  ' enable all buttons, then disable selected one
  FOR EACH oObject IN vbFeeds.Children
    oObject.Enabled = TRUE
    IF oObject.Tag = iFeed THEN oObject.Enabled = FALSE
  NEXT
  DisplayFeed(iFeed)

END

PUBLIC SUB DisplayFeed(iFeed AS Integer)

  DIM rFeed AS Result

  TRY rFeed = Main.hDB.Exec("SELECT * FROM weatherfeeds where id=" & iFeed)
  IF rFeed THEN
    InitSatelliteImage(rFeed!url)
  END IF

END

PUBLIC SUB BtnSearch_Click()

  '--- declare variables ---
  DIM StrFile, StrLine AS String
  DIM fFile AS file
  DIM IntI AS Integer

  CmbCities.Clear
  StrCity.Clear
  StrCountry.Clear
  StrCityCode.Clear
  BtnView.Enabled = FALSE

  '--- get info from weatherbug site ---
  StrFile = XMLParser.ParseXML("http://api.wxbug.net/getLocationsXML.aspx?ACode=" & Trim(Main.sWeatherBugID) & "&SearchString=" & TxtCity.Text)
  IF Len(strfile) > 0 THEN
    '--- put all retrieved cities in an array ---
    fFile = OPEN StrFile FOR INPUT
    WHILE NOT Eof(fFile)
      LINE INPUT #fFile, StrLine
      IF Left(StrLine, 50) = "aws:weather|aws:locations|aws:location|cityname|=|" THEN
        StrCity.add(Right(strline, Len(strline) - 50))
      END IF
      IF Left(strline, 53) = "aws:weather|aws:locations|aws:location|countryname|=|" THEN
        StrCountry.add(Right(strline, Len(strline) - 53))
      END IF
      IF Left(StrLine, 50) = "aws:weather|aws:locations|aws:location|citycode|=|" THEN
        StrCityCode.add(Right(strline, Len(strline) - 50))
      END IF
    WEND
    fFile.Close
    fFile = NULL
    KILL strfile
    '--- put array in combobox ---
    FOR IntI = 0 TO StrCity.count - 1
      IF Len(Trim(StrCityCode[IntI])) > 1 THEN ' special code, we only use non-US cities
        CmbCities.add(StrCity[IntI] & " [" & StrCountry[IntI] & "]")
      END IF
    NEXT
    CmbCities_Click
  END IF

END

PUBLIC SUB CmbCities_Click()

  '--- declare variables ---
  DIM IntI AS Integer
  DIM StrCityTmp, StrCountryTmp AS String

  IF CmbCities.Index > -1 THEN
    StrCityTmp = Trim(Main.ParseTag(CmbCities.text, 1, "["))
    StrCountryTmp = Trim(Main.ParseTag(CmbCities.Text, 2, "["))
    StrCountryTmp = Left(StrCountryTmp, Len(StrCountryTmp) - 1)
    FOR IntI = 0 TO StrCity.count - 1
      IF StrCity[IntI] = StrCityTmp AND StrCountry[IntI] = StrCountryTmp
        TxtCityCode.Text = StrCityCode[IntI]
        BtnView.Enabled = TRUE
        RETURN
      END IF
    NEXT
  END IF

END

PUBLIC SUB TxtCity_KeyPress()

  CmbCities.Clear
  TxtCityCode.text = ""
  BtnView.Enabled = FALSE

END

PUBLIC SUB BtnView_Click()

  '--- declare variables ---
  DIM IntTmp AS Integer

  IntTmp = TabStrip1.Index
  InitForeCast()
  InitLiveWeather()
  TabStrip1.Index = IntTmp

END

'--- when an URL is given, try to fetch the animated satellite image ---
PRIVATE SUB InitSatelliteImage(sUrl AS String)

  '--- declare variables ---
  DIM StrFile AS String

  StrFile = XMLParser.GetFileFromInternet(sUrl)
  IF Len(StrFile) > 0 THEN
    MvSatImage.Path = StrFile
    MvSatImage.Playing = TRUE
    MvSatImage.Refresh
    MvSatImage.Show
  ENDIF

END

'--- initialises the "Forecast" panel ---
PRIVATE SUB InitForeCast()

    '--- declare variables ---
  DIM StrFile, StrLine, StrPic, StrCondition AS String
  DIM fFile AS File
  DIM IntI AS Integer

  TabStrip1.Index = 1
  StrFile = XMLParser.ParseXML("http://api.wxbug.net/getForecastRSS.aspx?ACode=" & Trim(Main.sWeatherBugID) & "&citycode=" & TxtCityCode.Text & "&unittype=1&outputtype=1")
  'IntI = 0
  IF Len(StrFile) > 0 THEN
    fFile = OPEN StrFile FOR INPUT
    WHILE NOT Eof(fFile)
      LINE INPUT #fFile, StrLine
      '--- put names of days onto frames ---
      IF Left(StrLine, 51) = "aws:weather|aws:forecasts|aws:forecast|aws:title|=|" THEN
        INC IntI
        Main.SetTextProperty("Frm" & CStr(IntI), (Right(StrLine, Len(StrLine) - 51)), ME)
      END IF
      '--- put condition pictures in frames ---
      IF Left(StrLine, 56) = "aws:weather|aws:forecasts|aws:forecast|aws:image|icon|=|" THEN
        StrCondition = Main.ParseTag(Right(StrLine, 7), 1, ".")
        SELECT CASE IntI
          CASE 1
            Pic1.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          CASE 2
            Pic2.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          CASE 3
            Pic3.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          CASE 4
            Pic4.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          CASE 5
            Pic5.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          CASE 6
            Pic6.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
          CASE 7
            Pic7.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/55x46/en/trans/cond" & StrCondition & ".png"))
        END SELECT
      END IF
      '--- put global forecast onto labels ---
      IF Left(StrLine, 62) = "aws:weather|aws:forecasts|aws:forecast|aws:short-prediction|=|" THEN
        Main.SetTextProperty("LblForeCast" & CStr(IntI), Main.TranslateViaInternet(Right(StrLine, Len(StrLine) - 62), Main.sAppLanguage), ME)
      END IF
      '--- put high and low temperature onto labels ---
      IF Left(StrLine, 50) = "aws:weather|aws:forecasts|aws:forecast|aws:high|=|" THEN
        Main.SetTextProperty("LblTempHigh" & CStr(IntI), Main.Translate("High:") & " " & Right(StrLine, Len(StrLine) - 50) & " °C", ME)
      END IF
      IF Left(StrLine, 49) = "aws:weather|aws:forecasts|aws:forecast|aws:low|=|" THEN
        Main.SetTextProperty("LblTempLow" & CStr(IntI), Main.Translate("Low:") & " " & Right(StrLine, Len(StrLine) - 49) & " °C", ME)
      END IF
      '--- put large forecast into textareas ---
      IF Left(StrLine, 56) = "aws:weather|aws:forecasts|aws:forecast|aws:prediction|=|" THEN
        Main.SetTextProperty("TxtPrediction" & CStr(IntI), Trim(Main.TranslateViaInternet(Right(StrLine, Len(StrLine) - 56), Main.sAppLanguage)), ME)
      END IF
    WEND
    fFile.Close
    fFile = NULL
    KILL strfile
  END IF

END

'--- initialises the "live weather" panel ---
PRIVATE SUB InitLiveWeather()

  '--- declare variables ---
  DIM StrFile, StrLine, StrCondition, StrSunUp, StrSunDown AS String
  DIM fFile AS File
  DIM IntI AS Integer

  TRY PicCurrentWeather.Picture.Clear
  TRY PicMoon.Picture.Clear
  TRY PicWindDirectionAverage.Picture.Clear
  TRY PicWindDirectionCurrent.Picture.Clear
  TabStrip1.Index = 0
  TxtWeather.Text = ""
  StrFile = XMLParser.ParseXML("http://api.wxbug.net/getLiveWeatherRSS.aspx?ACode=" & Trim(Main.sWeatherBugID) & "&citycode=" & TxtCityCode.Text & "&unittype=1&outputtype=1")
  IF Len(StrFile) > 0 THEN
    fFile = OPEN StrFile FOR INPUT
    WHILE NOT Eof(fFile)
      LINE INPUT #fFile, StrLine
      '--- weather condition icon ---
      IF Left(StrLine, 48) = "aws:weather|aws:ob|aws:current-condition|icon|=|" THEN
        StrCondition = Main.ParseTag(Right(StrLine, 7), 1, ".")
        ME.PicCurrentWeather.Picture = Picture.Load(XMLParser.GetFileFromInternet("http://img.weather.weatherbug.com/forecast/icons/localized/160x134/en/trans/cond" & StrCondition & ".png"))
      END IF
      '--- moon icon ---
      IF Left(StrLine, 51) = "aws:weather|aws:ob|aws:moon-phase|moon-phase-img|=|" THEN
        TRY ME.PicMoon.picture = Picture.Load(XMLParser.GetFileFromInternet(Right(StrLine, Len(StrLine) - 51)))
      END IF
      '--- general weather-info ---
      IF Left(StrLine, 43) = "aws:weather|aws:ob|aws:current-condition|=|" THEN
        LblGeneralWeather.Text = Main.TranslateViaInternet(Right(StrLine, Len(StrLine) - 43), Main.sAppLanguage)
      END IF
      '--- temperature ---
      IF Left(StrLine, 35) = "aws:weather|aws:ob|aws:dew-point|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Dew-point temperature:") & " " & Right(StrLine, Len(StrLine) - 35) & " °C" & gb.NewLine
      END IF
      IF Left(StrLine, 36) = "aws:weather|aws:ob|aws:feels-like|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Feels-like temperature:") & " " & Right(StrLine, Len(StrLine) - 36) & " °C" & gb.NewLine & gb.NewLine
      END IF
      '--- wind ---
      IF Left(StrLine, 40) = "aws:weather|aws:ob|aws:gust-direction|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Wind gust direction:") & " " & Right(StrLine, Len(StrLine) - 40) & gb.NewLine
      END IF
      IF Left(StrLine, 36) = "aws:weather|aws:ob|aws:gust-speed|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Wind gust speed:") & " " & Right(StrLine, Len(StrLine) - 36) & " " & Main.Translate("km/h") & gb.NewLine & gb.NewLine
      END IF
      '--- humidity ---
      IF Left(StrLine, 34) = "aws:weather|aws:ob|aws:humidity|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Humidity:") & " " & Right(StrLine, Len(StrLine) - 34) & " %" & gb.NewLine
      END IF
      IF Left(StrLine, 39) = "aws:weather|aws:ob|aws:humidity-high|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Humidity (high):") & " " & Right(StrLine, Len(StrLine) - 39) & " %" & gb.NewLine
      END IF
      IF Left(StrLine, 38) = "aws:weather|aws:ob|aws:humidity-low|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Humidity (low):") & " " & Right(StrLine, Len(StrLine) - 38) & " %" & gb.NewLine & gb.NewLine
      END IF
      '--- pressure ---
      IF Left(StrLine, 33) = "aws:weather|aws:ob|aws:pressure|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Pressure:") & " " & Right(StrLine, Len(StrLine) - 33) & " mb" & gb.NewLine
      END IF
      IF Left(StrLine, 39) = "aws:weather|aws:ob|aws:pressure-high|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Pressure (high):") & " " & Right(StrLine, Len(StrLine) - 39) & " mb" & gb.NewLine
      END IF
      IF Left(StrLine, 38) = "aws:weather|aws:ob|aws:pressure-low|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Pressure (low):") & " " & Right(StrLine, Len(StrLine) - 38) & " mb" & gb.NewLine & gb.NewLine
      END IF
      '--- rain ---
      IF Left(StrLine, 36) = "aws:weather|aws:ob|aws:rain-today|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Rain (today):") & " " & Right(StrLine, Len(StrLine) - 36) & " mm" & gb.NewLine
      END IF
      IF Left(StrLine, 36) = "aws:weather|aws:ob|aws:rain-month|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Rain (this month):") & " " & Right(StrLine, Len(StrLine) - 36) & " mm" & gb.NewLine
      END IF
      IF Left(StrLine, 35) = "aws:weather|aws:ob|aws:rain-year|=|" THEN
        TxtWeather.Text = TxtWeather.Text & Main.Translate("Rain (this year):") & " " & Right(StrLine, Len(StrLine) - 35) & " mm" 
      END IF
      '--- high/low temperature ---
      IF Left(StrLine, 35) = "aws:weather|aws:ob|aws:temp-high|=|" THEN
        LblTempHigh.text = Main.Translate("Maximum:") & " " & Right(StrLine, Len(StrLine) - 35) & " °C"
      END IF
      IF Left(StrLine, 34) = "aws:weather|aws:ob|aws:temp-low|=|" THEN
        LblTempLow.text = Main.Translate("Minimum:") & " " & Right(StrLine, Len(StrLine) - 34) & " °C"
      END IF
      '--- sun up ---
      IF Left(StrLine, 49) = "aws:weather|aws:ob|aws:sunrise|aws:hourhour-24|=|" THEN
        StrSunUp = Right(StrLine, Len(StrLine) - 49)
      END IF
      IF Left(StrLine, 50) = "aws:weather|aws:ob|aws:sunrise|aws:minutenumber|=|" THEN
        StrSunUp = StrSunUp & ":" & Right(StrLine, Len(StrLine) - 50)
      END IF
      IF Left(StrLine, 50) = "aws:weather|aws:ob|aws:sunrise|aws:secondnumber|=|" THEN
        StrSunUp = StrSunUp & ":" & Right(StrLine, Len(StrLine) - 50)
        LblSunRise.Text = Main.Translate("Sunrise:") & " " & StrSunUp
      END IF
      '--- sun down ---
      IF Left(StrLine, 48) = "aws:weather|aws:ob|aws:sunset|aws:hourhour-24|=|" THEN
        StrSunDown = Right(StrLine, Len(StrLine) - 48)
      ENDIF
      IF Left(StrLine, 49) = "aws:weather|aws:ob|aws:sunset|aws:minutenumber|=|" THEN
        StrSunDown = StrSunDown & ":" & Right(StrLine, Len(StrLine) - 49)
      END IF
      IF Left(StrLine, 49) = "aws:weather|aws:ob|aws:sunset|aws:secondnumber|=|" THEN
        StrSunDown = StrSunDown & ":" & Right(StrLine, Len(StrLine) - 49)
        LblSunset.Text = Main.Translate("Sunset:") & " " & StrSunDown
      END IF
      '--- current wind ---
      IF Left(StrLine, 36) = "aws:weather|aws:ob|aws:wind-speed|=|" THEN
        ME.LblWindSpeedCurrent.Text = Right(StrLine, Len(StrLine) - 36) & " " & Main.Translate("km/h")
      END IF
      IF Left(StrLine, 40) = "aws:weather|aws:ob|aws:wind-direction|=|" THEN
        TRY ME.PicWindDirectionCurrent.Picture = Picture.Load(XMLParser.ReturnWindDirectionPic(Right(StrLine, Len(StrLine) - 40)))
      END IF
      '--- average wind ---
      IF Left(StrLine, 40) = "aws:weather|aws:ob|aws:wind-speed-avg|=|" THEN
        ME.LblWindSpeedAverage.Text = Right(StrLine, Len(StrLine) - 40) & " " & Main.Translate("km/h")
      END IF
      IF Left(StrLine, 44) = "aws:weather|aws:ob|aws:wind-direction-avg|=|" THEN
        TRY ME.PicWindDirectionAverage.Picture = Picture.Load(XMLParser.ReturnWindDirectionPic(Right(StrLine, Len(StrLine) - 44)))
      END IF
    WEND
    fFile.Close
    fFile = NULL
    KILL StrFile
  END IF

END
