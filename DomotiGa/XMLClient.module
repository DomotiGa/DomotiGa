' Gambas module file

' Description:
' XMLRPC.module
' Support for client/server setup via XMLRPC interface.

' Development Status:
' Sort of working, needs better error checking.

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2011 Ron Klinkien

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' let server reload config and restart module named sModule
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION ModuleRestart(sModule AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("module.restart", [XmlRpc.xstring], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sModule)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully (re)started '") & sModule & ("' module on server."))
  ELSE
    Main.WriteLog(("Error: There was a problem (re)starting ") & sModule & (" module on server, check it's log."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send e-mail
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SendEmail(sTo AS String, sSubject AS String, sBody AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("send.email", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sTo)
  vVar.Add(sSubject)
  vVar.Add(sBody)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully sent e-mail to '") & sTo & "'.")
  ELSE
    Main.WriteLog(("Error: There was a problem sending e-mail to ") & sTo & ".")
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send tweet
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SendTweet(sText AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("send.tweet", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sText)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully sent tweet to 'http://twitter.com/") & Main.sTwitterUser & "'.")
  ELSE
    Main.WriteLog(("Error: There was a problem sending tweet to 'http://twitter.com/") & Main.sTwitterUser & "'.")
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send sms
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SendSMS(sTo AS String, sText AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("send.sms", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sTo)
  vVar.Add(sText)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully sent SMS to '") & sTo & "'.")
  ELSE
    Main.WriteLog(("Error: There was a problem sending SMS to '") & sTo & "'.")
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set house mode
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SetHouseMode(sMode AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("set.housemode", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sMode)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully set House mode to '") & sMode & "'.")
  ELSE
    Main.WriteLog(("Error: There was a problem setting House mode to '") & Main.Caps(sMode) & "'.")
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set mute mode
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SetMuteMode(bMode AS Boolean)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("set.mutemode", [XmlRpc.xBoolean], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(bMode)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully set Mute mode to '") & IIf(bMode, "Audio Disabled", "Audio Enabled") & "'.")
  ELSE
    Main.WriteLog(("Error: There was a problem setting Mute mode to '") & bMode & "'.")
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set device value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION DeviceSetDevice(sDevice AS String, sValue AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("device.setdevice", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sDevice)
  vVar.Add(sValue)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem setting value of device '") & sDevice & "'.")
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' create rrdtool databases
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION CreateRRDs(iId AS Integer)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("rrdtool.createrrds", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(iId)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem creating rrdtool databases."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set alarm pin
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SetAlarmPin(sPin AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("set.alarmpin", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPin)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully set Alarm pin."))
  ELSE
    Main.WriteLog(("Error: There was a problem setting Alarm pin."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set alarm mode
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SetAlarmMode(sMode AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("set.alarmmode", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sMode)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully set Alarm mode."))
  ELSE
    Main.WriteLog(("Error: There was a problem setting Alarm mode."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' play sound
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION PlaySound(sSound AS String, iVolume AS Integer)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("play.sound", [XmlRpc.xString, XmlRpc.xInteger], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sSound)
  vVar.Add(iVolume)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem playing sound."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' speak voicetext
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION VoiceTextSpeak(sText AS String, sVoice AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("voicetext.speak", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sText)
  vVar.Add(sVoice)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem speaking voicetext."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' display led matrix message
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION DisplayLEDMessage(sId AS String, sText AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("display.ledmessage", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sId)
  vVar.Add(sText)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem displaying led message."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set audio control
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION AVSetControl(sModel AS String, sCmd AS String, sValue AS String, sAddress AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("av.setcontrol", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sModel)
  vVar.Add(sCmd)
  vVar.Add(sValue)
  vVar.Add(sAddress)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem controlling audio/video device '") & sModel & ("' with '") & sCmd & "'.")
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' get audio control
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION AVGetControl(sModel AS String, sCmd AS String, sAddress AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("av.getcontrol", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sModel)
  vVar.Add(sCmd)
  vVar.Add(sAddress)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem getting audio/video device setting '") & sModel & ("' with '") & sCmd & "'.")
  END IF

END

PUBLIC FUNCTION GetGlobalVars()

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM Result AS RpcArray
  DIM vValue AS Variant
  DIM sVar AS String
  DIM i AS Integer

  fRpc = NEW RpcFunction("globalvar.get", NULL, XmlRpc.xArray)
  cRpc = NEW RpcClient(fRpc)

  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  TRY Result = cRpc.Call(NULL)
  IF ERROR THEN
    Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  ELSE
    FOR i = 0 TO (Result.Count - 1) / 2
      vValue = Result.Pop()
      sVar = Result.Pop()
      Main.GlobalVar[sVar] = vValue
    NEXT
  ENDIF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set global var
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SetGlobalVar(sVar AS String, sValue AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("globalvar.set", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sVar)
  vVar.Add(sValue)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully set '") & sVar & ("' to '") & sValue & "'.")
  ELSE
    Main.WriteLog(("Error: There was a problem setting '") & sVar & ("' to '") & sValue & "'.")
  ENDIF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' save global var to database
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SaveGlobalVars()

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("globalvar.save", NULL, XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort

  TRY bOk = cRpc.Call(NULL)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog("Succesfully saved globalvars to database.")
  ELSE
    Main.WriteLog("Error: There was Saving global vars to database.")
  ENDIF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' delete globalvar
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION DelGlobalVar(sVar AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("globalvar.del", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sVar)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully deleted '") & sVar & "'.")
  ELSE
    Main.WriteLog(("Error: There was a problem deleting '") & sVar & "'.")
  ENDIF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' cul simulate packet
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION CULSimulate(sPacket AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("cmdr.culsimulate", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPacket)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem simulating CUL packet '") & sPacket & "'.")
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' cul queuecommand
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION CULQueueCommand(sPacket AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("cmdr.culqueuecommand", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPacket)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem queueing CUL command '") & sPacket & "'.")
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' plcbus send command
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION PLCBUSTXCommand(sAddress AS String, sCmd AS String, bAck AS Boolean, bData AS Byte)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("cmdr.plcbustxcommand", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xBoolean, XmlRpc.xInteger], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sAddress)
  vVar.Add(sCmd)
  vVar.Add(bAck)
  vVar.Add(bData)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem sending PLCBUS command for '") & sAddress & "'.")
  END IF

END