' Gambas module file

' Description:
' XMLRPC.module
' Support for client/server setup via XMLRPC interface.

' Development Status:
' Sort of working, needs better error checking.

' DomotiGa - an open source home automation program.
' Copyright(C) 2009 Ron Klinkien

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' let server reload config and restart module named sModule
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION ModuleRestart(sModule AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("module.restart", [XmlRpc.xstring], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sModule)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully (re)started '") & sModule & ("' module on server."))
  ELSE
    Main.WriteLog(("Error: There was a problem (re)starting ") & sModule & (" module on server, check it's log."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send e-mail
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SendEmail(sTo AS String, sSubject AS String, sBody AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("send.email", [XmlRpc.xString, XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sTo)
  vVar.Add(sSubject)
  vVar.Add(sBody)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully sent e-mail to '") & sTo & ("'."))
  ELSE
    Main.WriteLog(("Error: There was a problem sending e-mail to ") & sTo & ("."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send tweet
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SendTweet(sText AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("send.tweet", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sText)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully sent tweet to 'http://twitter.com/") & Main.sTwitterUser & ("'."))
  ELSE
    Main.WriteLog(("Error: There was a problem sending tweet to 'http://twitter.com/") & Main.sTwitterUser & ("'."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' send sms
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SendSMS(sTo AS String, sText AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("send.sms", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sTo)
  vVar.Add(sText)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully sent SMS to '") & sTo & ("'."))
  ELSE
    Main.WriteLog(("Error: There was a problem sending SMS to '") & sTo & ("'."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set house mode
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SetHouseMode(sMode AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("set.housemode", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sMode)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully set House mode to '") & sMode & ("'."))
  ELSE
    Main.WriteLog(("Error: There was a problem setting House mode to '") & Main.Caps(sMode) & ("'."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set mute mode
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SetMuteMode(bMode AS Boolean)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("set.mutemode", [XmlRpc.xBoolean], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(bMode)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully set Mute mode to '") & IIf(bMode, "Audio Disabled", "Audio Enabled") & ("'."))
  ELSE
    Main.WriteLog(("Error: There was a problem setting Mute mode to '") & bMode & ("'."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set device value
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION DeviceSetDevice(sDevice AS String, sValue AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("device.setdevice", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sDevice)
  vVar.Add(sValue)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem setting value of device '") & sDevice & ("'."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set alarm pin
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SetAlarmPin(sPin AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("set.alarmpin", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sPin)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully set Alarm pin."))
  ELSE
    Main.WriteLog(("Error: There was a problem setting Alarm pin."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' set alarm mode
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION SetAlarmMode(sMode AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("set.alarmmode", [XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sMode)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF bOk THEN
    Main.WriteLog(("Succesfully set Alarm mode."))
  ELSE
    Main.WriteLog(("Error: There was a problem setting Alarm mode."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' play sound
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION PlaySound(sSound AS String, iVolume AS Integer)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("play.sound", [XmlRpc.xString, XmlRpc.xInteger], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sSound)
  vVar.Add(iVolume)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem playing sound."))
  END IF

END

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' speak voicetext
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC FUNCTION VoiceTextSpeak(sText AS String, sVoice AS String)

  DIM fRpc AS RpcFunction
  DIM cRpc AS RpcClient
  DIM vVar AS NEW Variant[]
  DIM bOk AS Boolean

  fRpc = NEW RpcFunction("voicetext.speak", [XmlRpc.xString, XmlRpc.xString], XmlRpc.xBoolean)
  cRpc = NEW RpcClient(fRpc)
  cRpc.URL = "http://" & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort
  vVar.Add(sText)
  vVar.Add(sVoice)

  TRY bOk = cRpc.Call(vVar)
  IF ERROR THEN Main.WriteLog(("Error: ") & ERROR.Text & (" when posting to URL 'http://") & Main.sXMLRPCHost & ":" & Main.iXMLRPCPort & "'")
  IF NOT bOk THEN
    Main.WriteLog(("Error: There was a problem speaking voicetext."))
  END IF

END