' Gambas module file

' Description:
' Energy.module
' Routines for logging energy usage.
' Need to check accuracy!

' DomotiGa - an open source home automation program.
' Copyright(C) 2008-2010 Ron Klinkien

' Read file called COPYING for license details.

'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' read values from rfxmeter and pulse devices and write values to *_usage tables
'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PUBLIC SUB Log()

  DIM rResult AS Result
  DIM iRFX, iRFXMeter, iFactor AS Integer
  DIM iUsage, iNewCounter, iPrevCounter, iValue AS Float
  DIM aRFXMeters AS String[] = ["RFXPwr Power", "RFXPulse Gas", "RFXPulse Water", "RFXPulse Power"]
  DIM sMeter, sTable AS String

  ' lookup id's for device types
  FOR EACH sMeter IN aRFXMeters
    ' first find devicetype id's
    TRY rResult = Main.hDB.Exec("SELECT id FROM devicetypes WHERE name = &1 ", sMeter)
    IF NOT ERROR THEN
      iRFX = rResult!id
    ELSE
      Main.WriteDebugLog(("[Energy] No Devicetype called '") & sMeter & ("' found!"))
      RETURN
    ENDIF

    ' then find device with this devicetype
    rResult = Main.hDB.Exec("SELECT value, id FROM devices WHERE module = &1 AND enabled is TRUE", iRFX)

    ' we currently only support one of each type
    IF rResult.Count = 1 THEN
      ' device value is not filled yet, nothing to store
      IF NOT rResult!value THEN RETURN
      iNewCounter = CFloat(rResult!value)
      iRFXMeter = rResult!id

      ' construct table name
      SELECT sMeter
        CASE "RFXPwr Module", "RFXPwr Power"
          sTable = "power_usage"
        CASE "RFXPulse Power"
          sTable = "power_usage"
        CASE "RFXPulse Gas"
          sTable = "gas_usage"
        CASE "RFXPulse Water"
          sTable = "water_usage"
      END SELECT

      ' get previous counter value
      rResult = Main.hDB.Exec(Subst("SELECT counter FROM &1 ORDER BY stamp DESC LIMIT 1", sTable))

      IF rResult.Count = 1 THEN
        iPrevCounter = rResult!counter
        iUsage = iNewCounter - iPrevCounter
        ' calculate right amount used
        SELECT sMeter
          CASE "RFXPwr Power", "RFXPulse Power"
            iValue = iUsage * 10 ' every pulse is 0.1 watt
          CASE "RFXPulse Gas"
            iValue = iUsage / 100 ' every pulse is 0.01 m3
          CASE "RFXPulse Water"
            iValue = iUsage / 2 ' every pulse is 0.5 liter
        END SELECT
      ELSE
        iUsage = 0
        iValue = 0
      END IF

      ' add new value to usage table
      Main.hDB.Begin()
      rResult = Main.hDB.Create(sTable)
      rResult!consumption = iUsage
      rResult!stamp = Now()
      rResult!counter = iNewCounter
      rResult.Update()
      Main.hDB.Commit()

      ' update value2 field of device with energy usage
      rResult = Main.hDB.Exec("UPDATE devices SET value2 = &1 WHERE id = &2", CStr(iValue), iRFXMeter)
    ELSE
      IF rResult.Count > 1 THEN Main.WriteDebugLog(("[Energy] More then one '") & sMeter & ("' device found, not supported!"))
    END IF
  NEXT

CATCH
  Main.WriteDebugLog(("[Energy] Error '") & ERROR.Text & ("' at '") & ERROR.Where)

END
